;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ		I D E N T I F I C A T I O N	D I V I S I O N 	      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
IDENTIFICATION DIVISION.
program-id.		'PEPSI'.
author. 		Victor Martinez P.
installation.		RIMPEX-CHILE.
date-written.		07/12/92.
date-compiled.		12/02/93.
remarks.

   ;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
   ;ณ		P E P S I   C O L A....  Sistema de Pedidos Para	 ณ
   ;ณ		   Embotelladora del Sur del Peru  S.A. (Embosur).	 ณ
   ;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			      ENVIRONMENT DIVISION			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
source-computer.    PC.
object-computer.    T710.
special-names.

	KEY  KMEN    IS 1.
	KEY  NO      IS 2.
	KEY  YES     IS 3.
	KEY  KEXIT   IS 4.
	KEY  PROC    IS 5.
	KEY  KMOD    IS 6.
	KEY  KREV    IS 7.
	KEY  ADJ     IS 8.
	KEY  ELIM    IS 9.
	KEY  KNEXT   IS 10.
	KEY  KINS    IS 11.
	KEY  KBEEP   IS 12.
	KEY  KNOTA   IS 13.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				  DATA DIVISION 			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
DATA DIVISION.
FILE SECTION.
		     ;ึฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤท;
		     ;บ       ARCHIVOS DE ENTRADA	บ;
		     ;ำฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฝ;

FD CLIENTES-F				 ; Nombre Archivo CLIENTES
   recording mode is fixed		 ; CL+Codigo-Vendedor.E
   type is 'E'.

01 REG-CLIENTES.
   03 cli-empresa	 pic 9(02).	 ; Codigo empresa
   03 cli-codigo	 pic 9(06).	 ; Codigo Cliente
   03 cli-ramo		 pic 9(03).	 ; Codigo ramo
   03 cli-razon-soc.			 ; Razon social
      05 cli-razon-soc1  pic X(16).
      05 cli-razon-soc2  pic X(14).
   03 cli-direccion	 pic X(16).	 ; Direccion Cliente
   03 cli-numero	 pic X(05).	 ; Numero de la direccion
   03 cli-cedula.
      05 cli-rut	 pic 9(08).	 ; Ruc Cliente
      05 cli-digito	 pic X(01).	 ; Digito Verificador
   03 cli-frec-visita.
      05 cli-frec1	 pic X(01).	 ; Frecuencia de Visita
      05 cli-frec2	 pic X(01).	 ; ( viene con 1 marcado
      05 cli-frec3	 pic X(01).	 ; el o los dias, el resto
      05 cli-frec4	 pic X(01).	 ; vienen con 0 )
      05 cli-frec5	 pic X(01).
      05 cli-frec6	 pic X(01).
   03 cli-fono		 pic 9(07).	 ; Telefono
   03 cli-descuento	 pic 9(02)V99.	 ; % Descuento
   03 cli-tipo-credito	 pic 9(01).	 ; 0 = Contado	-  1 = Credito
   03 cli-ruta		 pic 9(03).	 ; Ruta

FD PRODUCTOS-F				 ; Nombre Archivo PRODUCTOS
   recording mode is fixed		 ; PR+Codigo-Vendedor.E
   type is 'E'.

01 REG-PRODUCTOS.
   03 prod-codigo	 pic 9(05).	 ; Codigo Producto
   03 prod-descripcion	 pic X(16).	 ; Descripcion Producto
   03 prod-cant-vend	 pic 9(08).	 ; Cantidad Vendida
   03 prod-cant-oferta	 pic 9(08).	 ; Cantidad Oferta (Mod. Pepsi).
   03 prod-descuento	 pic 9(02)V99.	 ; Descuento Producto
   03 prod-ila		 pic 9(03)V99.	 ; Porcentaje ila
   03 prod-iva		 pic 9(03)V99.	 ; Porcentaje iva
   03 prod-adicional	 pic 9(03)V99.	 ; Porcentaje adicional
   03 prod-flete	 pic 9(07)V99.	 ; Flete neto
   03 prod-flag 	 pic 9(01).	 ; 0=Bebida  -	1=Bebida alcoholica
   03 prod-oferta	 pic 9(01).	 ; 0=No permitida - 1=Permitida

FD NIVELES-PREC-F			 ; Nombre Archivo NIVELES DE PRECIOS
   recording mode is fixed		 ; NP+Codigo-Vendedor.E
   type is 'E'.

01 REG-NIVELES-PREC.
   03 npre-llave.
      05 npre-codigo	 pic 9(05).	 ; Codigo Producto
      05 npre-nivel-prec pic 9(02).	 ; Nivel de precio
   03 npre-prec-zofri	 pic 9(08).	 ; Precio bruto zofra
   03 npre-prec-exten	 pic 9(08).	 ; Precio bruto extension

FD IDENTIFICA-F 			 ; Nombre Archivo IDENTIFICACION
   recording mode is fixed		 ; ID+Codigo-Vendedor.E
   type is 'E'.                          ; (Archivo a cargar diariamente)

01 REG-IDENTIFICA.
   03 iden-empresa	 pic 9(02).	 ; Codigo empresa
   03 iden-codigo	 pic X(06).	 ; Codigo Vendedor
   03 iden-password	 pic X(07).	 ; Password de encendido
   03 iden-area 	 pic 9(03).	 ; Area a discar
   03 iden-fono 	 pic 9(07).	 ; Fono a discar
   03 iden-dia-activo	 pic 9(01).	 ; 1-2-3-4-5-6 ( L-M-M-J-V-S )
   03 iden-prox-nota	 pic 9(05).	 ; Numero Proxima nota
   03 iden-nivel-prec	 pic 9(02).	 ; Nivel de precio por defecto
   03 iden-visitas	 pic 9(03).	 ; Visitas (Total Visitas)(Meta)**
   03 iden-cli-visit	 pic 9(03).	 ; Clientes Visitados
   03 iden-cli-concr	 pic 9(03).	 ; Clientes Concretados
   03 iden-tipo-pedido	 pic 9(01).	 ; Tipo Pedido.

FD PRODUC-AUDIT-F			 ; Nombre Archivo PRODUCTOS PARA AUDITORIA
   recording mode is fixed		 ; PA+Codigo-Vendedor.E
   type is 'E'.

01 REG-PRODUC-AUDIT.
   03 prau-codigo.
      05 prau-cod1	 pic 9(03).	 ; Codigo empresa
      05 prau-cod2	 pic 9(05).	 ; Codigo producto
   03 prau-tamano	 pic X(16).	 ; Descripcion del Tamaคo
   03 prau-descripcion	 pic X(16).	 ; Descripcion del Producto

FD PRODUC-CENSO-F			 ; Nombre Archivo PRODUCTOS PARA CENSO
   recording mode is fixed		 ; PC+Codigo-Vendedor.E
   type is 'E'.

01 REG-PRODUC-CENSO.
   03 prce-codigo.
      05 prce-cod1	 pic 9(03).	 ; Codigo empresa
      05 prce-cod2	 pic 9(05).	 ; Codigo Producto
   03 prce-descripcion	 pic X(16).	 ; Descripcion del Tamaคo

FD MENSAJE-CLI-F			 ; Nombre Archivo MENSAJE PARA CLIENTES
   recording mode is fixed		 ; MC+Codigo-Vendedor.E
   type is 'E'.

01 REG-MENSAJE-CLI.
   03 mc-codcli 	 pic 9(06).	 ; Codigo Cliente
   03 mc-mensaje	 pic X(32).	 ; Mensaje para el cliente

FD EMBOTELLADORA-F			 ; Nombre Archivo EMBOTELLADORAS
   recording mode is fixed		 ; EM+Codigo-Vendedor.E
   type is 'E'.

01 REG-EMBOTELLADORA.
   03 embo-codigo	 pic 9(03).	 ; Codigo embotelladora
   03 embo-empresa	 pic X(16).	 ; Nombre empresa

FD MOTIVOS-NO-COMPRA-F			 ; Nombre Archivo MOTIVOS DE NO COMPRA
   recording mode is fixed		 ; NC+Codigo-Vendedor.E
   type is 'E'.

01 REG-MOTIVOS-NO-COMPRA.
   03 ncomp-codigo	 pic 9(02).	 ; Codigo del motivo
   03 ncomp-descripcion  pic X(16).	 ; descripcion motivo
   03 ncomp-confirma	 pic 9(01).	 ; 1=Confirma - 0=No Confirma

FD RAMOS-F				 ; Nombre Archivo RAMOS
   recording mode is fixed		 ; RA+Codigo-Vendedor.E
   type is 'E'.

01 REG-RAMOS.
   03 ra-codigo 	 pic 9(03).	 ; Codigo ramo
   03 ra-descripcion	 pic X(16).	 ; Descripcion ramo

		     ;ึฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤท;
		     ;บ       ARCHIVOS DE SALIDA       บ;
		     ;ำฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฝ;

FD CLIENTE-NUEV-F		    ; Nombre Archivo CLIENTE NUEVO
   recording mode is fixed	    ; CN+Codigo-Vendedor.S
   type is 'S'.

01 REG-CLIENTE-NUEV.
   03 clin-empresa	 pic 9(02).	 ; Codigo empresa
   03 clin-codigo	 pic 9(06).	 ; Codigo Cliente
   03 clin-ramo 	 pic 9(03).	 ; Codigo Ramo
   03 clin-razon-soc	 pic X(30).	 ; Razon Social
   03 clin-direccion	 pic X(16).	 ; Direccion Cliente
   03 clin-numero	 pic X(05).	 ; Numero de la direccion
   03 clin-cedula.
      05 clin-rut	 pic 9(08).	 ; Ruc Cliente
      05 clin-digito	 pic X(01).	 ; Digito Verificador
   03 clin-fono 	 pic 9(07).	 ; Telefono
   03 clin-fecha-nac	 pic 9(06).	 ; Fecha de nacimiento
   03 clin-frec-visita. 		 ; Frecuencia de visita
      05 clin-frec1	 pic 9(01).
      05 clin-frec2	 pic 9(01).
      05 clin-frec3	 pic 9(01).
      05 clin-frec4	 pic 9(01).
      05 clin-frec5	 pic 9(01).
      05 clin-frec6	 pic 9(01).
   03 clin-ruta 	 pic 9(03).	 ; Ruta
   03 clin-c1		 pic 9(01) binary.
   03 clin-c2		 pic 9(01) binary.


FD CLIENTE-MOD-F		    ; Nombre Archivo CLIENTES MODIFICADOS
   recording mode is fixed	    ; CM+Codigo-Vendedor.S
   type is 'S'.

01 REG-CLIENTE-MOD.
   03 clim-codigo	 pic 9(06).	 ; Codigo Cliente
   03 clim-ramo 	 pic 9(01).	 ; Codigo Ramo
   03 clim-razon-soc	 pic 9(01).	 ; Razon Social
   03 clim-direccion	 pic 9(01).	 ; Direccion Cliente
   03 clim-numero	 pic 9(01).	 ; Numero de la direccion
   03 clim-rut		 pic 9(01).	 ; Ruc Cliente
   03 clim-fono 	 pic 9(01).	 ; Telefono
   03 clim-frec-visita	 pic 9(01).	 ; Frecuencia de visita
   03 clim-ruta 	 pic 9(01).	 ; Ruta
   03 clim-c1		 pic 9(01) binary.
   03 clim-c2		 pic 9(01) binary.


FD CABECERA-F			    ; Nombre Archivo CABECERA PEDIDO
   recording mode is fixed	    ; CA+Codigo-Vendedor.S
   type is 'S'.

01 REG-CABECERA.
   03 cabe-nroped	 pic 9(05).	 ; Numero Pedido
   03 cabe-codigo	 pic 9(06).	 ; Codigo Cliente
   03 cabe-fecha.			 ; Fecha Pedido
      05 cabe-dd	 pic 9(02).
      05 cabe-mm	 pic 9(02).
      05 cabe-aa	 pic 9(02).
   03 cabe-hora1.			 ; Hora Inicial Pedido
      05 cabe-hrs1	 pic 9(02).
      05 cabe-min1	 pic 9(02).
   03 cabe-hora2.			 ; Hora Final Pedido
      05 cabe-hrs2	 pic 9(02).
      05 cabe-min2	 pic 9(02).
   03 cabe-tot-nota	 pic 9(07).	 ; Total Nota
   03 cabe-borrado	 pic 9(01).	 ; 1 = Anulada	 -   0 = Existe
   03 cabe-ruta-no-ruta  pic 9(01).	 ; 0 = Ruta - 1 = No Ruta - 2 = Nuevo
   03 cabe-nro-carga	 pic 9(03).	 ; Numero carga camion
   03 cabe-tipo-credito  pic 9(01).	 ; 0 = Contado	-  1 = Credito
   03 cabe-nivel-precio  pic 9(02).	 ; Nivel de precio
   03 cabe-flag-zf-ze	 pic 9(01).	 ; 0 = Extension  -  1 = Zofra
   03 cabe-ruta 	 pic 9(03).
   03 cabe-c1		 pic 9(01) binary.
   03 cabe-c2		 pic 9(01) binary.

FD DETALLE-PED-F		    ; Nombre Archivo DETALLE
   recording mode is fixed	    ; DE+Codigo-Vendedor.S
   type is 'S'.

01 REG-DETALLE-PED.
   03 dped-nroped	 pic 9(05).	 ; Numero Pedido
   03 dped-codigo.			 ; Codigo producto
      05 dped-codigo1	 pic 9(01).	 ; Si es 6, entonces es promocion
      05 dped-codigo2	 pic 9(04).	 ; Resto de codigo producto
   03 dped-cantidad	 pic 9(07).	 ; Cantidad
   03 dped-descuento	 pic 9(02)V99.	 ; Descuento
   03 dped-tot-item	 pic 9(07).	 ; Total Item ( bruto )
   03 dped-c1		 pic 9(01) binary.
   03 dped-c2		 pic 9(01) binary.

FD ATENCION-F			    ; Nombre Archivo ATENCION A CLIENTES
   recording mode is fixed	    ; AT+Codigo-Vendedor.S
   type is 'S'.

01 REG-ATENCION.
   03 aten-codigo	 pic 9(06).	 ; Codigo Cliente
   03 aten-atencion.			 ; 1 = Atendido   -   0 = No atendido.
      05 aten-aten1	 pic 9(01).	 ; Con la misma frecuencia
      05 aten-aten2	 pic 9(01).	 ; que frecuencia de visita
      05 aten-aten3	 pic 9(01).
      05 aten-aten4	 pic 9(01).
      05 aten-aten5	 pic 9(01).
      05 aten-aten6	 pic 9(01).
   03 aten-cod-motivo	 pic 9(02).	 ; Codigo Motivo de no compra
   03 aten-c1		 pic 9(01) binary.
   03 aten-c2		 pic 9(01) binary.

FD MENSAJES-F			    ; Nombre Archivo MENSAJES
   recording mode is fixed	    ; ME+Codigo-Vendedor.S
   type is 'S'.

01 REG-MENSAJES.
   03 mens-nroped	 pic 9(05).	 ; Numero Pedido
   03 mens-mensaje	 pic X(32).	 ; Mensaje
   03 mens-c1		 pic 9(01) binary.
   03 mens-c2		 pic 9(01) binary.

FD MUESTREO-F			    ; Nombre Archivo MUESTREO
   recording mode is fixed	    ; MU+Codigo-Vendedor.S
   type is 'S'.

01 REG-MUESTREO.
   03 mue-nroped	 pic 9(05).	 ; Numero Pedido
   03 mue-cliente	 pic 9(06).	 ; Codigo Cliente
   03 mue-producto	 pic 9(05).	 ; Codigo Producto
   03 mue-cant-cajas	 pic 9(07).	 ; Cantidad de Cajas
   03 mue-c1		 pic 9(01) binary.
   03 mue-c2		 pic 9(01) binary.

FD CENSO-F			    ; Nombre Archivo CENSO
   recording mode is fixed	    ; CE+Codigo-Vendedor.S
   type is 'S'.                     ;

01 REG-CENSO.
   03 cens-llave.
      05 cens-cliente	 pic 9(06).	 ; Codigo Cliente
      05 cens-producto	 pic 9(08).	 ; Codigo Producto
   03 cens-cantidad	 pic 9(07).	 ; Cantidad registrada
   03 cens-c1		 pic 9(01) binary.
   03 cens-c2		 pic 9(01) binary.

FD ENCUESTA-F			    ; Nombre Archivo ENCUESTA
   recording mode is fixed	    ; EN+Codigo-Vendedor.S
   type is 'S'.                     ;

01 REG-ENCUESTA.
   03 encu-llave.
      05 encu-codigo	 pic 9(06).	 ; Codigo Cliente
      05 encu-producto	 pic 9(08).	 ; Codigo Producto
   03 encu-precio	 pic 9(06).	 ; Precio inicial encuesta
   03 encu-c1		 pic 9(01) binary.
   03 encu-c2		 pic 9(01) binary.

FD AUDITORIA-F			    ; Nombre Archivo AUDITORIA
   recording mode is fixed	    ; AU+Codigo-Vendedor.S
   type is 'S'.                     ;

01 REG-AUDITORIA.
   03 audi-llave.
      05 audi-cliente	 pic 9(06).	 ; Codigo Cliente
      05 audi-producto	 pic 9(08).	 ; Codigo Producto
   03 auditoria-inicial.
      05 audi-sala1	 pic 9(07).	 ; Sala dia inicial
      05 audi-bodega1	 pic 9(07).	 ; Bodega dia inicial
      05 audi-otros1	 pic 9(07).	 ; Otros dia inicial
      05 audi-precio1	 pic 9(06).	 ; Precio dia inicial
   03 auditoria-final.
      05 audi-sala2	 pic 9(07).	 ; Sala dia final
      05 audi-bodega2	 pic 9(07).	 ; Bodega dia final
      05 audi-otros2	 pic 9(07).	 ; Otros dia final
      05 audi-precio2	 pic 9(06).	 ; Precio dia final
      05 audi-compra2	 pic 9(07).	 ; Compras dia final
   03 audi-c1		 pic 9(01) binary.
   03 audi-c2		 pic 9(01) binary.

FD CARGA-CAMION-F		    ; Nombre Archivo CARGA CAMION
   recording mode is fixed	    ; CC+Codigo-Vendedor.S
   type is 'S'.                     ;

01 REG-CARGA-CAMION.
   03 cc-nro-carga	 pic 9(03).	 ; Numero de carga camion
   03 cc-cantidad-ext	 pic 9(07).	 ; Cantidad Extension
   03 cc-cantidad-zof	 pic 9(07).	 ; Cantidad Zofra
   03 cc-c1		 pic 9(01) binary.
   03 cc-c2		 pic 9(01) binary.

		     ;ึฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤท;
		     ;บ    ARCHIVO DE COMUNICACIONES	บ;
		     ;ำฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฝ;

FD FILELIST-F
   recording mode is fixed		 ; Lista de archivos a enviar
   type is 'V'.

01 HOST-PARAMS-R.			 ; Primer registro en archivo.
   03 TIPO-HOST-1	 pic  X(03).	 ; Tipo Host:'PTC','PC ','TDS'.
   03 VELOCIDAD-1	 pic  9(02).	 ; Velocid:'03','12','96'.
   03 CODI-VEND-1	 pic  9(04).	 ; Codigo Vendedor.
   03 TELEFONO.
      05 NUM-AREA	 pic  X(03).	 ; Numero Area
      05 NUM-TELEFONO	 pic  X(07).	 ; Numero Telefono
   03 SUBMIT-FILE	 pic  X(08).	 ; Nombre de SUBMIT.
   03 IDENTIF-PTC	 pic  X(08).	 ; Id. para POLLING.
   03 COMM-MODE 	 pic  9(01).	 ; Tipo comunicacion   - 0 Automatica
   03 FILLER		 pic  X(08).	 ; 1 Directa - 2 Modem - 3  Polling

FD PROGRAMA-F			    ; Archivo para Efectuar
   recording mode is FREE	    ; las Llamadas a los
   type is program.		    ; Distintos Programas

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			    WORKING STORAGE SECTION			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
WORKING-STORAGE section.

01 varios-1.
   03 ws-codcli 	 pic 9(06).
   03 nCodCli		 pic 9(06).
   03 ws-ruta		 pic 9(03).
   03 ws-primera-vez	 pic 9(01) binary.
   03 cod-clinue	 pic 9(06).
   03 cod-ramo-ws	 pic 9(03).
   03 cod-ramo-aux-ws	 pic 9(03).
   03 fono-nue		 pic 9(07).
   03 fecha-nacimiento.
      05 fecha-nac1-ws	 pic 9(02).
      05 fecha-nac2-ws	 pic 9(02).
      05 fecha-nac3-ws	 pic 9(02).
   03 ruta-ws		 pic 9(03).
   03 razon-soc-ws.
      05 razon-soc1-ws	 pic X(16).
      05 razon-soc2-ws	 pic X(14).
   03 dire-clinue	 pic X(16).
   03 dire-numero	 pic X(05).
   03 ws-prox-nota	 pic 9(05).
   03 ws-dia-aux.
      05 dia-aux-1	 pic X(01).
      05 dia-aux-2	 pic X(01).
      05 dia-aux-3	 pic X(01).
      05 dia-aux-4	 pic X(01).
      05 dia-aux-5	 pic X(01).
      05 dia-aux-6	 pic X(01).

01 varios-2.
   03 tipcli		 pic 9(01).		 ; 0=Ruta, 1=No Ruta, 2=Nuevo
   03 dia-activo-ws	 pic 9(01).
   03 ws-dia-ruta.
      05 dia-1		 pic X(01).
      05 dia-2		 pic X(01).
      05 dia-3		 pic X(01).
      05 dia-4		 pic X(01).
      05 dia-5		 pic X(01).
      05 dia-6		 pic X(01).
   03 existe-cabe	 pic 9(01).
   03 existe-cabe-aux	 pic 9(01).
   03 existe-cli-ruta	 pic 9(01).
   03 llave-cliente.
      05 cod-empresa	 pic 9(02).
      05 cod-clie-ws	 pic 9(06).
   03 cliente-atendido	 pic 9(01).
   03 forma-pago-ws	 pic X(07).
   03 llave-np.
      05 ws-cod-producto pic 9(05).
      05 nivel-prec	 pic 9(02).
   03 promociones.
      05 ws-promocion1	 pic 9(01).
      05 ws-promocion2	 pic 9(04).
   03 existe-np 	 pic 9(01).
   03 ws-desc-prod	 pic 9(02)V99.
   03 ws-neto		 pic 9(08).
   03 ws-bruto		 pic 9(11)V99.
   03 ws-bruto2 	 pic 9(11)V99.
   03 ws-flete		 pic 9(07)V99.
   03 ws-flete2 	 pic 9(07)V99.
   03 ws-iva		 pic 9(07)V99.
   03 ws-ila		 pic 9(07)V99.
   03 ws-adicional	 pic 9(07)V99.
   03 ws-cantidad	 pic 9(07).
   03 ws-CantAux	 pic 9(07).
   03 ws-CantResto	 pic 9(02).
   03 maximo-promocion	 pic 9(07).
   03 promocion-anterior pic 9(07).
   03 ws-descuento	 pic 9(02)V99.
   03 nivel-p-aux	 pic 9(02).
   03 numero.
      05 numero-1.
	 07 numero-x	 pic 9(09).
	 07 numero-y	 pic 9(01).
      05 numero-a	 pic 9(01).
      05 numero-b	 pic 9(01).
      05 numero-c	 pic 9(01).
   03 num1-conf 	 pic 9(01).
   03 num2-conf 	 pic 9(01).
   03 paso		 pic 9(01).

01 varios-3.
   03 ws-total-1	 pic 9(07)V99.
   03 ws-total-1-aux	 pic 9(07)V99.
   03 ws-porc-iva	 pic 9(07)V99.
   03 ws-porc-ila	 pic 9(07)V99.
   03 ws-total-bruto	 pic 9(08)V99.		; Total por detalle
   03 ws-total-bruto-01  pic 9(06)V99.		; Total por detalle
   03 ws-total-nota	 pic 9(08)V99.		; Total de todo el pedido
   03 ws-total-nota-01	 pic 9(06)V99.		; Total de todo el pedido
   03 atencion		 pic 9(01).
   03 llave-carga-camion.
      05 ws-carga-camion pic 9(03).
      05 llave-1-carga	 pic 9(01).
   03 ws-cant-carga	 pic 9(07).
   03 ws-forma-pago	 pic 9(03).
   03 ws-mensaje	 pic X(32).
   03 mensaje-zof-ext	 pic X(16).
   03 ws-descuento2	 pic 9(02)V99.
   03 ws-descuento-aux	 pic 9(11)V99.
   03 ws-insert 	 pic 9(01).
   03 busca-censo.
      05 busca-censo1	 pic 9(06).
      05 busca-censo2	 pic 9(08).
   03 cant-censo	 pic 9(07).
   03 cant-encuesta	 pic 9(06).
   03 prec-audi 	 pic 9(06).
   03 cant-audi 	 pic 9(07).
   03 modi-total-audit	 pic 9(07).
   03 comp-audi 	 pic 9(07).
   03 audit-cod-pro	 pic 9(07).
   03 ws-canti-mue	 pic 9(07).
   03 ws-cant-aux	 pic 9(07).
   03 item		 pic 9(03).
   03 item-det		 pic 9(06).
   03 item-rev		 pic 9(06).

01 varios-4.
   03 cli-rut-ws.
      05 cli-rut1-ws	 pic 9(08).
      05 cli-dig-ws	 pic X(01).
   03 rest-aux.
      05 resto-aux1	 pic 9(02).
      05 resto-aux	 pic 9(02) binary.
   03 ws-resto.
      05 ws-resto1	 pic 9(03) binary.
   03 ws-dig		 pic X(01).
   03 ws-con		 pic 9(02) binary.
   03 ws-tbl		 pic 9(02) binary.
   03 ws-suma		 pic 9(03) binary.
   03 ws-num-aux	 pic 9(02) binary.
   03 cod-vendedor	 pic X(06).
   03 carga-ok		 pic 9(01) binary.
   03 carga-codigo	 pic X(06).
   03 proc-ws		 pic X(16).
   03 flag-hora 	 pic 9(01) binary.
   03 ws-prende-ptc	 pic X(07).
   03 prende-apaga	 pic 9(01).
   03 hrs		 pic 9(02).
   03 rr		 pic 9(02).
   03 ws-total-general	 pic 9(08).
   03 nro-carga 	 pic 9(03).
   03 cant-zof		 pic 9(07).
   03 cant-ext		 pic 9(07).
   03 cant-z-e		 pic 9(07).
   03 cuenta-c-i	 pic 9(07).
   03 cuenta-c-f	 pic 9(07).
   03 ws-desc-ramo	 pic X(16).
   03 tecla-beep	 pic 9(01) binary.
   03 tecla-tono	 pic 9(02) binary.
   03 hay-promocion	 pic 9(01).
   03 ws-tipo-pedido	 pic 9(01).

01 rut-1		 redefines.
   03 ws-num		 pic 9(01) occurs 8 times.

01 fecha-ws	packed.
   03 ano-ws		 pic 9(02) packed.
   03 mes-ws		 pic 9(02) packed.
   03 dia-ws		 pic 9(02) packed.
   03 dow-ws		 pic 9(02) packed.
   03 hrs-ws		 pic 9(02) packed.
   03 minu-ws		 pic 9(02) packed.
   03 sec-ws		 pic 9(02) packed.
   03 xxxxx-ws		 pic 9(02) packed.
   03 yyyyy-ws		 pic 9(02) packed.

01 ws-file-name.
   03 nombre-fn 	 pic X(02).
   03 codigo-fn 	 pic X(06).

01 punteros.
   03 punt-mp		 pic 9(01) binary.
   03 punt-notas	 pic 9(01) binary.
   03 punt-zof-ext	 pic 9(01) binary.
   03 punt-ped		 pic 9(01) binary.
   03 punt-dat-cli	 pic 9(02) binary.
   03 punt-dia-vis	 pic 9(01) binary.
   03 punt-forma-pago	 pic 9(01) binary.
   03 punt-revisa1	 pic 9(01) binary.
   03 punt-revisa2	 pic 9(01) binary.
   03 punt-censo	 pic 9(01) binary.
   03 punt-audit	 pic 9(01) binary.
   03 punt-audit-aux	 pic 9(01) binary.
   03 punt-consulta	 pic 9(01) binary.
   03 punt-cli		 pic 9(01) binary.
   03 punt-comu 	 pic 9(01) binary.

01 memoria.
   03 memory-flag	 pic 9(02) binary.
   03 display-save	 pic X(132).
   03 ws-mem-avail	 pic 9(08) binary.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				KEYBOARD SECTION			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
KEYBOARD SECTION.
kd  std-710  value is

; Unshifted

	off   DAR     ADJ   UAR    KEND
	PROC  KEXIT   LIGHT ELIM   KNEXT
	KINS  KBEEP   KMOD  KMEN   KNOTA
	ER    ER      ER    ER	   ER
	ER    ER      ER    ER	   ER
      shift   YES     KREV  NO	   CLR
	'7'   '8'     '9'   BAR
	'4'   '5'     '6'   FAR
	'1'   '2'     '3'   ENTER
	NO    '0'     '.'

; Shifted

       off     'A'     'B'     'C'     KEND
       'D'     'E'     'F'     'G'     'H'
       'I'     'J'     'K'     'L'     'M'
       'N'     'O'     'P'     'Q'     'R'
       'S'     'T'     'U'     'V'     'W'
      shift    'X'     'Y'     'Z'     CLR
       '7'     '8'     '9'     BAR
       '4'     '5'     '6'     FAR
       '1'     '2'     '3'    ENTER
       '-'     '0'     ' '.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				SCREEN SECTION				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
SCREEN SECTION.
SD CARGA-CODIGO-SD.
03 carga-codigo
   auto-shift
   prompt  1, ' Codigo Submit  '
   mask   54, 'XXXXXX'.

SD PRENDE-PTC-SD.
03 ws-prende-ptc
   auto-shift
   edit
   mask   53, 'BBBBBBB'.

SD COD-CLIE-SD.
03 cod-clie-ws
   clear
   prompt  1, 'Cod.Clien:'
   mask   11, 'ZZZZZ9'.

SD SEL-CLIENTE-SD.
03 cli-codigo
   edit
   prompt  1, 'Cod.Clien:'
   mask   11, 'ZZZZZ9'.
03 cli-razon-soc1
   mask   17, 'XXXXXXXXXXXXXXXX'.
03 ws-desc-ramo
   edit
   mask   33, 'XXXXXXXXXXXXXXXX'.
03 cli-rut
   edit
   prompt 49, 'Ruc:         -  '
   mask   54, 'ZZZZZZZ9'.
03 cli-digito
   edit
   mask   63, 'X'.

SD CLIENTE-DET1-SD.
03 cli-descuento
   clear
   edit
   prompt  1, 'Descuento:      '
   mask   12, 'Z9,99'.
03 forma-pago-ws
   edit
   prompt 17, ' Forma de Pago  '
   mask   37, 'XXXXXXX'.
03 cli-fono
   edit
   prompt 49, 'Fono :          '
   mask   56, 'ZZZZZZ9'.

SD CLIENTE-DET2-SD.
03 cli-direccion
   clear
   auto-shift
   prompt  1, '   Direccion    '
   mask   17, 'XXXXXXXXXXXXXXXX'.

SD CODIGO-CLI-SD.
03 cod-clinue
   clear
   edit
   prompt  1, "Cod.Clie:       "
   mask   11, "ZZZZZ9".

SD COD-RAMO-SD.
03 cod-ramo-ws
   edit
   prompt 17, "Codigo Ramo:   "
   mask   30, "ZZ9".

SD DESC-RAMO-SD.
03 ra-descripcion
   edit
   mask 49, "XXXXXXXXXXXXXXXX".

SD FONO-SD.
03 fono-nue
   edit
   prompt 33, "Fono :          "
   mask   40, "ZZZZZZ9".

SD RUT-SD.
03 cli-rut1-ws
   edit
   min 1
   prompt 49, "Ruc :         - "
   mask   55, "ZZZZZZZ9".

SD DIGV-SD.
03 cli-dig-ws
   min 1
   mask 64, 'X'.

SD RAZON-SOC-SD.
03 razon-soc-ws
   clear
   auto-shift
   prompt 1, "  Razon Social  "
   mask  33, "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX".

SD DIRECC-CLI-SD.
03 dire-clinue
   clear
   auto-shift
   prompt  1, " Direcc. Cliente"
   mask   33, "XXXXXXXXXXXXXXXX".

SD NUMERO-CLI-SD.
03 dire-numero
   prompt 49, "  Numero        "
   mask   58, "XXXXX".

SD FECHA-NAC1-SD.
03 fecha-nac1-ws
   clear
   edit
   prompt 1, "Fecha Nacimiento      /  /      "
   mask  21, "Z9".

SD FECHA-NAC2-SD.
03 fecha-nac2-ws
   edit
   mask 24, "Z9".

SD FECHA-NAC3-SD.
03 fecha-nac3-ws
   edit
   mask 27, "Z9".

SD RUTA-SD.
03 ruta-ws
   edit
   prompt 49, "Ruta :  "
   mask   56, "ZZ9".

SD DIA-VIS1-SD.
03 dia-aux-1
   auto-record
   edit
   mask 35, 'X'.

SD DIA-VIS2-SD.
03 dia-aux-2
   auto-record
   edit
   mask 37, 'X'.

SD DIA-VIS3-SD.
03 dia-aux-3
   auto-record
   edit
   mask 39, 'X'.

SD DIA-VIS4-SD.
03 dia-aux-4
   auto-record
   edit
   mask 41, 'X'.

SD DIA-VIS5-SD.
03 dia-aux-5
   auto-record
   edit
   mask 43, 'X'.

SD DIA-VIS6-SD.
03 dia-aux-6
   auto-record
   edit
   mask 45, 'X'.

SD COMPRA-PEDIDO-SD.
03 ws-prox-nota
   clear
   edit
   prompt 1, ' Pedido #                            COMPRA         Yes / No    '
   mask  11, 'ZZZZ9'.

SD MOTIVO-SD.
03 ncomp-descripcion
   mask 33, 'XXXXXXXXXXXXXXXX'.

SD NIVEL-PREC-SD.
03 nivel-prec
   clear
   prompt 1, "Nivel de  Precio"
   mask  24, "Z9".

SD MENSAJE-CLI-SD.
03 mc-mensaje
   mask 17, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'.

SD SEL-PRODUCTO-SD.
03 prod-codigo
   clear
   edit
   prompt 1, 'Cod.Prod.:      '
   mask  12, 'ZZZZ9'.
03 prod-descripcion
   edit
   mask  17, 'XXXXXXXXXXXXXXXX'.

SD SEL2-PRODUCTO-SD.
03 ws-neto
   edit
   prompt 49, 'Precio:         '
   mask 56, 'ZZZZZ9,99'.

SD CANTIDAD-SD.
03 ws-cantidad
   clear
   edit
   prompt  1, 'Cantid.:       '
   mask   09, 'ZZZZ9,99'.

SD DESCUENTO-SD.
03 ws-descuento
   edit
   prompt 17, 'Descuento:      '
   mask   28, 'Z9,99'.

SD TOTAL-ITEM-SD.
03 ws-total-bruto-01
   edit
   prompt 33, 'T.Prod:         '
   mask   40, 'ZZZZZ9,99'.
03 ws-total-nota-01
   edit
   prompt 49, 'T.Ped.:         '
   mask   56, 'ZZZZZ9,99'.

SD CARGA-CAMION-SD.
03 ws-carga-camion
   clear
   edit
   prompt 1, 'Carga Camion Nro'
   mask  39, 'ZZ9'.

SD MENSAJE-SD.
03 ws-mensaje
   clear
   auto-shift
   prompt  1, '    Mensaje     '
   mask   17, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'.

SD TOTAL-FACTURA-SD.
03 ws-total-nota
   clear
   edit
   prompt 17, '  Total Pedido:  '
   mask   35, 'ZZZZZZZ9,99'.

SD NUMERO-PED-SD.
03 ws-prox-nota
   clear
   edit
   prompt  1, " Numero  Pedido "
   mask   23, "ZZZZ9".

SD PANTALLA-REV1-SD.
03 ws-prox-nota
   clear
   edit
   prompt  1, "# Pedido:       "
   mask   12, "ZZZZ9".
03 cod-clie-ws
   edit
   prompt 17, "Cod.Clie.:      "
   mask   27, "ZZZZZ9".
03 razon-soc-ws
   edit
   mask 49, "XXXXXXXXXXXXXXXXXXXXXX".

SD PANTALLA-REV2-SD.
03 mensaje-zof-ext
   clear
   edit
   mask 1, "XXXXXXXXXXXXXXXX".
03 cli-rut1-ws
   edit
   prompt 17, "Ruc :         - "
   mask   23, "ZZZZZZZ9".
03 cli-dig-ws
   edit
   mask   32, "X".
03 ws-descuento2
   edit
   prompt 33, "Descuento:      "
   mask   44, "Z9,99".
03 ws-total-nota
   edit
   prompt 49, "T.Ped.:         "
   mask   57, "ZZZZ9,99".

SD DETALLE1-SD.
03 ws-cod-producto
   clear
   edit
   prompt  1, "Cod.Produc:     "
   mask   12, "ZZZZ9".
03 prod-descripcion
   edit
   mask   17, "XXXXXXXXXXXXXXXX".
03 dped-descuento
   edit
   prompt 33, "Descuento:      "
   mask   44, "Z9,99".

SD DETALLE1-1-SD.
03 ws-neto
   edit
   prompt 49, "Precio $        "
   mask   56, "ZZZZZ9,99".

SD DETALLE2-SD.
03 dped-cantidad
   clear
   edit
   prompt 17, "Cantidad:       "
   mask   25, "ZZZZ9,99".
03 dped-tot-item
   edit
   prompt 33, "T.Prod.:        "
   mask   41, "ZZZZ9,99".

SD REV-MUESTRA.
03 ws-cod-producto
   clear
   edit
   prompt  1, "Cod.Produc:     "
   mask   12, "ZZZZ9".
03 prod-descripcion
   edit
   mask   17, "XXXXXXXXXXXXXXXX".

SD CANTIDAD-REV-SD.
03 ws-cantidad
   edit
   prompt 33, "Cantid.:       "
   mask   41, "ZZZZ9,99".

SD DECTO-REV-SD.
03 ws-descuento
   edit
   prompt 49, "Descuento:      "
   mask   60, "Z9,99".

SD COD-PRODUCTO-SD.
03 ws-cod-producto
   clear
   edit
   prompt 1, 'Cod.Prod.:      '
   mask  12, 'ZZZZ9'.

SD MUEST-CLIENTE-SD.
03 cod-clie-ws
   clear
   edit
   prompt  1, 'Cod.Clien:'
   mask   11, 'ZZZZZ9'.
03 razon-soc1-ws
   edit
   mask   17, 'XXXXXXXXXXXXXXXX'.
03 dire-clinue
   edit
   mask   33, 'XXXXXXXXXXXXXXXX'.
03 cli-rut1-ws
   edit
   prompt 49, 'Ruc:         -  '
   mask   54, 'ZZZZZZZ9'.
03 cli-dig-ws
   edit
   mask   63, 'X'.

SD MUES-DESCRIP-SD.
03 ws-cod-producto
   clear
   edit
   prompt  1, "Cod.Produc:     "
   mask   12, "ZZZZ9".
03 prod-descripcion
   edit
   mask   17, "XXXXXXXXXXXXXXXX".

SD MUES-CANTIDAD-SD.
03 ws-cantidad
   edit
   prompt 49, 'Cantid.:       '
   mask   57, 'ZZZZ9,99'.

SD MUES-ITEM-SD.
03 item
   edit
   prompt 33, '   Item #       '
   mask   43, 'ZZ9'.

SD MUE-SEL-CLI-SD.
03 cli-codigo
   edit
   prompt  1, 'Cod.Clien:'
   mask   11, 'ZZZZZ9'.
03 ws-prox-nota
   edit
   prompt 17, '# Pedido:       '
   mask   28, 'ZZZZ9'.
03 cli-razon-soc
   edit
   mask 33, 'XXXXXXXXXXXXXXXXXXXXXX'.

SD CONMOD-1-SD.
03 razon-soc-ws
   auto-shift
   mask 33, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'.

SD CONMOD-2-SD.
03 dire-clinue
   auto-shift
   prompt  1, '   Direccion    '
   mask   17, 'XXXXXXXXXXXXXXXX'.

SD CLIENTE-DET3-SD.
03 cli-rut
   edit
   min 1
   prompt 7, 'RUC'
   mask  36, 'ZZZZZZZ9'.
03 cli-digito
   min 1
   prompt 44, '-'
   mask   45, 'X'.

SD CLIENTE-DET4-SD.
03 cli-fono
   edit
   prompt 1, 'Fono :          '
   mask   8, 'ZZZZZZ9'.
03 cli-descuento
   edit
   prompt 33, 'Descuento:      '
   mask   44, 'Z9,99'.

SD CONMOD-30-SD.
03 cli-rut1-ws
   edit
   min 1
   prompt 7, 'RUC'
   mask  36, 'ZZZZZZZ9'.

SD CONMOD-31-SD.
03 cli-dig-ws
   min 1
   prompt 44, '-'
   mask   45, 'X'.

SD CONMOD-4-SD.
03 fono-nue
   edit
   prompt 1, 'Fono :          '
   mask   8, 'ZZZZZZ9'.

SD CLIENTE-NUEV-SD.
03 clin-codigo
   clear
   edit
   prompt  1, 'Cod.Clien:'
   mask   11, 'ZZZZZ9'.
03 clin-razon-soc
   edit
   mask   33, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'.

SD CLN-1-SD.
03 clin-ramo
   clear
   edit
   prompt  7, 'Ramo'
   mask   39, 'ZZ9'.

SD CLNMOD-2-SD.
03 cod-ramo-ws
   clear
   edit
   prompt  7, 'Ramo'
   mask   39, 'ZZ9'.

SD CLN-DET2-SD.
03 clin-direccion
   prompt  1, '   Direccion    '
   mask   17, 'XXXXXXXXXXXXXXXX'.

SD CLN-2-SD.
03 clin-rut
   edit
   min 1
   prompt 7, 'RUC'
   mask  36, 'ZZZZZZZ9'.
03 clin-digito
   min 1
   prompt 44, '-'
   mask   45, 'X'.

SD CLN-3-SD.
03 clin-fono
   edit
   prompt 7, 'Fono'
   mask  37, 'ZZZZZZ9'.

SD CLNMOD-3-SD.
03 fono-nue
   edit
   prompt 7, 'Fono'
   mask  37, 'ZZZZZZ9'.

SD CLN-4-SD.
03 clin-fecha-nac
   edit
   prompt 1, 'Fecha nacimiento'
   mask  37, '99/99/99'.

SD CLNMOD-40-SD.
03 fecha-nacimiento
   edit
   prompt 1, 'Fecha nacimiento'
   mask  37, '99/99/99'.

SD CLN-RUTA-SD.
03 cli-ruta
   edit
   prompt 7, 'Ruta'
   mask  39, 'ZZ9'.


SD CLN-5-SD.
03 clin-ruta
   edit
   prompt 7, 'Ruta'
   mask  39, 'ZZ9'.


SD CLNMOD-5-SD.
03 ruta-ws
   edit
   prompt 7, 'Ruta'
   mask  39, 'ZZ9'.

SD REVISA-PROD1-SD.
03 prod-codigo
   clear
   edit
   prompt  1, "Cod.Produc:     "
   mask   12, "ZZZZ9".
03 prod-descripcion
   edit
   mask   17, "XXXXXXXXXXXXXXXX".

03 prod-cant-oferta
   edit
   prompt 33, "Oferta:         "
   mask   40, "ZZZZZ9,99".

03 prod-cant-vend
   edit
   prompt 49, "Ventas:         "
   mask   56, "ZZZZZ9,99".

SD REVISA-PRDES-SD.
03 prod-descuento
   clear
   edit
   prompt 4, "Descuento"
   mask  22, "Z9,99".
03 prod-flete
   edit
   prompt 38, "Flete"
   mask   52, "ZZZZZZ9,99".

SD REVISA-PROD2-SD.
03 ws-total-general
   clear
   edit
   prompt  1, " Total General  ----------------Cantidad Vendida"
   mask   53, "ZZZZZ9,99".

SD CENSO-SELCLI-SD.
03 cli-codigo
   edit
   prompt  1, 'Cod.Clien:'
   mask   11, 'ZZZZZ9'.
03 cli-razon-soc1
   edit
   mask   17, 'XXXXXXXXXXXXXXXX'.
03 cli-direccion
   edit
   mask   33, 'XXXXXXXXXXXXXXXX'.
03 cli-rut
   edit
   prompt 49, 'Ruc:         -  '
   mask   54, 'ZZZZZZZ9'.
03 cli-digito
   edit
   mask   63, 'X'.

SD ENVASE-CENSO-SD.
03 embo-empresa
   clear
   edit
   mask  1, 'XXXXXXXXXXXXXXXX'.
03 prce-descripcion
   edit
   mask 17, 'XXXXXXXXXXXXXXXX'.

SD CANTI-CENSO-SD.
03 cant-censo
   edit
   prompt 49, 'Cantid.:        '
   mask   57, 'ZZZZ9,99'.

SD TOT-MODI-CENSO-SD.
03 cens-cantidad
   edit
   prompt 33, ' Total :        '
   mask   41, 'ZZZZ9,99'.

SD MODI-CENSO-SD.
03 cant-censo
   edit
   prompt 49, 'Cantid.:        '
   mask   57, '99999,99'.

SD CANTI-ENCUESTA-SD.
03 cant-encuesta
   edit
   prompt 49, 'Precio$:        '
   mask   57, 'ZZZZ9,99'.

SD AUDITORIA-BOTELLA-SD.
03 prau-descripcion
   edit
   mask  1, 'XXXXXXXXXXXXXXXX'.
03 prau-tamano
   edit
   mask 17, 'XXXXXXXXXXXXXXXX'.

SD PRECIO-AUDIT-SD.
03 prec-audi
   edit
   mask 57, 'ZZZZ9,99'.

SD CANTI-AUDIT-SD.
03 cant-audi
   edit
   mask 57, 'ZZZZ9,99'.

SD TOT-MODI-AUDI-SD.
03 modi-total-audit
   edit
   prompt 33, ' Total :        '
   mask   41, 'ZZZZ9,99'.

SD COMPRA-AUDIT-SD.
03 comp-audi
   edit
   mask 57, 'ZZZ9,99'.

SD CC-SD.
03 cc-nro-carga
   clear
   edit
   prompt 1, 'Nro.Carga :     '
   mask  13, 'ZZ9'.
 03 cant-ext
    edit
    prompt 17, 'Venta :         '
    mask   24, 'ZZZZ9,99'.
 03 cant-zof
    edit
    prompt 33, 'Oferta:         '
    mask   40, 'ZZZZ9,99'.
03 cant-z-e
   edit
   prompt 49, 'Total :         '
   mask   56, 'ZZZZ9,99'.

SD CG-SD.
03 iden-visitas
   clear
   edit
   prompt 1, ' TOTAL CLIENTES '
   mask  23, 'ZZ9'.
03 iden-cli-visit
   edit
   prompt 33, 'Visitados  :    '
   mask   46, 'ZZ9'.
03 iden-cli-concr
   edit
   prompt 49, 'Concretados:    '
   mask   62, 'ZZ9'.

SD MOD1-CC-SD.
03 ws-carga-camion
   clear
   edit
   prompt 1, 'Carga Camion Nro'
   mask  39, 'ZZ9'.

SD MAX-PROM-SD.
03 maximo-promocion
   edit
   mask 53, 'ZZZZZZ9'.

SD PROC-SD.
03 proc-ws
   prompt 17, " Proceso Activo "
   mask   33, "XXXXXXXXXXXXXXXX".

SD MEM-REM-S.
03 WS-MEM-AVAIL
   prompt 17, "           Bytes"
   mask   19, "ZZZZZ9"
   edit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				PROCEDURE DIVISION			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
PROCEDURE DIVISION.
DECLARATIVES.
DEC-1.
    when OFF   POWER-OFF
	       move 0 to flag-hora
	       backlight-off
	       if prende-apaga = 0
		  perform POWER-MESSAGE.
	 end-when
    when TMOUT alarm
	       move 0 to flag-hora
	       backlight-off
	       power-off
	       if prende-apaga = 0
		  perform POWER-MESSAGE.
	 end-when
    when KMEN  perform CHECK-MEMORY.
    when PROC  show PROC-SD
	       message 1,  '****************'
	       message 49, '****************'
	       wait 1 second
	       clear.
    when ADJ   adjust-lcd UP.
    when KBEEP perform AJUSTA-BEEP.
    when LIGHT perform TURN-LIGHT-ON-OFF.
;   when YES   CLEAR RETURN EXIT.
    when KNOTA perform AJUSTA-TONO.
end declaratives.

INITIAL SECTION.
INIT-SYSTEM.
;-----------
    set-keyboard STD-710.
    SET-DECLARATIVES DEC-1.
    move 700		    to user-tmout.
    move ' Inicalizacion  ' to proc-ws.
    move 5		    to fast-speed.
    move 15		    to scroll-speed.
    move '@'                to shift-char.
    move 0		    to flag-hora.
    move 0		    to carga-ok.
    move 0		    to tecla-beep.
    move 25		    to tecla-tono.
    move '      '           to cod-vendedor.

    read-clock. 				 ; inicio hora en 24 hrs
    move SY-DATE-TIME to fecha-ws.
    move hrs-ws       to hrs.
    move xxxxx-ws     to rr.
    if rr = 1 and hrs < 12
       add 12	      to hrs.
    move hrs	      to hrs-ws.
    move 1	      to yyyyy-ws.
    move fecha-ws     to SY-DATE-TIME.
    set-clock.

   ;perform AJUSTA-BEEP.
    perform POWER-MESSAGE.

INIT-010.
;--------
    perform MENU-PRINCIPAL.
    loop.

POWER-MESSAGE.
;-------------
    move 1 to prende-apaga.
    perform OPENREF-IDENTIFICA
	 when ER  perform CARGA-DATOS-ALL
		  loop.
    seek FIRST in IDENTIFICA-F
	 when EOF message  1, '****************'
		  message 17, 'Archivo Identif.'
		  message 33, '     Vacio      '
		  message 49, '****************'
		  action
		  perform CARGA-DATOS-ALL
		  loop.
    read IDENTIFICA-F.
    move iden-codigo	  to cod-vendedor.

POWER-MESSAGE-001.
;-----------------
    move '       ' to ws-prende-ptc.
    move ' '       to shift-char.
    message 01	'* EMBOSUR S.A  *'.
    message 17, '****************'.
    message 33, ' Ingrese  Clave '.
    message 49	'                '.
    accept PRENDE-PTC-SD
       when OK if ws-prende-ptc not = iden-password
		  beep
		  message 01, '****************'
		  message 17, '**   Acceso   **'
		  message 33, '**  Denegado  **'
		  message 49, '****************'
		  wait 1 second
		  loop
	       else
		  move iden-tipo-pedido to ws-tipo-pedido
		  next.
	    end-when
    loop.

POWER-MESS-002.
;--------------
    move '@' to shift-char.
    move 0   to prende-apaga.
    clear.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				   CONTRASTE				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
TURN-LIGHT-ON-OFF.
;-----------------
    if flag-hora = 0 then
       backlight-on 25 seconds
       move 1 to flag-hora
    else
       backlight-off
       move 0 to flag-hora.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			     AJUSTE DEL SONIDO BEEP			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
AJUSTA-BEEP.
;-----------
    examine tecla-beep
	 when 0 volume is quiet  move 3 to tecla-beep.
	 when 1 volume is soft	 move 0 to tecla-beep.
	 when 2 volume is medium move 1 to tecla-beep.
	 when 3 volume is loud	 move 2 to tecla-beep.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			     AJUSTE DEL TONO DE TECLAS			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
AJUSTA-TONO.
;-----------
    examine tecla-tono
	 when 00  key-click is 1   move  1 to tecla-tono.
	 when 01  key-click is 2   move  2 to tecla-tono.
	 when 02  key-click is 3   move  3 to tecla-tono.
	 when 03  key-click is 4   move  4 to tecla-tono.
	 when 04  key-click is 5   move  5 to tecla-tono.
	 when 05  key-click is 6   move  6 to tecla-tono.
	 when 06  key-click is 7   move  7 to tecla-tono.
	 when 07  key-click is 8   move  8 to tecla-tono.
	 when 08  key-click is 9   move  9 to tecla-tono.
	 when 09  key-click is 10  move 10 to tecla-tono.
	 when 10  key-click is 11  move 11 to tecla-tono.
	 when 11  key-click is 12  move 12 to tecla-tono.
	 when 12  key-click is 13  move 13 to tecla-tono.
	 when 13  key-click is 14  move 14 to tecla-tono.
	 when 14  key-click is 15  move 15 to tecla-tono.
	 when 15  key-click is 16  move 16 to tecla-tono.
	 when 16  key-click is 17  move 17 to tecla-tono.
	 when 17  key-click is 18  move 18 to tecla-tono.
	 when 18  key-click is 19  move 19 to tecla-tono.
	 when 19  key-click is 20  move 20 to tecla-tono.
	 when 20  key-click is 21  move 21 to tecla-tono.
	 when 21  key-click is 22  move 22 to tecla-tono.
	 when 22  key-click is 23  move 23 to tecla-tono.
	 when 23  key-click is 24  move 24 to tecla-tono.
	 when 24  key-click is 25  move 25 to tecla-tono.
	 when 25  key-click is	0  move  0 to tecla-tono.
    exit.
;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				  CHECK-MEMORY				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CHECK-MEMORY.
;-------------
    clear.
    move DISPLAY-BUFFER to DISPLAY-SAVE.
    if 2000 < MEM-AVAIL
       move 2000 to MEM-PROTECT
       message 1, 'MEM. DISPONIBLE '
       move OK to MEMORY-FLAG
       move MEM-AVAIL to WS-MEM-AVAIL
       show MEM-REM-S
    else
       if 200 < MEM-AVAIL
	  move 200 to MEM-PROTECT
	  message 1, ' FALTA  MEMORIA '
	  move OK to MEMORY-FLAG
	  move MEM-AVAIL to WS-MEM-AVAIL
	  show MEM-REM-S
	  beep
       else
	  move 200 to MEM-PROTECT
	  message 1, ' MEMORIA  LLENA '
	  move ER to MEMORY-FLAG
	  move MEM-AVAIL to WS-MEM-AVAIL
	  show MEM-REM-S.
    end-if
    wait 1 second.
    move DISPLAY-SAVE to DISPLAY-BUFFER.
    exit.

MENU-PRINCIPAL SECTION.
;----------------------
    move 1 to punt-mp.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				  MENU PRINCIPAL			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
MENU-PRINC-010.
;--------------
    move ' Menu Principal' to proc-ws.
    message 1,	'****************'.
    examine punt-mp
	    when 0 move 5 TO punt-mp	    loop.
	    when 1 message 17, '    PEDIDOS     '.
	    when 2 message 17, '     CENSO      '.
	    when 3 message 17, '    MUESTREO    '.
	    when 4 message 17, ' COMUNICACIONES '.
	    when 5 message 17, '    CONSULTA    '.
	    when 6 move 1 TO punt-mp	    loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-PROCESO.
	    when ENTER perform MENU-PROCESO.
	    when NO    add 1 to punt-mp.
	    when FAR   add 1 to punt-mp.
	    when BAR   subtract 1 from punt-mp.
	    when KINS  perform CONSULTA-CARGA-CAMION.
	    when KREV  perform CONSULTA-GENERAL.
    loop.

MENU-PROCESO.
;------------
    read-clock.
    move sy-date-time to fecha-ws.
    examine punt-mp
	    when 1 perform TOMA-PEDIDO.
	    when 2 perform CENSO.
	    when 3 perform MUESTREO.
	    when 4 perform COMUNICACIONES.
	    when 5 perform CONSULTA.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				 TOMA DE PEDIDO 			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
TOMA-PEDIDO.
;-----------
    move 1 to punt-notas.

TOMA-PEDIDO-001.
;---------------
    move '     Venta     ' to proc-ws.
    message 1,	'****************'.
    examine punt-notas
	    when 0 move 3 to punt-notas     loop.
	    when 1 message 17 ' Ingreso Pedido '.
	    when 2 message 17 ' Revisar Pedido '.
	    when 3 message 17 ' Anular Pedido  '.
	    when 4 move 1 to punt-notas     loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-NOTAS.
	    when ENTER perform MENU-NOTAS.
	    when KEXIT exit.
	    when KEND  exit.
	    when NO    add 1 to punt-notas.
	    when FAR   add 1 to punt-notas.
	    when BAR   subtract 1 from punt-notas.
    loop.

MENU-NOTAS.
;----------
    move 0 to tipcli.
    examine punt-notas
	    when 1 perform PEDIDOS.
	    when 2 perform REVISA.
	    when 3 perform ANULA.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				  PEDIDOS				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
PEDIDOS.
;-------
    move 1 to punt-ped.

PEDIDOS-001.
;-----------
    move '     Venta     ' to proc-ws.
    message 1,	'****************'.
    examine punt-ped
	    when 0 move 3 to punt-ped	    loop.
	    when 1 message 17 '  Cliente Ruta  '.
	    when 2 message 17 'Cliente No  Ruta'.
	    when 3 message 17 ' Cliente  Nuevo '.
	    when 4 move 1 to punt-ped	    loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-PEDIDOS.
	    when ENTER perform MENU-PEDIDOS.
	    when KEXIT exit.
	    when KEND  exit.
	    when NO    add 1 to punt-ped.
	    when FAR   add 1 to punt-ped.
	    when BAR   subtract 1 from punt-ped.
    loop.

MENU-PEDIDOS.
;------------
    move 0 to cliente-atendido.
    move 0 to atencion.
    examine punt-ped
	    when 1 move 0 to tipcli
		   move '  Venta  Ruta  ' to proc-ws
		   perform RUTA
		   exit.
	    when 2 move 1 to tipcli
		   move ' Venta No Ruta ' to proc-ws
		   perform NO-RUTA.
	    when 3 move 2 to tipcli
		   move 'Venta Clien.Nue' to proc-ws
		   perform NUEVO.
    exit.

SEL-ZOFRI-EXTEN.
;---------------
    message 1,	'****************'.
    examine punt-zof-ext
	    when 0 move 2 to punt-zof-ext   loop.
	    when 1 message 17 '     Oferta     '.
	    when 2 message 17 '     Venta      '.
	    when 3 move 1 to punt-zof-ext   loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   exit.
	    when ENTER	exit.
	    when KEXIT exit.
	    when KEND  exit.
	    when NO    add 1 to punt-zof-ext.
	    when FAR   add 1 to punt-zof-ext.
	    when BAR   subtract 1 from punt-zof-ext.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			      CLIENTE NUEVO				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
NUEVO.
;-----
    perform LIMPIA-NUE.
    move 2 to tipcli.
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-prox-nota to ws-prox-nota.
    move iden-empresa	to cod-empresa
    perform INGR-DATOS-CLI
	    when KEXIT exit.
	    when KEND  exit.
    perform PEDIDOS-ALL.
    exit.

LIMPIA-NUE.
;----------
    move 1   to punt-dat-cli.
    move 0   to ws-primera-vez.
    move 0   to cod-clinue.
    move 0   to cod-ramo-ws.
    move 0   to nivel-prec.
    move 0   to fono-nue.
    move 0   to fecha-nac1-ws.
    move 0   to fecha-nac2-ws.
    move 0   to fecha-nac3-ws.
    move 0   to ruta-ws.
    move ' ' to razon-soc-ws.
    move ' ' to dire-clinue.
    move ' ' to dire-numero.
    exit.

INGR-DATOS-CLI.
;--------------
    examine punt-dat-cli
	    when  0 move 1 to punt-dat-cli loop.
	    when  1 accept CODIGO-CLI-SD
		       when KEXIT exit.
		       when KEND  exit.
		    if cod-clinue = 0 loop.
		    perform OPENREF-CLIEN2
		       when OK move cod-clinue to cod-clie-ws
			       search FIRST for llave-cliente in CLIENTES-F
				  when OK beep
					  message 1,  '****************'
					  message 17, '   Codigo  Ya   '
					  message 33, '     Existe     '
					  message 49, '****************'
					  wait 1 second
					  loop.
			    end-when
		    move OK to last-key.
	    when  2 perform ACEPTA-CODRAMO
		       when ER exit.
		  end-when
	    when  3 accept FONO-SD.
	    when  4 perform ACCEP-RUT
			    when BAR   subtract 1 from punt-dat-cli loop.
			    when KEXIT exit.
			    when KEND  exit.
		  end-when
	    when  5 accept RAZON-SOC-SD.
	    when  6 accept DIRECC-CLI-SD.
	    when  7 accept NUMERO-CLI-SD.
	    when  8 perform ACEPTA-FECHA-NAC.
	    when  9 accept RUTA-SD.
	    when 10 move 1 to punt-dia-vis
		    clear
		    perform ACEPTA-SECUENCIA-VIS
			    when KEXIT exit.
			    when KEND  exit.
		  end-when
	    when 11 exit.
    no-op.
	    when OK    add 1 to punt-dat-cli.
	    when FAR   add 1 to punt-dat-cli.
	    when BAR   subtract 1 from punt-dat-cli.
	    when KEXIT exit.
	    when KEND  exit.
    loop.

ACEPTA-CODRAMO.
;--------------
    perform OPENREF-RAMOS
	    when ER exit.
    seek FIRST in RAMOS-F
	    when EOF message 1,  '****************'
		     message 17, ' Archivo  Ramos '
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read RAMOS-F.

ACEPTA-CODRAMO-001.
;------------------
    accept COD-RAMO-SD
	 when KEXIT exit.
	 when KEND  exit.
	 when OK    search FIRST for cod-ramo-ws in RAMOS-F
			 when OK read RAMOS-F
				 perform REC-RAMOS
				 exit.
	      end-when
	 when DAR   seek LAST in RAMOS-F
		    read RAMOS-F
		    perform REC-RAMOS
		    exit.
	 when UAR   seek FIRST in RAMOS-F
		    read RAMOS-F
		    perform REC-RAMOS
		    exit.
    loop.

REC-RAMOS.
;---------
    move ra-codigo to cod-ramo-ws.
    show COD-RAMO-SD.
    show DESC-RAMO-SD.
    fast-action
	 when ENTER move OK to last-key exit.
	 when KEND  move ER to last-key exit.
	 when KEXIT move ER to last-key exit.
	 when DAR   seek PRIOR in RAMOS-F
			when EOF beep
				 message 49, ' Inicio Archivo '
				 wait 1 second
				 seek FIRST in RAMOS-F.
		    read RAMOS-F.
	 when UAR   seek NEXT in RAMOS-F
			when EOF beep
				 message 49, '  Fin Archivo   '
				 wait 1 second
				 seek LAST in RAMOS-F.
		    read RAMOS-F.
    loop.

ACEPTA-FECHA-NAC.
;----------------
    accept FECHA-NAC1-SD
	when OK    perform FECHA-NAC-002
		      when BAR	 loop.
		      when KEXIT exit.
		      when KEND  exit.
		      when OK	 exit.
	     end-when
	when BAR   exit.
	when KEXIT exit.
	when KEND  exit.
    loop.

FECHA-NAC-002.
;-------------
    accept FECHA-NAC2-SD
	when OK    perform FECHA-NAC-003
		      when BAR	 loop.
		      when KEXIT exit.
		      when KEND  exit.
		      when OK	 exit.
	     end-when
	when BAR   exit.
	when KEXIT exit.
	when KEND  exit.
    loop.

FECHA-NAC-003.
;-------------
    accept FECHA-NAC3-SD
	when OK    exit.
	when BAR   exit.
	when KEXIT exit.
	when KEND  exit.
    loop.

ACEPTA-SECUENCIA-VIS.
;--------------------
    message  1, ' Dia de  Visita '.
    message 49, '  L M M J V S   '.
    examine punt-dia-vis
       when 0 move 1 to punt-dia-vis loop.
       when 1 accept DIA-VIS1-SD
	      if dia-aux-1 not = '1' and dia-aux-1 not = '0' loop.
	    end-when
       when 2 accept DIA-VIS2-SD
	      if dia-aux-2 not = '1' and dia-aux-2 not = '0' loop.
	    end-when
       when 3 accept DIA-VIS3-SD
	      if dia-aux-3 not = '1' and dia-aux-3 not = '0' loop.
	    end-when
       when 4 accept DIA-VIS4-SD
	      if dia-aux-4 not = '1' and dia-aux-4 not = '0' loop.
	    end-when
       when 5 accept DIA-VIS5-SD
	      if dia-aux-5 not = '1' and dia-aux-5 not = '0' loop.
	    end-when
       when 6 accept DIA-VIS6-SD
	      if dia-aux-6 not = '1' and dia-aux-6 not = '0' loop.
	    end-when
       when 7 perform CONFIRMA-SECUENCIA-VIS
		  when ENTER move OK to last-key exit.
		  when YES   move OK to last-key exit.
		  when NO    move 1 to punt-dia-vis
			     clear
			     loop.
	    end-when
    no-op
       when KEXIT exit.
       when KEND  exit.
       when OK	  add 1 to punt-dia-vis.
       when BAR   subtract 1 from punt-dia-vis.
    loop.

CONFIRMA-SECUENCIA-VIS.
;----------------------
    clear.
    message  1, '****************'.
    message 17, '  Secuencia OK  '.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action.
       when ENTER exit.
       when YES   exit.
       when NO	  exit.
       when KEXIT exit.
       when KEND  exit.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				 VALIDACION RUT 			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
ACCEP-RUT.
;---------
    accept RUT-SD.
	   when BAR   exit.
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    accept DIGV-SD.
	   when BAR   loop.
	   when KEND  exit.
	   when KEXIT exit.
    move cli-rut1-ws to rut-1.
    move 2 to ws-con.
    move 8 to ws-tbl.
    move 0 to ws-suma.
    move 0 to resto-aux1.
    if cli-rut1-ws = 0
       move OK to last-key
       exit.
    perform VALIDA-DIGV11.
    if cli-dig-ws = ws-dig
       move OK to last-key
       exit.
    beep.
    message 49, '* Ruc Invalido *'.
    wait 1 second.
    loop.

VALIDA-DIGV11.
;-------------
    if ws-tbl < 1 then
       move ws-suma to ws-resto1
       perform COMPARA
       exit.
    move ws-num(ws-tbl) to ws-num-aux.
    multiply ws-num-aux by ws-con.
    add ws-num-aux	to ws-suma.
    if ws-con = 7
       move 1 to ws-con.
    subtract 1 from ws-tbl.
    add 1 to ws-con.
    loop.

COMPARA.
;-------
    divide 11 into ws-resto1 remainder resto-aux1.
    subtract 11 from resto-aux1.
    if resto-aux1 = 10
       move 'K' to ws-dig
       exit.
    if resto-aux1 = 11
       move 0 to ws-dig
       exit.
    move resto-aux1 to resto-aux.
    move resto-aux  to ws-dig.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			      CLIENTE NO RUTA				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
NO-RUTA.
;-------
    perform SELEC-VISITA.
       when KEXIT exit.
       when KEND  exit.
    if ws-dia-aux = '000000' exit.
    if ws-dia-aux = '      ' exit.
    move 1 to tipcli.
    perform RUTA.
    exit.

SELEC-VISITA.
;------------
    move 1 to punt-dia-vis.
    move 0 to ws-dia-aux.
    clear.

SELEC-VISITA-001.
;----------------
    message  1, ' Dia de  Visita '.
    message 49, '  L M M J V S   '.
    examine punt-dia-vis
       when 0 move 1 to punt-dia-vis loop.
       when 1 accept dia-vis1-sd
	      if dia-aux-1 not = '1' and dia-aux-1 not = '0' loop.
	    end-when
       when 2 accept dia-vis2-sd
	      if dia-aux-2 not = '1' and dia-aux-2 not = '0' loop.
	    end-when
       when 3 accept dia-vis3-sd
	      if dia-aux-3 not = '1' and dia-aux-3 not = '0' loop.
	    end-when
       when 4 accept dia-vis4-sd
	      if dia-aux-4 not = '1' and dia-aux-4 not = '0' loop.
	    end-when
       when 5 accept dia-vis5-sd
	      if dia-aux-5 not = '1' and dia-aux-5 not = '0' loop.
	    end-when
       when 6 accept dia-vis6-sd
	      if dia-aux-6 not = '1' and dia-aux-6 not = '0' loop.
	    end-when
       when 7 exit.
    no-op
       when KEXIT exit.
       when KEND  exit.
       when OK	  if dia-aux-1 = '1' or dia-aux-2 = '1' or dia-aux-3 = '1' or
		  dia-aux-4 = '1' or dia-aux-5 = '1' or dia-aux-6 = '1' exit.
		  add 1 to punt-dia-vis.
       when FAR   add 1 to punt-dia-vis.
       when BAR   subtract 1 from punt-dia-vis.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				 CLIENTE RUTA				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
RUTA.
;----
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa
    perform SELEC-DIA-HOY.
    if ws-dia-ruta = '000000' exit.
    if ws-dia-ruta = '      ' exit.
    perform OPENREF-CLIENTES
	    when ER exit.
    seek FIRST in CLIENTES-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Clientes'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    perform RUTA-001.
    exit.

SELEC-DIA-HOY.
;-------------
    move iden-dia-activo to dia-activo-ws.
    move '000000'        to ws-dia-ruta.
    if dia-activo-ws = 1
       move '100000' to ws-dia-ruta.              ; Lunes
    if dia-activo-ws = 2
       move '010000' to ws-dia-ruta.              ; Martes
    if dia-activo-ws = 3
       move '001000' to ws-dia-ruta.              ; Miercoles
    if dia-activo-ws = 4
       move '000100' to ws-dia-ruta.              ; Jueves
    if dia-activo-ws = 5
       move '000010' to ws-dia-ruta.              ; Viernes
    if dia-activo-ws = 6
       move '000001' to ws-dia-ruta.              ; Sabado
    exit.

RUTA-001.
;--------
    move 0 to atencion.
    move 0 to existe-cabe.
    perform OPENREF-ATENCION
	 when ER move 1 to existe-cabe.
    perform OPENREF-RAMOS
	 when ER exit.
    move 0 to atencion.
    move 0 to existe-cli-ruta.
    move 0 to cod-clie-ws.
    accept COD-CLIE-SD
	  when OK    search FIRST for llave-cliente in CLIENTES-F
			   when ER beep
				   message 1,  '****************'
				   message 17, '   No  Existe   '
				   message 33, '    Cliente     '
				   message 49, '****************'
				   wait 1 second
				   loop.
			   when OK read CLIENTES-F
				   perform PREGUNTA-IFES
					  when ER loop.
				   perform RECORRE-CLI-010.
	       end-when
	  when UAR   perform RECORRE-CLI-UAR.
	  when DAR   perform RECORRE-CLI-DAR.
	  when KEXIT exit.
	  when KEND  exit.
    loop.

PREGUNTA-IFES.
;-------------
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '0' perform NO-ES-RUTA.
       if dia-2 = '1' and cli-frec2 = '0' perform NO-ES-RUTA.
       if dia-3 = '1' and cli-frec3 = '0' perform NO-ES-RUTA.
       if dia-4 = '1' and cli-frec4 = '0' perform NO-ES-RUTA.
       if dia-5 = '1' and cli-frec5 = '0' perform NO-ES-RUTA.
       if dia-6 = '1' and cli-frec6 = '0' perform NO-ES-RUTA.
    else
       if dia-aux-1 = '1' and cli-frec1 = '0' perform NO-ES-RUTA.
       if dia-aux-2 = '1' and cli-frec2 = '0' perform NO-ES-RUTA.
       if dia-aux-3 = '1' and cli-frec3 = '0' perform NO-ES-RUTA.
       if dia-aux-4 = '1' and cli-frec4 = '0' perform NO-ES-RUTA.
       if dia-aux-5 = '1' and cli-frec5 = '0' perform NO-ES-RUTA.
       if dia-aux-6 = '1' and cli-frec6 = '0' perform NO-ES-RUTA.
    end-if
    exit.

NO-ES-RUTA.
;----------
    beep.
    message 1,	'****************'.
    message 17, ' No Corresponde '.
    message 33, ' dia  de Visita '.
    message 49, '****************'.
    wait 1 second.
    move ER to last-key.
    exit.

RECORRE-CLI-UAR.
;---------------
    seek FIRST in CLIENTES-F.
    read CLIENTES-F.
    perform AVAN-DIA-RUTA.
    if existe-cli-ruta = 1 exit.
    perform RECORRE-CLI-010.
    exit.

RECORRE-CLI-DAR.
;---------------
    seek LAST in CLIENTES-F.
    read CLIENTES-F.
    perform RETR-DIA-RUTA.
    if existe-cli-ruta = 1 exit.
    perform RECORRE-CLI-010.
    exit.

AVAN-DIA-RUTA.
;-------------
    if existe-cli-ruta = 1
       beep
       message	1 '****************'
       message 17 '   No Existen   '
       message 33 'Clientes del Dia'
       message 49 '****************'
       wait 1 second
       exit.
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-2 = '1' and cli-frec2 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-3 = '1' and cli-frec3 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-4 = '1' and cli-frec4 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-5 = '1' and cli-frec5 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-6 = '1' and cli-frec6 = '0'
	  perform AVANZA-CLIENTE
	  loop.
    else
       if dia-aux-1 = '1' and cli-frec1 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-aux-2 = '1' and cli-frec2 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-aux-3 = '1' and cli-frec3 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-aux-4 = '1' and cli-frec4 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-aux-5 = '1' and cli-frec5 = '0'
	  perform AVANZA-CLIENTE
	  loop.
       if dia-aux-6 = '1' and cli-frec6 = '0'
	  perform AVANZA-CLIENTE
	  loop.
    end-if
    exit.

RETR-DIA-RUTA.
;-------------
    if existe-cli-ruta = 1
       beep
       message	1 '****************'
       message 17 '   No Existen   '
       message 33 'Clientes del Dia'
       message 49 '****************'
       wait 1 second
       exit.
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-2 = '1' and cli-frec2 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-3 = '1' and cli-frec3 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-4 = '1' and cli-frec4 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-5 = '1' and cli-frec5 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-6 = '1' and cli-frec6 = '0'
	  perform RETROC-CLIENTE
	  loop.
    else
       if dia-aux-1 = '1' and cli-frec1 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-aux-2 = '1' and cli-frec2 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-aux-3 = '1' and cli-frec3 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-aux-4 = '1' and cli-frec4 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-aux-5 = '1' and cli-frec5 = '0'
	  perform RETROC-CLIENTE
	  loop.
       if dia-aux-6 = '1' and cli-frec6 = '0'
	  perform RETROC-CLIENTE
	  loop.
    end-if
    exit.

RECORRE-CLI-010.
;---------------
    move iden-prox-nota to ws-prox-nota.
    move 0		to ws-primera-vez.
    move 0		to cliente-atendido.
    search FIRST for cli-ramo in RAMOS-F
	when OK read RAMOS-F
		move ra-descripcion	to ws-desc-ramo.
	when ER move '****************' to ws-desc-ramo.
    show SEL-CLIENTE-SD.

    move 0 to existe-cabe.
    perform OPENREF-ATENCION
	    when ER move 1 to existe-cabe.

    perform CLIENTE-ATEND.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.

	 when ENTER perform PEDIDOS-ALL
		    perform AVAN-RUTA
		    if existe-cli-ruta = 1
		       move 0 to existe-cli-ruta
		       perform RETR-RUTA
		       if existe-cli-ruta = 1 exit.
		    end-if
		    loop.
	 when UAR   perform AVAN-RUTA
		    if existe-cli-ruta = 1
		       move 0 to existe-cli-ruta
		       perform RETR-DIA-RUTA
		       if existe-cli-ruta = 1 exit.
		    end-if
		    loop.
	 when DAR   perform RETR-RUTA
		    if existe-cli-ruta = 1
		       move 0 to existe-cli-ruta
		       perform AVAN-DIA-RUTA
		       if existe-cli-ruta = 1 exit.
		    end-if
		    loop.

	;when BAR   perform  RECORRE-CLR-RUTA.

	 when FAR   perform  RECORRE-CLR-RUTA loop.
	   ;	    perform MUESTRA-DETALLE
	   ;		 when KEXIT loop.
	   ;		 when KEND  loop.
	   ;		 when BAR   loop.
	   ;	    perform PEDIDOS-ALL
	   ;	    seek NEXT in CLIENTES-F
	   ;		 when EOF message 49, '-Final  archivo-'
	   ;			  beep
	   ;			  wait 1 seconds
	   ;			  seek last in CLIENTES-F.
	   ;	    read CLIENTES-F
	   ;	    perform RETR-RUTA
	   ;	    if existe-cli-ruta = 1 exit.
	   ;  end-when
    loop.


RECORRE-CLR-RUTA.
;----------------
    move 0 to existe-cabe.
    move 0 to existe-cabe-aux.
    move 0 to ws-prox-nota.
   ;move cli-codigo to ws-codcli.
    perform OPENREF-CABE2
       when ER move 1 to existe-cabe
	       perform OPENUP-CABECERA.
    seek FIRST in CABECERA-F
       when EOF move 1 to existe-cabe.
    read CABECERA-F.
    perform BUSCA-PEDIDOS-CLI.


MUESTRA-RUTA-PED.
;--------------------
    clear.
    if existe-cabe-aux = 1 and existe-cabe = 1
       search FIRST for ws-prox-nota in CABECERA-F
       read CABECERA-F
       move 0 to existe-cabe.

    if existe-cabe = 1
       move 0 to ws-prox-nota.

    show MUE-SEL-CLI-SD.
    if existe-cabe = 1
       message 27, '******'.
    fast-action
	 when KNEXT if existe-cabe = 0 or existe-cabe-aux = 1
		       move 1 to existe-cabe-aux
		       seek NEXT in CABECERA-F
			    when EOF move 1 to existe-cabe
				     loop.
		       read CABECERA-F
		       perform BUSCA-PEDIDOS-CLI
		       loop.
	      end-when
	 when UAR   if existe-cabe = 0 or existe-cabe-aux = 1
		       move 1 to existe-cabe-aux
		       seek NEXT in CABECERA-F
			    when EOF move 1 to existe-cabe
				     loop.
		       read CABECERA-F
		       perform BUSCA-PEDIDOS-CLI
		       loop.
	      end-when
	 when DAR   if existe-cabe = 0 or existe-cabe-aux = 1
		       move 1 to existe-cabe-aux
		       seek PRIOR in CABECERA-F
			    when EOF move 1 to existe-cabe
				     loop.
		       read CABECERA-F
		       perform BUSCA-PED-CLI-CONS.
		       loop.
	      end-when
	 when KMOD  perform CONS-MOD-1	loop.
	 when BAR   move 3 to punt-revisa1  move 1 to punt-revisa2 perform REVISA-001.
	 when KEND  exit.
	 when KEXIT exit.
	 when ENTER perform CONSULTA-CLR-001.
	 when FAR   perform CONSULTA-CLR-001.
    exit.

BUSCA-PED-CLI-CONS.
;-----------------
   if cli-codigo = cabe-codigo and cabe-borrado = 0
      move cabe-nroped to ws-prox-nota
      exit.
   seek PRIOR in CABECERA-F
      when EOF move 1 to existe-cabe
	       exit.
   read CABECERA-F.
   loop.


CLIENTE-ATEND.
;-------------
    if existe-cabe = 1 exit.
    search FIRST for cli-codigo in ATENCION-F
       when ER	exit.
       when EOF exit.
    read ATENCION-F.
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '1'
	  if aten-aten1 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-2 = '1' and cli-frec2 = '1'
	  if aten-aten2 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-3 = '1' and cli-frec3 = '1'
	  if aten-aten3 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-4 = '1' and cli-frec4 = '1'
	  if aten-aten4 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-5 = '1' and cli-frec5 = '1'
	  if aten-aten5 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-6 = '1' and cli-frec6 = '1'
	  if aten-aten6 = 1 perform MENSAJE-CLI-ATEN.
       end-if
    else
       if dia-aux-1 = '1' and cli-frec1 = '1'
	  if aten-aten1 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-aux-2 = '1' and cli-frec2 = '1'
	  if aten-aten2 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-aux-3 = '1' and cli-frec3 = '1'
	  if aten-aten3 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-aux-4 = '1' and cli-frec4 = '1'
	  if aten-aten4 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-aux-5 = '1' and cli-frec5 = '1'
	  if aten-aten5 = 1 perform MENSAJE-CLI-ATEN.
       end-if
       if dia-aux-6 = '1' and cli-frec6 = '1'
	  if aten-aten6 = 1 perform MENSAJE-CLI-ATEN.
       end-if
    end-if
    move 0 to existe-cabe.
    exit.

MENSAJE-CLI-ATEN.
;----------------
    beep.
    message 49, 'Cliente Atendido'.
    move 1 to cliente-atendido.
    exit.

AVAN-RUTA.
;---------
    perform AVANZA-CLIENTE.
    if existe-cli-ruta = 1 exit.
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '0' loop.
       if dia-2 = '1' and cli-frec2 = '0' loop.
       if dia-3 = '1' and cli-frec3 = '0' loop.
       if dia-4 = '1' and cli-frec4 = '0' loop.
       if dia-5 = '1' and cli-frec5 = '0' loop.
       if dia-6 = '1' and cli-frec6 = '0' loop.
    else
       if dia-aux-1 = '1' and cli-frec1 = '0' loop.
       if dia-aux-2 = '1' and cli-frec2 = '0' loop.
       if dia-aux-3 = '1' and cli-frec3 = '0' loop.
       if dia-aux-4 = '1' and cli-frec4 = '0' loop.
       if dia-aux-5 = '1' and cli-frec5 = '0' loop.
       if dia-aux-6 = '1' and cli-frec6 = '0' loop.
    end-if
    exit.

RETR-RUTA.
;---------
    perform RETROC-CLIENTE.
    if existe-cli-ruta = 1 exit.
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '0' loop.
       if dia-2 = '1' and cli-frec2 = '0' loop.
       if dia-3 = '1' and cli-frec3 = '0' loop.
       if dia-4 = '1' and cli-frec4 = '0' loop.
       if dia-5 = '1' and cli-frec5 = '0' loop.
       if dia-6 = '1' and cli-frec6 = '0' loop.
    else
       if dia-aux-1 = '1' and cli-frec1 = '0' loop.
       if dia-aux-2 = '1' and cli-frec2 = '0' loop.
       if dia-aux-3 = '1' and cli-frec3 = '0' loop.
       if dia-aux-4 = '1' and cli-frec4 = '0' loop.
       if dia-aux-5 = '1' and cli-frec5 = '0' loop.
       if dia-aux-6 = '1' and cli-frec6 = '0' loop.
    end-if
    exit.

AVANZA-CLIENTE.
;--------------
    seek NEXT in CLIENTES-F
	 when EOF message 49, '-Final  archivo-'
		  beep
		  move 1 to existe-cli-ruta
		  wait 1 second
		  seek last in CLIENTES-F.
    read CLIENTES-F.
    exit.

RETROC-CLIENTE.
;--------------
    seek PRIOR in CLIENTES-F
	 when EOF message 49, '-Inicio archivo-'
		  beep
		  move 1 to existe-cli-ruta
		  wait 1 second
		  seek first in CLIENTES-F.
    read CLIENTES-F.
    exit.

MUESTRA-DETALLE.
;---------------
    if cli-tipo-credito = 0
       move 'Contado' to forma-pago-ws
    else ;if cli-tipo-credito = 1
	    move 'Credito' to forma-pago-ws
	 ;else
	 ;   move 'Oferta ' to forma-pago-ws
	 ;end-if
    end-if
    show CLIENTE-DET1-SD.
    action
	when KEXIT exit.
	when KEND  exit.
	when BAR   exit.
    move cli-numero to dire-numero.
    show CLIENTE-DET2-SD.
    show NUMERO-CLI-SD.
    action
	when KEXIT exit.
	when KEND  exit.
	when BAR   loop.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ   PROCESO IGUAL PARA TOMA DE PEDIDO EN GENERAL  ( RUTA, NO RUTA Y NUEVO)   ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ

PEDIDOS-ALL.
;----------
    move iden-nivel-prec to nivel-prec.
    move 0 to ws-total-nota.
    show COMPRA-PEDIDO-SD.
    action
	when ENTER perform PEDIDOS-ALL-001
			   when ER loop.
		   perform DETALLE-PEDIDO   exit.
	when YES   perform PEDIDOS-ALL-001
			   when ER loop.
		   perform DETALLE-PEDIDO   exit.
	when NO    if tipcli = 0 or tipcli = 1
		      perform MOTIVO-NO-COMPRA.
		   exit.
	when KEXIT exit.
	when KEND  exit.
    loop.

PEDIDOS-ALL-001.
;---------------
    perform LEE-TIPO-PEDIDO
    move 2 to punt-zof-ext
    if ws-tipo-pedido = 1
       perform SEL-ZOFRI-EXTEN
	when KEXIT move ER to last-key exit.
	when KEND  move ER to last-key exit.
    end-if
exit.

MOTIVO-NO-COMPRA.
;----------------
    perform OPENREF-MOTIVOS
	 when ER exit.
    seek FIRST in MOTIVOS-NO-COMPRA-F
	 when EOF beep
		  message  1, '****************'
		  message 17, 'Archivo  Motivos'
		  message 33, '     Vacio      '
		  message 49, '****************'
		  wait 1 second
		  exit.
    read MOTIVOS-NO-COMPRA-F.

MOTIVO-NO-001.
;-------------
    message  1, 'MOTIVO NO COMPRA'.
    message 17, '****************'.
    message 49, '    Yes / No    '.
    show MOTIVO-SD
    action
       when ENTER perform GRABA-NO-COMPRA   exit.
       when YES   perform GRABA-NO-COMPRA   exit.
       when NO	  seek NEXT in MOTIVOS-NO-COMPRA-F
		       when EOF seek FIRST in MOTIVOS-NO-COMPRA-F.
		  read MOTIVOS-NO-COMPRA-F.
       when FAR   seek NEXT in MOTIVOS-NO-COMPRA-F
		       when EOF seek FIRST in MOTIVOS-NO-COMPRA-F.
		  read MOTIVOS-NO-COMPRA-F.
       when BAR   seek PRIOR in MOTIVOS-NO-COMPRA-F
		       when EOF seek LAST in MOTIVOS-NO-COMPRA-F.
		  read MOTIVOS-NO-COMPRA-F.
       when KEXIT exit.
       when KEND  exit.
    loop.

LEE-TIPO-PEDIDO.
;---------------
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-tipo-pedido to ws-tipo-pedido
    exit.


GRABA-NO-COMPRA.
;---------------
    if cliente-atendido = 0 and ncomp-confirma = 1
       add 1 to iden-cli-visit.
    rewrite REG-IDENTIFICA.

    read-clock.
    move sy-date-time	to fecha-ws.

    perform OPENUP-CABECERA.
    move 0		to cabe-nroped.
    move cli-codigo	to cabe-codigo.
    move ano-ws 	to cabe-aa.
    move mes-ws 	to cabe-mm.
    move dia-ws 	to cabe-dd.
    move hrs-ws 	to cabe-hrs1.
    move minu-ws	to cabe-min1.
    move hrs-ws 	to cabe-hrs2.
    move minu-ws	to cabe-min2.
    move 0		to cabe-tot-nota.
    move 0		to cabe-borrado.
    move 0		to cabe-ruta-no-ruta.
    move 0		to cabe-nro-carga.
    move 0		to cabe-tipo-credito.
    move 0		to cabe-nivel-precio.
    if punt-zof-ext = 2
       move 0		to cabe-flag-zf-ze
    else
       move 1		to cabe-flag-zf-ze.
    move cli-ruta	to cabe-ruta.
    move x'0D'          to cabe-c1.
    move x'0A'          to cabe-c2.
    write REG-CABECERA.

    perform OPENUP-ATENCION.
    seek FIRST in ATENCION-F
	when EOF move cli-codigo to aten-codigo
		 move 0 	 to aten-atencion
		 if ncomp-confirma = 1
		    perform GRABA-ATEN-CLI.
		 move ncomp-codigo to aten-cod-motivo
		 move x'0D'        to aten-c1
		 move x'0A'        to aten-c2
		 write REG-ATENCION
		 exit.

    search FIRST for cli-codigo in ATENCION-F
	when ER move cli-codigo     to aten-codigo
		move 0		    to aten-atencion
		if ncomp-confirma = 1
		   perform GRABA-ATEN-CLI.
		move ncomp-codigo to aten-cod-motivo
		move x'0D'        to aten-c1
		move x'0A'        to aten-c2
		write REG-ATENCION
		exit.
	when OK read ATENCION-F
		if ncomp-confirma = 1
		   perform GRABA-ATEN-CLI.
		move ncomp-codigo to aten-cod-motivo
		move x'0D'        to aten-c1
		move x'0A'        to aten-c2
		rewrite REG-ATENCION.
    exit.

GRABA-ATEN-CLI.
;--------------
    if tipcli = 0
       if dia-1 = '1' and cli-frec1 = '1' move 1 to aten-aten1.
       if dia-2 = '1' and cli-frec2 = '1' move 1 to aten-aten2.
       if dia-3 = '1' and cli-frec3 = '1' move 1 to aten-aten3.
       if dia-4 = '1' and cli-frec4 = '1' move 1 to aten-aten4.
       if dia-5 = '1' and cli-frec5 = '1' move 1 to aten-aten5.
       if dia-6 = '1' and cli-frec6 = '1' move 1 to aten-aten6.
    else
       if dia-aux-1 = '1' and cli-frec1 = '1' perform graba-otro-dia.
       if dia-aux-2 = '1' and cli-frec2 = '1' perform graba-otro-dia.
       if dia-aux-3 = '1' and cli-frec3 = '1' perform graba-otro-dia.
       if dia-aux-4 = '1' and cli-frec4 = '1' perform graba-otro-dia.
       if dia-aux-5 = '1' and cli-frec5 = '1' perform graba-otro-dia.
       if dia-aux-6 = '1' and cli-frec6 = '1' perform graba-otro-dia.
    end-if
    exit.

GRABA-OTRO-DIA.
;--------------
    if iden-dia-activo = 1 move 1 to aten-aten1.    ; Rescato dia de la semana
    if iden-dia-activo = 2 move 1 to aten-aten2.    ; para grabar el dia de la
    if iden-dia-activo = 3 move 1 to aten-aten3.    ; semana en que se tomo el
    if iden-dia-activo = 4 move 1 to aten-aten4.    ; Pedido.
    if iden-dia-activo = 5 move 1 to aten-aten5.
    if iden-dia-activo = 6 move 1 to aten-aten6.
    exit.

DETALLE-PEDIDO.
;--------------
    move nivel-prec to nivel-p-aux.
    perform OPENREF-NIVEL-PREC
       when ER exit.

    show NIVEL-PREC-SD.
    action
       when KMOD accept NIVEL-PREC-SD
		   when OK search FIRST for nivel-prec in NIVELES-PREC-F OFFSET is npre-nivel-prec
			     when ER beep
				     message 49, 'Nivel  no valido'
				     wait 1 second
				     move nivel-p-aux to nivel-prec.
			end-when
		 loop.
	    end-when

    if tipcli = 0
       perform OPENREF-MENSAJE-CLIENTE
	       when OK search FIRST for cli-codigo in MENSAJE-CLI-F
			   when KEXIT exit.
			   when KEND  exit.
			   when OK    read MENSAJE-CLI-F
				      message  1, '****************'
				      message 49, '****************'
				      show MENSAJE-CLI-SD
				      action.
		    end-when
    end-if
    perform OPENREF-PRODUCTOS
	    when ER exit.

DETALLE-PEDIDO-001.
;------------------
    move 0 to ws-cod-producto.
    accept COD-PRODUCTO-SD
	  when OK    search FIRST for ws-cod-producto in PRODUCTOS-F
			   when ER beep
				   message 1,  '****************'
				   message 17, '   No  Existe   '
				   message 33, '    Producto    '
				   message 49, '****************'
				   wait 1 second
				   loop.
			   when OK read PRODUCTOS-F
				   search FIRST for llave-np in NIVELES-PREC-F
				       when ER beep
					       message 1,  '****************'
					       message 17, 'No existe precio'
					       message 33, '  del producto  '
					       message 49, '****************'
					       wait 1 second
					       loop.
				   read NIVELES-PREC-F
				   perform RECORRE-PROD-010
				   loop.
	       end-when
	  when UAR   perform RECORRE-PROD-UAR loop.
	  when DAR   perform RECORRE-PROD-DAR loop.
	  when KEND  if ws-primera-vez = 1
			perform SEGURO-FIN
			    when YES   perform TOTALES-FINALES.
			    when ENTER perform TOTALES-FINALES.
			    when NO    loop.
		     end-if
		     exit.
	  when KEXIT if ws-primera-vez = 1
			perform SEGURO-FIN
			    when YES   perform TOTALES-FINALES.
			    when ENTER perform TOTALES-FINALES.
			    when NO    loop.
		     end-if
		     exit.
    loop.

RECORRE-PROD-UAR.
;----------------
    seek FIRST in PRODUCTOS-F.
    read PRODUCTOS-F.
    perform RECORRE-PROD-010.
    exit.

RECORRE-PROD-DAR.
;----------------
    seek LAST in PRODUCTOS-F.
    read PRODUCTOS-F.
    perform RECORRE-PROD-010.
    exit.

SEGURO-FIN.
;----------
    beep.
    message  1, '****************'
    message 17, 'Seguro Fin Venta'
    message 33, '    Yes / No    '
    message 49, '****************'
    action.
	 when ENTER exit.
	 when YES   exit.
	 when NO    exit.
    loop.

RECORRE-PROD-010.
;----------------
    move 0		to existe-np.
    move prod-codigo	to ws-cod-producto.
    move prod-codigo	to promociones.
    move prod-descuento to ws-desc-prod.

    search FIRST for llave-np in NIVELES-PREC-F
	when ER move 1 to existe-np
		move 0 to ws-neto.
	when OK read NIVELES-PREC-F
		if punt-zof-ext = 2
		   move npre-prec-exten to ws-neto
		else
		   move npre-prec-zofri to ws-neto.
	    end-when

    show SEL-PRODUCTO-SD.
    if punt-zof-ext = 1  and prod-oferta = 1
       message 1, 3,  'Ofertable       '.

    if existe-np = 0
       show SEL2-PRODUCTO-SD
    else
       message 49, '** Sin Precio **'.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when ENTER if existe-np = 0
		       if punt-zof-ext = 1 and	prod-oferta = 0
			  beep
			  message  1, '    No esta     ' 
			  message 17, '   permitido    ' 
			  message 33, ' oferta   para  ' 
			  message 49, ' este Producto  ' 
			  wait 1 second
			  loop.
		       perform DETALLES-ALL
		       exit
		    else
		       loop.
	      end-when
	 when UAR   seek NEXT in PRODUCTOS-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 second
				  seek LAST in PRODUCTOS-F.
		    read PRODUCTOS-F.
	 when DAR   seek PRIOR in PRODUCTOS-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUCTOS-F.
		    read PRODUCTOS-F.
    loop.

PONE-PRECIO-NETO.
;----------------
    move prod-flete	 to ws-flete.
    move prod-flete	 to ws-flete2.
    move prod-iva	 to ws-iva.
    move prod-ila	 to ws-ila.
    move prod-adicional  to ws-adicional.
   ;if punt-zof-ext = 2 			     ; Zona Extension.
       perform PONE-PNETO-001
   ;else					     ; Zona Franca
   ;   move	npre-prec-zofri to   ws-bruto
   ;   multiply ws-bruto	by   100
   ;   ; 1 + %iva + %ila + %adicional
   ;   add	ws-adicional	to   ws-ila
   ;   divide	10		into ws-ila
   ;   add	1000		to   ws-ila
   ;
   ;   ; Precio Neto
   ;   ; (Bruto) / (1 + %iva + %ila + %adicional)
   ;   multiply ws-bruto	by   100000
   ;   divide	ws-ila		into ws-bruto
   ;   perform REDONDEA-CIFRA
   ;   divide	100		into ws-bruto.
    move ws-bruto to ws-bruto2.
    exit.

PONE-PNETO-001.
;--------------
    if punt-zof-ext = 2 			     ; Zona Extension.
       move	npre-prec-exten to   ws-bruto
    else
       move	npre-prec-zofri to   ws-bruto
    end-if
    multiply ws-bruto	     by   100.
    ; Flete * Iva
    multiply ws-flete2	     by   ws-iva.
    divide   10000	     into ws-flete2.
    add      ws-flete2	     to   ws-flete.
    ; Precio Bruto - (Flete * iva)
    subtract ws-flete	     from ws-bruto.
    ; 1 + %iva + %ila + %adicional
    add      ws-ila	     to   ws-iva.
    add      ws-adicional    to   ws-iva.

    divide   10 	     into ws-iva.
    add      1000	     to   ws-iva.

    ; Precio Neto
    ; (Precio Bruto - (Flete * iva)) / (1 + %iva + %ila + %adicional)
    multiply ws-bruto	     by  100000
    divide   ws-iva	     into ws-bruto
    perform REDONDEA-CIFRA
    divide   100	     into ws-bruto.

    exit.

REDONDEA-CIFRA.
;--------------
    move ws-bruto to numero.
    move 0	  to num1-conf.
    move 0	  to num2-conf.

    if numero-c > 4
       move 1	  to num1-conf
       move 0	  to numero-c.

    move numero-b  to paso
    add  num1-conf to paso
    if numero-b > 4 or paso > 4
       move 1	  to num2-conf
       move 0	  to numero-b
    else
       add num1-conf to numero-b.

    if numero-a < 9
       add num2-conf to numero-a
    else
       add 1 to numero-a
       add 1 to numero-1.

    move numero to ws-bruto.

    exit.

DETALLES-ALL.
;------------
    move 0 to maximo-promocion.
    move 0 to promocion-anterior.
    move 0 to hay-promocion.
    ; Verificacion para poder realizar promocion
    if ws-promocion1 = 6
       perform OPENREF-DETA2
	  when ER beep
		  message  1, '  Antes de una  '
		  message 17, ' promocion debe '
		  message 33, '   existir el   '
		  message 49, '    Producto    '
		  action
		  exit.
	  when OK search FIRST for ws-prox-nota in DETALLE-PED-F
		    when OK read DETALLE-PED-F
			    move 1 to hay-promocion
			    perform CUENTA-PROMOCION
			    subtract promocion-anterior from maximo-promocion
			    if promocion-anterior = 0 and maximo-promocion = 0
			       beep
			       message	1, '  Antes de una  '
			       message 17, ' promocion debe '
			       message 33, '   existir el   '
			       message 49, '    Producto    '
			       action
			       exit.
			 end-when
	       end-when
    end-if

DETALLES-ALL-001.
;----------------
    if maximo-promocion = 0 and ws-promocion1 = 6
       beep
       message	1, '  Antes de una  '
       message 17, ' promocion debe '
       message 33, '   existir el   '
       message 49, '    Producto    '
       action
       exit.

    search FIRST for llave-np in NIVELES-PREC-F
	when ER exit.
	when OK read NIVELES-PREC-F
		perform PONE-PRECIO-NETO.

    move 0 to ws-cantidad.
    accept CANTIDAD-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    if ws-cantidad = 0 loop.
    move ws-cantidad to ws-CantAux.
    divide 25 into ws-CantAux remainder ws-CantResto.
    if	ws-CantResto <> 0 loop.
    if ws-promocion1 = 6 and hay-promocion = 1
       if ws-cantidad > maximo-promocion
	  beep
	  clear
	  message  1, 'Cantidad  Maxima'
	  message 17, 'permitida  hasta'
	  message 33, '   el momento   '
	  show MAX-PROM-SD
	  action
	  loop.
    end-if
    move 0 to ws-descuento.
    if ws-promocion1 not = 6
      ;if punt-zof-ext = 2
	  if tipcli = 0 or tipcli = 1
	     if cli-descuento > 0 or ws-desc-prod > 0
		perform DESCUENTO.
	  end-if
      ;end-if
    end-if

    perform DESCUENTO-001.
    exit.

CUENTA-PROMOCION.
;----------------
    if dped-codigo2 = ws-promocion2 and dped-codigo1 not = 6
       add dped-cantidad to maximo-promocion.
    if dped-codigo = promociones and dped-codigo1 = 6
       add dped-cantidad to promocion-anterior.
    seek NEXT in DETALLE-PED-F
	 when EOF exit.
    read DETALLE-PED-F.
    if dped-nroped not = ws-prox-nota exit.
    loop.

DESCUENTO.
;---------
    move 0 to ws-descuento.
    show CANTIDAD-SD.
    accept DESCUENTO-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    if ws-desc-prod > 0
       if ws-descuento > ws-desc-prod
	  if cli-descuento > ws-desc-prod and ws-descuento not > cli-descuento
	     beep
	     perform AVISA-DESCUENTO
		  when NO    loop.
		  when KEXIT exit.
		  when KEND  exit.
	  else
	     loop.
       end-if
    else
       if ws-descuento > cli-descuento loop.
    end-if
    exit.

AVISA-DESCUENTO.
;---------------
    message  1, 'Descuento  Mayor'.
    message 17, 'que lo Permitido'.
    message 33, '    Confirma    '.
    message 49, '    Yes / No    '.
    action
	 when ENTER exit.
	 when YES   exit.
	 when NO    exit.
	 when KEXIT exit.
	 when KEND  exit.
    loop.

DESCUENTO-001.
;-------------
    perform CALCULO-DESC.


DESCUENTO-002.
;-------------
    show CANTIDAD-SD.
    show DESCUENTO-SD.
    move ws-total-bruto  to ws-total-bruto-01.
    move ws-total-nota	 to ws-total-nota-01.

    show TOTAL-ITEM-SD.
    action
       when KEXIT if ws-promocion1 = 6
		     add      ws-total-bruto to   ws-total-nota
		  else
		     subtract ws-total-bruto from ws-total-nota.
		  exit.
       when KEND  if ws-promocion1 = 6
		     add      ws-total-bruto to   ws-total-nota
		  else
		     subtract ws-total-bruto from ws-total-nota.
		  exit.
    perform CONFIRMA-DETALLE.
    exit.

CALCULO-DESC.
;------------
    ; Si hay bebida alcoholica se hace este calculo............................
    if prod-flag = 1
       perform CALCULOS-VARIOS
       exit.
    ; Fin calculo para bebidas alcoholicas.....................................

    move 0 to ws-total-1.
    move 0 to ws-total-bruto.

; Inicio calculo total detalle
; Guardo en " WS-TOTAL-1 " el precio por el descuento

    move ws-bruto2    to ws-total-1.
    move ws-descuento to ws-descuento-aux.
    if ws-descuento > 0  ;and punt-zof-ext = 2		     ; Aqui queda el
       multiply ws-descuento-aux by   ws-total-1	   ; precio neto con
       divide	10000		 into ws-descuento-aux	   ; descuento si es
       subtract ws-descuento-aux from ws-total-1.	   ; que existe

   ;if punt-zof-ext = 2
       perform CALCULO-DESC-001
   ;else
   ;   move	prod-ila    to	 ws-porc-ila
   ;   multiply ws-porc-ila by	 ws-total-1
   ;   divide	100	    into ws-porc-ila
   ;   multiply ws-total-1  by	 100
   ;   add	ws-porc-ila to	 ws-total-1
   ;   move   ws-total-1    to	 ws-bruto
   ;   perform REDONDEA-CIFRA
   ;   move   ws-bruto	    to	 ws-total-1
   ;   divide 10000	    into ws-total-1.

    move     ws-total-1     to ws-total-bruto.
    multiply ws-total-bruto by ws-cantidad.	   ; Valor bruto por cantidad

    move    ws-total-bruto  to ws-bruto
    perform REDONDEA-CIFRA
    move   ws-bruto	 to   ws-total-bruto
    divide 100		 into ws-total-bruto


; Guardo TOTAL ACUMULADO en " WS-TOTAL-NOTA "

    if ws-promocion1 = 6
       subtract ws-total-bruto from ws-total-nota
    else
       add	ws-total-bruto to   ws-total-nota.



; Fin calculo detalle

    exit.

CALCULOS-VARIOS.
;---------------
    if punt-zof-ext = 2 			     ; Zona Extension.
       move npre-prec-exten to ws-total-1
    else					     ; Zona Franca
       move npre-prec-zofri to ws-total-1.
    move ws-descuento to ws-descuento-aux
    if ws-descuento > 0  ;and punt-zof-ext = 2		     ; Aqui queda el
       multiply ws-descuento-aux by   ws-total-1	   ; precio neto con
       divide	10000		 into ws-descuento-aux	   ; descuento si es
       subtract ws-descuento-aux from ws-total-1.	   ; que existe
    move     ws-total-1     to ws-total-bruto
    multiply ws-total-bruto by ws-cantidad

    if ws-promocion1 = 6
       subtract ws-total-bruto from ws-total-nota
    else
       add	ws-total-bruto to   ws-total-nota.

    exit.

CALCULO-DESC-001.
;----------------
    move     ws-total-1  to   ws-porc-iva.
    move     prod-ila	 to   ws-porc-ila.
    move     prod-flete  to   ws-flete.
						       ; Valor I.V.A.
    add      ws-flete	 to   ws-porc-iva.
    multiply ws-porc-iva by   prod-iva.
    divide   10000	 into ws-porc-iva.
						       ; Valor I.L.A.
    multiply ws-porc-ila by   ws-total-1.
    divide   10000	 into ws-porc-ila.
						       ; Total bruto
    move   ws-total-1	  to   ws-total-1-aux.

    add    ws-flete	  to   ws-total-1-aux.
    add    ws-porc-ila	  to   ws-total-1-aux.
    add    ws-porc-iva	  to   ws-total-1-aux.
    move   ws-total-1-aux to   ws-total-1.
    move   ws-total-1	  to   ws-bruto.
    perform REDONDEA-CIFRA
    move   ws-bruto	  to   ws-total-1.

    divide 100		  into ws-total-1.

    exit.

CONFIRMA-DETALLE.
;----------------
    message  1, '****************'.
    message 17, 'Confirma  Pedido'.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action
	when ENTER perform GRABA-DETALLE exit.
	when YES   perform GRABA-DETALLE exit.
	when NO    if ws-promocion1 = 6
		      add      ws-total-bruto to   ws-total-nota
		   else
		      subtract ws-total-bruto from ws-total-nota.
		   exit.
    loop.

GRABA-DETALLE.
;-------------
    if ws-primera-vez = 0
       if tipcli = 0 or tipcli = 1
	  perform OPENUP-ATENCION
	  perform PREGUNTA-CLI-ATEN
       else
	  perform OPENUP-ATENCION
	  perform PREGUNTA-ATE-CLNU
	  perform OPENUP-CLINUE
	  perform MUEVE-DATOS-NUE.
       read-clock
       move sy-date-time to fecha-ws
       perform GRABA-CABECERA.

    perform OPENUP-DETALLE.
    move ws-prox-nota	to dped-nroped
    move prod-codigo	to dped-codigo
    move ws-cantidad	to dped-cantidad
    move ws-descuento	to dped-descuento
    move ws-total-bruto to dped-tot-item
    move x'0D'          to dped-c1
    move x'0A'          to dped-c2
    write REG-DETALLE-PED

    if ws-promocion1 not = 6

       if punt-zof-ext = 2
	  add ws-cantidad to prod-cant-vend
       else
	  add ws-cantidad to prod-cant-oferta
       end-if
       rewrite REG-PRODUCTOS.

    exit.

PREGUNTA-CLI-ATEN.
;-----------------
    seek FIRST in ATENCION-F
	when EOF move cli-codigo to aten-codigo
		 move 0 	 to aten-cod-motivo
		 move 0 	 to aten-atencion
		 move x'0D'      to aten-c1
		 move x'0A'      to aten-c2
		 perform PREGUNTA-1ST
		 write REG-ATENCION
		 exit.

    search FIRST for cli-codigo in ATENCION-F
	when ER  move cli-codigo to aten-codigo
		 move 0 	 to aten-cod-motivo
		 move 0 	 to aten-atencion
		 move x'0D'      to aten-c1
		 move x'0A'      to aten-c2
		 perform PREGUNTA-1ST
		 write REG-ATENCION
		 exit.
	when OK  read ATENCION-F
		 move 0     to aten-cod-motivo
		 move x'0D' to aten-c1
		 move x'0A' to aten-c2
		 perform PREGUNTA-1ST
		 rewrite REG-ATENCION.
    exit.

PREGUNTA-1ST.
;------------
    if iden-dia-activo = 1
       move 1 to atencion
       move 1 to aten-aten1.
    if iden-dia-activo = 2
       move 1 to atencion
       move 1 to aten-aten2.
    if iden-dia-activo = 3
       move 1 to atencion
       move 1 to aten-aten3.
    if iden-dia-activo = 4
       move 1 to atencion
       move 1 to aten-aten4.
    if iden-dia-activo = 5
       move 1 to atencion
       move 1 to aten-aten5.
    if iden-dia-activo = 6
       move 1 to atencion
       move 1 to aten-aten6.
    exit.

PREGUNTA-ATE-CLNU.
;-----------------
    seek FIRST in ATENCION-F
	when EOF move cod-clinue to aten-codigo
		 move 0     to aten-cod-motivo
		 move 0     to aten-atencion
		 move x'0D' to aten-c1
		 move x'0A' to aten-c2
		 perform PREGUNTA-1ST
		 write REG-ATENCION
		 exit.

    search FIRST for cod-clinue in ATENCION-F
	when ER move cod-clinue to aten-codigo
		move 0	   to aten-cod-motivo
		move 0	   to aten-atencion
		move x'0D' to aten-c1
		move x'0A' to aten-c2
		perform PREGUNTA-1ST
		write REG-ATENCION.
	when OK read ATENCION-F
		move 0	   to aten-cod-motivo
		move x'0D' to aten-c1
		move x'0A' to aten-c2
		perform PREGUNTA-1ST
		rewrite REG-ATENCION.
    exit.

MUEVE-DATOS-NUE.
;---------------
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa	  to clin-empresa.
    move cod-clinue	  to clin-codigo.
    move cod-ramo-ws	  to clin-ramo.
    move razon-soc-ws	  to clin-razon-soc.
    move dire-clinue	  to clin-direccion.
    move dire-numero	  to clin-numero
    move cli-rut1-ws	  to clin-rut.
    move cli-dig-ws	  to clin-digito.
    move fono-nue	  to clin-fono.
    move fecha-nacimiento to clin-fecha-nac.
    move ws-dia-aux	  to clin-frec-visita.
    move ruta-ws	  to clin-ruta.
    move x'0D'            to clin-c1.
    move x'0A'            to clin-c2.
    write REG-CLIENTE-NUEV.

    perform OPENUP-CLIENTES.
    move iden-empresa	  to cli-empresa.
    move cod-clinue	  to cli-codigo.
    move cod-ramo-ws	  to cli-ramo.
    move razon-soc-ws	  to cli-razon-soc.
    move dire-clinue	  to cli-direccion.
    move dire-numero	  to cli-numero
    move cli-rut1-ws	  to cli-rut.
    move cli-dig-ws	  to cli-digito.
    move ws-dia-aux	  to cli-frec-visita.
    move fono-nue	  to cli-fono.
    move 0		  to cli-descuento.
    move 0		  to cli-tipo-credito.
    write REG-CLIENTES.

    exit.

GRABA-CABECERA.
;--------------
    perform OPENUP-CABECERA.
    move 1		  to ws-primera-vez
    move ws-prox-nota	  to cabe-nroped.
    if tipcli = 0
       move cli-codigo	  to cabe-codigo
       move 0		  to cabe-ruta-no-ruta
    else
       if tipcli = 1
	  move cli-codigo to cabe-codigo
	  move 1	  to cabe-ruta-no-ruta
       else
	  move cod-clinue to cabe-codigo
	  move 2	  to cabe-ruta-no-ruta.
    end-if
    move dia-ws 	  to cabe-dd
    move mes-ws 	  to cabe-mm
    move ano-ws 	  to cabe-aa
    move hrs-ws 	  to cabe-hrs1
    move minu-ws	  to cabe-min1
    move 0		  to cabe-hora2
    move 0		  to cabe-borrado.
    move 0		  to cabe-tot-nota
    move 0		  to cabe-nro-carga
    move 0		  to cabe-tipo-credito
    move nivel-prec	  to cabe-nivel-precio
    if punt-zof-ext = 2
       move 0		  to cabe-flag-zf-ze
    else
       move 1		  to cabe-flag-zf-ze.
    move cli-ruta	  to cabe-ruta.
    move x'0D'            to cabe-c1.
    move x'0A'            to cabe-c2.
    write REG-CABECERA.
    exit.

TOTALES-FINALES.
;---------------
    move 0 to ws-carga-camion.
    accept CARGA-CAMION-SD
    if ws-carga-camion = 0 loop.
    if tipcli = 2
       move 1 to punt-forma-pago
    else
	 if cli-tipo-credito = 0
	    move 1 to punt-forma-pago
	 else ;if cli-tipo-credito = 1
		 move 2 to punt-forma-pago
	     ; else
	     ;	  move 3 to punt-forma-pago
	     ; end-if
	 end-if
    end-if
       perform TOTALES-FINALES-001.
    perform TOT-FINAL-002.
    exit.

TOTALES-FINALES-001.
;-------------------
    message  1, ' Forma de  Pago '.
    message 17, '****************'.
    examine punt-forma-pago
	    when 0 move 2 to punt-forma-pago loop.
	    when 1 message 33, '    CONTADO     '.
	    when 2 message 33, '    CREDITO     '.
	 ;  when 3 message 33, '    OFERTA      '.
	    when 3 move 1 to punt-forma-pago loop.
    message 49, '    Yes / No    '.
    action
	    when ENTER if punt-forma-pago > 1 and cli-tipo-credito = 0
			  beep
			  message 33, '   No  Valida   '
			  message 49, '****************'
			  wait 1 second
			  loop.
		       exit.
	    when YES   if punt-forma-pago > 1 and cli-tipo-credito = 0
			  beep
			  message 33, '   No  Valida   '
			  message 49, '****************'
			  wait 1 second
			  loop.
		       exit.
	    when NO    add 1 to punt-forma-pago.
	    when FAR   add 1 to punt-forma-pago.
	    when BAR   subtract 1 from punt-forma-pago.
	    when KEND  if punt-notas = 2 exit.
		       if cli-tipo-credito = 0
			  move 1 to punt-forma-pago
		       else ;if cli-tipo-credito = 1
			       move 2 to punt-forma-pago
			   ; else
			   ;   move 3 to punt-forma-pago
			   ;end-if
		       end-if
		 end-when
	    when KEXIT if punt-notas = 2 exit.
		       if cli-tipo-credito = 0
			  move 1 to punt-forma-pago
		       else ;if cli-tipo-credito = 1
			       move 2 to punt-forma-pago
			    ;else
			    ;  move 3 to punt-forma-pago
			    ;end-if
		       end-if
		 end-when
    loop.

TOT-FINAL-002.
;-------------
    move '                                ' to ws-mensaje.
    accept MENSAJE-SD
	 when ER loop.
    show TOTAL-FACTURA-SD.
    action.
    perform GRABA-FIN-HEAD.
    move 0 to ws-primera-vez.
    exit.

GRABA-FIN-HEAD.
;--------------
    perform OPENUP-CABECERA.
    search FIRST for ws-prox-nota in CABECERA-F
	   when ER beep
		   message  1, '****************'
		   message 17  '   No  Existe   '
		   message 33, '    Cabecera    '
		   message 49, '****************'
		   wait 1 second
		   exit.
    read CABECERA-F.

    read-clock.
    move sy-date-time	 to fecha-ws.

    move hrs-ws 	 to cabe-hrs2.
    move minu-ws	 to cabe-min2.
    move ws-total-nota	 to cabe-tot-nota.
    move ws-carga-camion to cabe-nro-carga.
    if punt-forma-pago = 1
       move 0		 to cabe-tipo-credito
    else ;if punt-forma-pago = 2
	     move 1	       to cabe-tipo-credito
	 ;else
	 ;  move 2	      to cabe-tipo-credito
	 ;end-if
    end-if
    move x'0D'           to cabe-c1.
    move x'0A'           to cabe-c2.
    rewrite REG-CABECERA.

    if ws-mensaje not = '                                '
       perform OPENUP-MENSAJES
       move ws-prox-nota to mens-nroped
       move ws-mensaje	 to mens-mensaje
       move x'0D'        to mens-c1
       move x'0A'        to mens-c2
       write REG-MENSAJES.

    perform OPENREF-IDENTIFICA
       when ER exit.
    seek FIRST in IDENTIFICA-F.
    read IDENTIFICA-F.
    add 1 to iden-prox-nota.
    if cliente-atendido = 0
       add 1 to iden-cli-visit
       add 1 to iden-cli-concr.
    rewrite REG-IDENTIFICA.

    move 0 to ws-cant-carga.
    perform OPENREF-PRODUCTOS
       when OK perform OPENREF-DETALLE
		  when OK search FIRST for ws-prox-nota in DETALLE-PED-F
			    when OK perform CUENTA-CANT-CARGA.
		       end-when
	    end-when
    if punt-zof-ext = 2
       move 0 to llave-1-carga
    else
       move 1 to llave-1-carga.
    perform GRABA-CARGA-CAMION
    exit.

GRABA-CARGA-CAMION.
;------------------
    perform OPENUP-CARGA-CAMION.
    search BINARY for ws-carga-camion in CARGA-CAMION-F
	 when OK read CARGA-CAMION-F
		 if llave-1-carga = 0
		    add ws-cant-carga to cc-cantidad-ext
		 else
		    add ws-cant-carga to cc-cantidad-zof.
		 rewrite REG-CARGA-CAMION
		 exit.

    move ws-carga-camion  to cc-nro-carga.
    if llave-1-carga = 0
       move ws-cant-carga to cc-cantidad-ext
       move 0		  to cc-cantidad-zof
    else
       move ws-cant-carga to cc-cantidad-zof
       move 0		  to cc-cantidad-ext.
    move x'0D'            to cc-c1.
    move x'0A'            to cc-c2.
    insert REG-CARGA-CAMION.
    exit.

CUENTA-CANT-CARGA.
;-----------------
    read DETALLE-PED-F.
    search FIRST for dped-codigo in PRODUCTOS-F.
    read PRODUCTOS-F.
    if dped-nroped = ws-prox-nota and dped-codigo1 not = 6
       if prod-ila > 0 or prod-iva > 0
	  add dped-cantidad to ws-cant-carga.
    end-if
    seek NEXT in DETALLE-PED-F
       when EOF exit.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				   REVISA				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
REVISA.
;------
    move 'Revision  Notas' to proc-ws.
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa.
    perform OPENREF-CABECERA
	    when ER exit.
    move 0 to ws-prox-nota.
    accept NUMERO-PED-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when UAR   perform RECORRE-PED-UAR loop.
	   when DAR   perform RECORRE-PED-DAR loop.
    if ws-prox-nota = 0 loop.
    search FIRST for ws-prox-nota in CABECERA-F
	   when ER beep
		   message  1, '****************'
		   message 17, '*  No  Existe  *'
		   message 33, '*    Pedido    *'
		   message 49, '****************'
		   wait 1 second
		   loop.
    read CABECERA-F.
    if cabe-borrado = 1
       beep
       message	1, '****************'
       message 17, '*    Pedido    *'
       message 33, '*   Anulado.   *'
       message 49, '****************'
       wait 1 second
       loop.
    move cabe-codigo	   to cod-clie-ws.
    move cabe-tot-nota	   to ws-total-nota.
    move cabe-nivel-precio to nivel-prec.
    move cabe-nro-carga    to ws-carga-camion.
    move cabe-tipo-credito to punt-forma-pago.
    move cabe-flag-zf-ze   to punt-zof-ext.
    perform OPENREF-CLIENTES
	    when ER exit.
    search FIRST for llave-cliente in CLIENTES-F
	    when OK read CLIENTES-F
		    move cli-razon-soc to razon-soc-ws
		    move cli-cedula    to cli-rut-ws
		    move cli-descuento to ws-descuento2.
	    when ER message  1, '****************'
		    message 17, '*  No  Existe  *'
		    message 33, '*   Cliente.   *'
		    message 49, '****************'
		    wait 1 second
		    loop.
    move 1 to punt-revisa1.
    move 1 to punt-revisa2.
    if punt-zof-ext = 0
       move '     Venta      ' to mensaje-zof-ext
       move 2		       to punt-zof-ext
    else
       move '     Oferta     ' to mensaje-zof-ext
       move 1		       to punt-zof-ext.
    perform REVISA-001.
    loop.

RECORRE-PED-UAR.
;---------------
    seek FIRST in CABECERA-F
       when EOF beep
		message  1, '****************'
		message 17, '*  No Existen  *'
		message 33, '*    Pedidos   *'
		message 49, '****************'
		wait 1 second
		exit.
    read CABECERA-F.
    if cabe-borrado = 1 or cabe-nroped = 0
       perform SIGUIENTE-PED
	  when EOF message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*    Pedidos   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    end-if
    perform RECORRE-PED-001.
    exit.

SIGUIENTE-PED.
;-------------
    seek NEXT in CABECERA-F
	when EOF exit.
    read CABECERA-F
    if cabe-borrado = 1 or cabe-nroped = 0 loop.
    exit.

RECORRE-PED-DAR.
;---------------
    seek LAST in CABECERA-F
       when EOF beep
		message  1, '****************'
		message 17, '*  No Existen  *'
		message 33, '*    Pedidos   *'
		message 49, '****************'
		wait 1 second
		exit.
    read CABECERA-F.
    if cabe-borrado = 1 or cabe-nroped = 0
       perform ANTERIOR-PED
	  when EOF message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*    Pedidos   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    end-if
    perform RECORRE-PED-001.
    exit.

ANTERIOR-PED.
;------------
    seek PRIOR in CABECERA-F
	when EOF exit.
    read CABECERA-F
    if cabe-borrado = 1 or cabe-nroped = 0 loop.
    exit.

RECORRE-PED-001.
;---------------
    move cabe-codigo	   to cod-clie-ws.
    move cabe-tot-nota	   to ws-total-nota.
    move cabe-nivel-precio to nivel-prec.
    move cabe-nro-carga    to ws-carga-camion.
    move cabe-tipo-credito to punt-forma-pago.
    move cabe-flag-zf-ze   to punt-zof-ext.
    move cabe-nroped	   to ws-prox-nota.

    perform OPENREF-CLIENTES
	    when ER exit.
    search FIRST for llave-cliente in CLIENTES-F
	    when OK read CLIENTES-F
		    move cli-razon-soc to razon-soc-ws
		    move cli-cedula    to cli-rut-ws
		    move cli-descuento to ws-descuento2.
	    when ER beep
		    message  1, '****************'
		    message 17, '*  No  Existe  *'
		    message 33, '*   Cliente.   *'
		    message 49, '****************'
		    wait 1 second
		    exit.
    move 2 to punt-revisa1.
    move 1 to punt-revisa2.
    if punt-zof-ext = 0
       move '     Venta      ' to mensaje-zof-ext
       move 2		       to punt-zof-ext
    else
       move '     Oferta     ' to mensaje-zof-ext
       move 1		       to punt-zof-ext.
    show PANTALLA-REV1-SD.
    action
	 when KEXIT exit.
	 when KEND  exit.
	 when UAR   perform SIGUIENTE-PED
		       when EOF beep
				message 49, '* Fin  Archivo *'
				wait 7 tenths
				seek LAST in CABECERA-F
				read CABECERA-F
				if cabe-borrado = 1 or cabe-nroped = 0
				   perform ANTERIOR-PED.
			    end-when
	      end-when
	 when DAR   perform ANTERIOR-PED
		       when EOF beep
				message 49, '*Inicio Archivo*'
				wait 7 tenths
				seek FIRST in CABECERA-F
				read CABECERA-F
				if cabe-borrado = 1 or cabe-nroped = 0
				   perform SIGUIENTE-PED.
			    end-when
	      end-when
	 when ENTER perform REVISA-001 exit.
    loop.

REVISA-001.
;----------
    examine punt-revisa1
	    when 0 move 1 to punt-revisa1 loop.
	    when 1 show PANTALLA-REV1-SD.
	    when 2 show PANTALLA-REV2-SD.
	    when 3 beep
		   message  1, '****************'
		   message 17, '* Detalles del *'
		   message 33, '*    Pedido    *'
		   message 49, '****************'
		   wait 1 second
		   perform REVISA-DETALLE
		   perform REVISA-MENSAJE
		   exit.
	    when 4 exit.
    action
	    when KEXIT exit.
	    when KEND  exit.
	    when ENTER add 1 to punt-revisa1.
	    when FAR   add 1 to punt-revisa1.
	    when BAR   subtract 1 from punt-revisa1.
    loop.

REVISA-DETALLE.
;--------------
    perform OPENREF-PRODUCTOS
	   when ER exit.
    perform OPENREF-DETALLE
	   when ER exit.
    search FIRST for ws-prox-nota in DETALLE-PED-F
	   when ER message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*   Detalles   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    move 0 to cuenta-c-i.
    perform CUENTA-CC1.
    search FIRST for ws-prox-nota in DETALLE-PED-F
    read DETALLE-PED-F.
    perform OPENREF-NIVEL-PREC
	   when ER exit.
    perform REVISA-DET-001.
    exit.

CUENTA-CC1.
;----------
    read DETALLE-PED-F.
    if dped-nroped not = ws-prox-nota exit.
    if dped-codigo1 not = 6
       search FIRST for dped-codigo in PRODUCTOS-F
       read PRODUCTOS-F
       if prod-ila > 0 or prod-iva > 0
	  add dped-cantidad to cuenta-c-i.
    end-if
    seek NEXT in DETALLE-PED-F
	 when EOF exit.
    loop.

REVISA-DET-001.
;--------------
    perform SEL-PRODUCTO.
    move dped-codigo to ws-cod-producto.
    move dped-codigo to promociones.
    examine punt-revisa2
	    when 0 move 2 to punt-revisa2 loop.
	    when 1 show DETALLE1-SD
		   if existe-np = 0
		      show DETALLE1-1-SD
		   else
		      message 49, '** Sin Precio **'.
		 end-when
	    when 2 show DETALLE2-SD
		   message  1, '****************'
		   message 49, '****************'.
	    when 3 move 1 to punt-revisa2 loop.
    fast-action
	    when KEXIT exit.
	    when KEND  exit.
	    when DAR   perform REVISA-ANT-DET.
	    when UAR   perform REVISA-PROX-DET.
	    when ENTER perform REVISA-PROX-DET.
	    when KMOD  if existe-np = 0
			  perform ACEPTA-REVISA.
		 end-when
	    when KINS  perform AGREGA-DETALLE
		       perform REUBICA-AGREGA-DETALLE.
	    when FAR   add 1 to punt-revisa2.
	    when BAR   subtract 1 from punt-revisa2.
    loop.

REVISA-ANT-DET.
;--------------
    move 1 to punt-revisa2.
    seek PRIOR in DETALLE-PED-F
	 when EOF beep
		  message 49, ' Inicio  Pedido '
		  wait 1 second
		  seek FIRST in DETALLE-PED-F
		  read DETALLE-PED-F
		  exit.
    read DETALLE-PED-F.
    if ws-prox-nota not = dped-nroped
       beep
       message 49, ' Inicio  Pedido '
       wait 1 second
       seek NEXT in DETALLE-PED-F
       read DETALLE-PED-F.
    exit.

REVISA-PROX-DET.
;---------------
    move 1 to punt-revisa2.
    seek NEXT in DETALLE-PED-F
	 when EOF beep
		  message 49, '   Fin Pedido   '
		  wait 1 second
		  seek LAST in DETALLE-PED-F
		  read DETALLE-PED-F
		  exit.
    read DETALLE-PED-F.
    if ws-prox-nota not = dped-nroped
       beep
       message 49, '   Fin Pedido   '
       wait 1 second
       seek PRIOR in DETALLE-PED-F
       read DETALLE-PED-F.
    exit.

SEL-PRODUCTO.
;------------
    search FIRST for dped-codigo in PRODUCTOS-F
	   when ER message  1, '****************'
		   message 17, '*  No  Existe  *'
		   message 33, '*   Producto   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    read PRODUCTOS-F.

    move 0	     to existe-np.
    move prod-codigo to ws-cod-producto.
    search FIRST for llave-np in NIVELES-PREC-F
	when ER move 1 to existe-np.
	when OK read NIVELES-PREC-F
		if punt-zof-ext = 2
		   move npre-prec-exten to ws-neto
		else
		   move npre-prec-zofri to ws-neto.
	     end-when
    exit.

ACEPTA-REVISA.
;-------------
    move prod-descuento to ws-desc-prod.
    show REV-MUESTRA.
    move 0 to ws-cantidad.
    accept CANTIDAD-REV-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    perform ACEPTA-REVISA-001.
    exit.

ACEPTA-REVISA-001.
;-----------------
    move 0 to ws-descuento.
    if ws-cantidad > 0
       if cabe-ruta-no-ruta = 0 or cabe-ruta-no-ruta = 1
	  if cabe-flag-zf-ze = 0
	     accept DECTO-REV-SD
		    when KEXIT exit.
		    when KEND  exit.
		    when ER    loop.
	  end-if
       end-if
    end-if
    if prod-descuento > 0
       if ws-descuento > prod-descuento
	  if cli-descuento > prod-descuento and ws-descuento not > cli-descuento
	     beep
	     perform AVISA-DESCUENTO
		  when NO    loop.
		  when KEXIT exit.
		  when KEND  exit.
	  else
	     loop.
       end-if
    else
       if ws-descuento > cli-descuento loop.
    end-if

ACEPTA-REV-002.
;--------------
    message  1, '****************'.
    message 17, '* Recalculando *'.
    message 33, '*  Espere....  *'.
    message 49, '****************'.

; Normalizo archivo de Productos

    if ws-promocion1 not = 6
       if punt-zof-ext = 2
	  subtract dped-cantidad from prod-cant-vend
	  add ws-cantidad to prod-cant-vend
       else
	  subtract dped-cantidad from prod-cant-oferta
	  add ws-cantidad to prod-cant-oferta
       end-if
       rewrite REG-PRODUCTOS
    end-if
; Actualizo archivo de Carga de Camion

    if ws-promocion1 not = 6
       if prod-ila > 0 or prod-iva > 0
	  perform OPENREF-CARGA-CAMION
	     when OK search FIRST for cabe-nro-carga in CARGA-CAMION-F
		       when OK read CARGA-CAMION-F
			       if cabe-flag-zf-ze = 0
				  subtract dped-cantidad from cc-cantidad-ext
				  add ws-cantidad to cc-cantidad-ext
			       else
				  subtract dped-cantidad from cc-cantidad-zof
				  add ws-cantidad to cc-cantidad-zof.
			       rewrite REG-CARGA-CAMION.
		  end-when
    end-if

    perform PONE-PRECIO-NETO.
    perform CALCULO-DESC.

    move ws-cantidad	to dped-cantidad.
    move ws-descuento	to dped-descuento.
    move ws-total-bruto to dped-tot-item.
    move x'0D'          to dped-c1.
    move x'0A'          to dped-c2.
    rewrite REG-DETALLE-PED.

    move 0 to ws-total-nota.
    search FIRST for ws-prox-nota in DETALLE-PED-F.
    read DETALLE-PED-F.
    perform CALCULA-REVISA.

    move ws-total-nota to cabe-tot-nota.
    move x'0D' to cabe-c1.
    move x'0A' to cabe-c2.
    rewrite REG-CABECERA.

    perform REUBICA-REVISA.

    move 1 to punt-revisa2.
    exit.

CALCULA-REVISA.
;--------------
    add dped-tot-item to ws-total-nota.
    seek NEXT in DETALLE-PED-F.
	 when EOF exit.
    read DETALLE-PED-F.
    if ws-prox-nota not = dped-nroped
       exit.
    loop.

REUBICA-REVISA.
;--------------
    search FIRST for ws-prox-nota in DETALLE-PED-F.
    read DETALLE-PED-F.
    if dped-codigo = ws-cod-producto
       exit.

REUBICA-REVISA-001.
;------------------
    seek NEXT in DETALLE-PED-F.
	 when EOF search FIRST for ws-prox-nota in DETALLE-PED-F
		  read DETALLE-PED-F
		  exit.
    read DETALLE-PED-F.
    if ws-prox-nota not = dped-nroped
       search FIRST for ws-prox-nota in DETALLE-PED-F
       read DETALLE-PED-F
       exit.
    if dped-codigo = ws-cod-producto
       exit.
    loop.

AGREGA-DETALLE.
;--------------
    move 0 to ws-cod-producto.
    accept COD-PRODUCTO-SD
	  when OK    search FIRST for ws-cod-producto in PRODUCTOS-F
			   when ER beep
				   message 1,  '****************'
				   message 17, '   No  Existe   '
				   message 33, '    Producto    '
				   message 49, '****************'
				   wait 1 second.
			   when OK read PRODUCTOS-F
				   perform RECORRE-AGRE-010.
	       end-when
	  when UAR   perform RECORRE-AGRE-UAR.
	  when DAR   perform RECORRE-AGRE-DAR.
    exit.

RECORRE-AGRE-UAR.
;----------------
    seek FIRST in PRODUCTOS-F.
    read PRODUCTOS-F.
    perform RECORRE-AGRE-010.
    exit.

RECORRE-AGRE-DAR.
;----------------
    seek LAST in PRODUCTOS-F.
    read PRODUCTOS-F.
    perform RECORRE-AGRE-010.
    exit.

RECORRE-AGRE-010.
;----------------
    move 0		to existe-np.
    move prod-codigo	to ws-cod-producto.
    move prod-codigo	to promociones.
    move prod-descuento to ws-desc-prod.

    search FIRST for llave-np in NIVELES-PREC-F
	when ER move 1 to existe-np
		move 0 to ws-neto.
	when OK read NIVELES-PREC-F
		if punt-zof-ext = 2
		   move npre-prec-exten to ws-neto
		else
		   move npre-prec-zofri to ws-neto.
	    end-when

    show SEL-PRODUCTO-SD.
    if existe-np = 0
       show SEL2-PRODUCTO-SD
    else
       message 49, '** Sin Precio **'.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when ENTER if existe-np = 0
		       perform AGREGA-DETALLE-ALL
		       exit
		    else
		       loop.
	      end-when
	 when UAR   seek NEXT in PRODUCTOS-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 second
				  seek LAST in PRODUCTOS-F.
		    read PRODUCTOS-F.
	 when DAR   seek PRIOR in PRODUCTOS-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUCTOS-F.
		    read PRODUCTOS-F.
    loop.

AGREGA-DETALLE-ALL.
;------------------
    search FIRST for llave-np in NIVELES-PREC-F
	when ER exit.
	when OK read NIVELES-PREC-F
		perform PONE-PRECIO-NETO.

    move 0 to ws-cantidad.
    accept CANTIDAD-SD
	   when KEXIT exit.
	   when KEND  exit.
    if ws-cantidad = 0 loop.
    move 0 to ws-descuento.
   ;if punt-zof-ext = 2
       if cabe-ruta-no-ruta not = 2
	  if cli-descuento > 0 or ws-desc-prod > 0
	     perform AGREGA-DESC
	  end-if
       end-if
   ;end-if
    perform AGREGA-DESC-001.
    exit.

AGREGA-DESC.
;-----------
    move 0 to ws-descuento.
    show CANTIDAD-SD.
    accept DESCUENTO-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    if ws-desc-prod > 0
       if ws-descuento > ws-desc-prod
	  if cli-descuento > ws-desc-prod and ws-descuento not > cli-descuento
	     beep
	     perform AVISA-DESCUENTO
		  when NO    loop.
		  when KEXIT exit.
		  when KEND  exit.
	  else
	     loop.
       end-if
    else
       if ws-descuento > cli-descuento loop.
    end-if
    exit.

AGREGA-DESC-001.
;---------------
    perform CALCULO-DESC.

AGREGA-DESC-002.
;---------------
    show CANTIDAD-SD.
    show DESCUENTO-SD.
    move ws-total-bruto  to ws-total-bruto-01.
    move ws-total-nota	 to ws-total-nota-01.
    show TOTAL-ITEM-SD.
    action
       when KEXIT exit.
       when KEND  exit.
    perform AGREGA-CONFIRMA-DETALLE.
    exit.

AGREGA-CONFIRMA-DETALLE.
;-----------------------
    message  1, '****************'.
    message 17, 'Confirma  Pedido'.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action.
	when ENTER perform AGREGA-GRABA-DETALLE exit.
	when YES   perform AGREGA-GRABA-DETALLE exit.
	when NO    subtract ws-total-bruto from ws-total-nota
		   exit.
    loop.

AGREGA-GRABA-DETALLE.
;--------------------
    perform OPENUP-DETALLE
    search FIRST for ws-prox-nota in DETALLE-PED-F
	   when ER message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*   Detalles   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    read DETALLE-PED-F.
    move 0 to ws-insert.
    perform AGREGA-BUSCA-DETALLE.

    move ws-prox-nota	to dped-nroped.
    move prod-codigo	to dped-codigo.
    move ws-cantidad	to dped-cantidad.
    move ws-descuento	to dped-descuento.
    move ws-total-bruto to dped-tot-item.
    move x'0D'          to dped-c1.
    move x'0A'          to dped-c2.
    if ws-insert = 0
       insert REG-DETALLE-PED
    else
       write REG-DETALLE-PED.

    if ws-promocion1 not = 6

       if punt-zof-ext = 2
	  add ws-cantidad to prod-cant-vend
       else
	  add ws-cantidad to prod-cant-oferta
       end-if
       rewrite REG-PRODUCTOS.

    perform OPENUP-CABECERA.
    search FIRST for ws-prox-nota in CABECERA-F
	   when ER beep
		   message  1, '****************'
		   message 17  '   No  Existe   '
		   message 33, '    Cabecera    '
		   message 49, '****************'
		   wait 1 second
		   exit.
    read CABECERA-F.
    read-clock.
    move sy-date-time  to fecha-ws.
    move hrs-ws        to cabe-hrs2.
    move minu-ws       to cabe-min2.
    move ws-total-nota to cabe-tot-nota.
    move x'0D'         to cabe-c1.
    move x'0A'         to cabe-c2.
    rewrite REG-CABECERA.

; Actualizo archivo de Carga de Camion

    if ws-promocion1 not = 6
       if prod-ila > 0 or prod-iva > 0
	  perform OPENREF-CARGA-CAMION
	     when OK search FIRST for cabe-nro-carga in CARGA-CAMION-F
		       when OK read CARGA-CAMION-F
			       if cabe-flag-zf-ze = 0
				  add ws-cantidad to cc-cantidad-ext
			       else
				  add ws-cantidad to cc-cantidad-zof.
			       rewrite REG-CARGA-CAMION.
		  end-when
    end-if

    exit.

AGREGA-BUSCA-DETALLE.
;--------------------
    seek NEXT in DETALLE-PED-F
	 when EOF move 1 to ws-insert
		  exit.
    read DETALLE-PED-F.
    if ws-prox-nota = dped-nroped
       loop.
    exit.

REUBICA-AGREGA-DETALLE.
;----------------------
    perform OPENREF-DETALLE
	   when ER exit.
    search FIRST for ws-prox-nota in DETALLE-PED-F
	   when ER message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*   Detalles   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    read DETALLE-PED-F.
    perform OPENREF-PRODUCTOS
	   when ER exit.
    search FIRST for dped-codigo in PRODUCTOS-F
	   when ER message  1, '****************'
		   message 17, '   No  Existe   '
		   message 33, ' Arch.Productos '
		   message 49, '****************'
		   wait 1 second
		   exit.
    read PRODUCTOS-F.
    exit.

REVISA-MENSAJE.
;--------------
    perform OPENREF-CLIENTES
	when ER exit.
    search FIRST for llave-cliente in CLIENTES-F
	when ER exit.
    read CLIENTES-F.

    perform OPENREF-CABECERA
	when ER exit.
    search FIRST for ws-prox-nota in CABECERA-F
	when ER exit.
    read CABECERA-F.

;************************************************************
							   ;*
    perform CUENTA-NEW-DET.				   ;*
							   ;*
    move cabe-nro-carga to ws-carga-camion.		   ;*
    show MOD1-CC-SD.					   ;*
    action						   ;*
	when KMOD perform ACEPTA-MOD-CC.		   ;*
							   ;*
;************************************************************

    if cabe-ruta-no-ruta not = 2
       if cabe-tipo-credito = 0
	  move 1 to punt-forma-pago		     ; contado
       else ;if cabe-tipo-credito = 1
	       move 2 to punt-forma-pago	     ; credito
	    ;else
	    ;	move 3 to punt-forma-pago	      ; Oferta
	    ;end-if
       end-if
       perform TOTALES-FINALES-001
       if punt-forma-pago = 1
	  move 0 to cabe-tipo-credito
       else ;if punt-forma-pago = 2
	       move 1 to cabe-tipo-credito
	    ;else
	      ;move 2 to cabe-tipo-credito
	    ;end-if
       end-if
       rewrite REG-CABECERA.

    perform OPENUP-MENSAJES.
    seek FIRST in MENSAJES-F
	   when EOF perform ACEPTA-MOD-MENSAJE
			when KEXIT exit.
			when KEND  exit.
		    move ws-prox-nota to mens-nroped
		    write REG-MENSAJES
		    seek FIRST in MENSAJES-F
			 when OK perform ELIMINA-MENSAJES-BLANCOS.
		    exit.

    search FIRST for ws-prox-nota in MENSAJES-F
	   when ER  perform ACEPTA-MOD-MENSAJE
			when KEXIT exit.
			when KEND  exit.
		    move ws-prox-nota to mens-nroped
		    write REG-MENSAJES
		    seek FIRST in MENSAJES-F
			 when OK perform ELIMINA-MENSAJES-BLANCOS.
		    exit.
    read MENSAJES-F.
    move mens-mensaje to ws-mensaje.
    show mensaje-sd.
    action
       when KMOD perform ACEPTA-MOD-MENSAJE
		    when OK rewrite REG-MENSAJES.
	    end-when
    seek FIRST in MENSAJES-F
	when OK perform ELIMINA-MENSAJES-BLANCOS.
    exit.

ELIMINA-MENSAJES-BLANCOS.
;------------------------
    read MENSAJES-F
    if mens-mensaje = '                                '
       delete RECORD from MENSAJES-F
       seek FIRST in MENSAJES-F
	    when EOF exit.
       loop.
    seek NEXT in MENSAJES-F
	 when EOF exit.
    loop.

ACEPTA-MOD-CC.
;-------------
    accept MOD1-CC-SD
	when OK    perform OPENUP-CARGA-CAMION
			 when ER exit.
		   perform PREGUNTA-CC
		   move ws-carga-camion to cabe-nro-carga
		   rewrite REG-CABECERA
		   exit.
	when KEND  exit.
	when KEXIT exit.
    loop.

PREGUNTA-CC.
;-----------
; Resta la carga anterior
    search FIRST for cabe-nro-carga in CARGA-CAMION-F
	  when OK read CARGA-CAMION-F
		  if cabe-flag-zf-ze = 0
		     subtract cuenta-c-f from cc-cantidad-ext
		     if cc-cantidad-ext < 0
			move 0 to cc-cantidad-ext.
		  else
		     subtract cuenta-c-f from cc-cantidad-zof
		     if cc-cantidad-zof < 0
			move 0 to cc-cantidad-zof.
		  end-if
		  if cc-cantidad-ext = 0 and cc-cantidad-zof = 0
		     delete RECORD from CARGA-CAMION-F
		  else
		     rewrite REG-CARGA-CAMION.
	       end-when
; Suma la nueva carga
    search BINARY for ws-carga-camion in CARGA-CAMION-F
	  when OK read CARGA-CAMION-F
		  if cabe-flag-zf-ze = 0
		     add cuenta-c-f to cc-cantidad-ext
		  else
		     add cuenta-c-f to cc-cantidad-zof.
		  rewrite REG-CARGA-CAMION
		  exit.
	  when ER move ws-carga-camion to cc-nro-carga
		  if cabe-flag-zf-ze = 0
		     move cuenta-c-f to cc-cantidad-ext
		     move 0	     to cc-cantidad-zof
		  else
		     move cuenta-c-f to cc-cantidad-zof
		     move 0	     to cc-cantidad-ext.
		  insert REG-CARGA-CAMION.
    exit.

CUENTA-NEW-DET.
;--------------
    perform OPENREF-PRODUCTOS.
    move 0 to cuenta-c-f.
    search FIRST for ws-prox-nota in DETALLE-PED-F
	  when ER exit.

CUENTA-CC2.
;----------
    read DETALLE-PED-F.
    if dped-nroped not = ws-prox-nota exit.
    if dped-codigo1 not = 6
       search FIRST for dped-codigo in PRODUCTOS-F
       read PRODUCTOS-F
       if prod-ila > 0 or prod-iva > 0
	  add dped-cantidad to cuenta-c-f.
    end-if
    seek NEXT in DETALLE-PED-F
	 when EOF exit.
    loop.

ACEPTA-MOD-MENSAJE.
;------------------
    move ' ' to ws-mensaje.
    accept MENSAJE-SD
	when KEXIT exit.
	when KEND  exit.
	when OK    move ws-mensaje to mens-mensaje
		   exit.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				  ANULA 				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
ANULA.
;-----
    move ' Anular Notas  ' to proc-ws.
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa.

    perform OPENREF-CABECERA
	   when ER exit.
    move 0 to ws-prox-nota.
    accept NUMERO-PED-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    if ws-prox-nota = 0 loop.
    search FIRST for ws-prox-nota in CABECERA-F
	   when ER beep
		   message  1, '****************'
		   message 17, '*  No  Existe  *'
		   message 33, '*    Pedido    *'
		   message 49, '****************'
		   wait 1 second
		   loop.
    read CABECERA-F.
    if cabe-borrado = 1
       beep
       message	1, '****************'
       message 17, '*    Pedido    *'
       message 33, '*   Anulado.   *'
       message 49, '****************'
       wait 1 second
       loop.
    move cabe-codigo	 to cod-clie-ws.
    move cabe-tot-nota	 to ws-total-nota.
    move cabe-flag-zf-ze to punt-zof-ext.
    perform OPENREF-CLIENTES
	    when ER exit.
    search FIRST for llave-cliente in CLIENTES-F
	    when OK read CLIENTES-F
		    move cli-razon-soc to razon-soc-ws
		    move cli-cedula    to cli-rut-ws
		    move cli-descuento to ws-descuento2.
	    when ER message  1, '****************'
		    message 17, '*  No  Existe  *'
		    message 33, '*   Cliente.   *'
		    message 49, '****************'
		    wait 1 second
		    loop.
    move 1 to punt-revisa1.
    if punt-zof-ext = 0
       move '     Venta      ' to mensaje-zof-ext
       move 2		       to punt-zof-ext
    else
       move '     Oferta     ' to mensaje-zof-ext
       move 1		       to punt-zof-ext.
    perform ANULA-001.
    loop.

ANULA-001.
;---------
    examine punt-revisa1
	    when 0 move 1 to punt-revisa1 loop.
	    when 1 show PANTALLA-REV1-SD.
	    when 2 show PANTALLA-REV2-SD.
	    when 3 perform SEGURO-ANULA exit.
    action
	    when KEXIT exit.
	    when KEND  exit.
	    when ENTER add 1 to punt-revisa1.
	    when FAR   add 1 to punt-revisa1.
	    when BAR   subtract 1 from punt-revisa1.
    loop.

SEGURO-ANULA.
;------------
    message  1, 'Seguro de Anular'.
    message 17, '     Pedido     '.
    message 33, '                '.
    message 49, '    Yes / No    '.
    action
	 when ENTER perform SEGURO-ANULA-001 exit.
	 when YES   perform SEGURO-ANULA-001 exit.
	 when NO    exit.
	 when KEXIT exit.
	 when KEND  exit.
    loop.

SEGURO-ANULA-001.
;----------------
    message 33, ' Presione ERASE '.
    message 49, '   por 3 Beep   '.
    action
	when ELIM 3-beep
		    when OK perform ELIMINA-TODO.
	     end-when
    exit.

ELIMINA-TODO.
;------------
    move 1 to cabe-borrado.
    move x'0D' to cabe-c1.
    move x'0A' to cabe-c2.
    rewrite REG-CABECERA.

    perform OPENUP-DETALLE.
    search FIRST for ws-prox-nota in DETALLE-PED-F
	   when ER exit.
    read DETALLE-PED-F.

    perform OPENREF-PRODUCTOS
	   when ER exit.

    move 0 to cuenta-c-i
    perform ELIMINA-TODO-001.

    perform OPENUP-CARGA-CAMION.
    search FIRST for cabe-nro-carga in CARGA-CAMION-F
	   when ER exit.
    read CARGA-CAMION-F.
    if cabe-flag-zf-ze = 0
       subtract cuenta-c-i from cc-cantidad-ext
    else
       subtract cuenta-c-i from cc-cantidad-zof.
    rewrite REG-CARGA-CAMION.

    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek first in IDENTIFICA-F.
    read IDENTIFICA-F.

    if iden-cli-concr > 0
       subtract 1 from iden-cli-concr.
    rewrite REG-IDENTIFICA.
    exit.

ELIMINA-TODO-001.
;----------------
    search FIRST for dped-codigo in PRODUCTOS-F
	   when ER message  1, '****************'
		   message 17, '*  No  Existe  *'
		   message 33, '*   Producto   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    read PRODUCTOS-F.

    if dped-codigo1 not = 6
       if prod-ila > 0 or prod-iva > 0
	  add	   dped-cantidad to   cuenta-c-i
	  if punt-zof-ext = 2
	     subtract dped-cantidad from prod-cant-vend
	  else
	     subtract dped-cantidad from prod-cant-oferta
	  end-if
	  rewrite REG-PRODUCTOS.
    end-if

    delete RECORD from DETALLE-PED-F
	 when EOF exit.
    read DETALLE-PED-F.
    if ws-prox-nota not = dped-nroped
       exit.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				  MENU	 CENSO				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CENSO.
;-----
    move 1 to punt-censo.

CENSO-MENU.
;----------
    move '   Menu Censo   ' to proc-ws.
    message 1,	'****************'.
    examine punt-censo
	    when 0 move 3 TO punt-censo      loop.
	    when 1 message 17, ' Censo  Envases '.
	    when 2 message 17, 'Encuesta Precios'.
	    when 3 message 17, 'Auditor. Negocio'.
	    when 4 move 1 TO punt-censo      loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-CENSO.
	    when ENTER perform MENU-CENSO.
	    when NO    add 1 to punt-censo.
	    when FAR   add 1 to punt-censo.
	    when BAR   subtract 1 from punt-censo.
	    when KEXIT exit.
	    when KEND  exit.
    loop.

MENU-CENSO.
;----------
    examine punt-censo
	    when 1 perform CENSO-ENVASES.
	    when 2 perform ENCUESTA-PREC.
	    when 3 perform AUDITORIA-NEG.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				     CENSO				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CENSO-ENVASES.
;-------------
    move '     Censo      ' to proc-ws.
    perform SELCLI-3OP-CENSO
	  when ER    exit.
	  when KEXIT exit.
	  when KEND  exit.
	  when OK    perform CENSO-001.
    loop.

CENSO-001.
;---------
    perform OPENREF-PROD-CENSO
	  when ER exit.
    seek FIRST in PRODUC-CENSO-F
	    when EOF message  1, '****************'
		     message 17, ' Archivo  Censo '
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read PRODUC-CENSO-F.

    perform OPENREF-EMBOTELLADORA
	  when ER exit.
    seek FIRST in EMBOTELLADORA-F
	    when EOF message  1, '****************'
		     message 17, '    Archivo     '
		     message 33, ' Embotelladoras '
		     message 49, '     Vacio      '
		     wait 1 second
		     exit.
    read EMBOTELLADORA-F.

    perform OPENUP-CENSO.

CENSO-002.
;---------
    move cli-codigo  to busca-censo1.
    move prce-codigo to busca-censo2.
    move 0	     to cant-censo.

    show ENVASE-CENSO-SD.
    accept CANTI-CENSO-SD
	 when KEND  exit.
	 when KEXIT exit.
	 when OK    if cant-censo = 0 loop.
		    search FIRST for busca-censo in CENSO-F
			   when OK read CENSO-F
				   add cant-censo to cens-cantidad
				   move x'0D'     to cens-c1
				   move x'0A'     to cens-c2
				   rewrite REG-CENSO.
			   when ER move cli-codigo  to cens-cliente
				   move prce-codigo to cens-producto
				   move cant-censo  to cens-cantidad
				   move x'0D'       to cens-c1
				   move x'0A'       to cens-c2
				   write REG-CENSO.
		    loop.
	 when KINS  search FIRST for busca-censo in CENSO-F
			   when OK read CENSO-F
				   move cens-cantidad to cant-censo.
		    beep
		    show CANTI-CENSO-SD
		    wait 1 second
		    loop.
	 when KMOD  perform MODIFICA-CANT-CENSO
		    loop.
	 when KNEXT perform SGTE-PROD-EMP
			when EOF exit.
		    seek NEXT in EMBOTELLADORA-F
			when EOF exit.
		    read EMBOTELLADORA-F
		    loop.
	 when FAR   seek NEXT in PRODUC-CENSO-F
			 when EOF message 49, '- Fin  Empresa -'
				  beep
				  wait 1 second
				  seek LAST in PRODUC-CENSO-F.
		    read PRODUC-CENSO-F
		    if embo-codigo not = prce-cod1
		       message 49, '- Fin  Empresa -'
		       beep
		       wait 1 second
		       seek PRIOR in PRODUC-CENSO-F
		       read PRODUC-CENSO-F.
		    loop.
	 when BAR   seek PRIOR in PRODUC-CENSO-F
			 when EOF message 49, '-Inicio Empresa-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUC-CENSO-F.
		    read PRODUC-CENSO-F
		    if embo-codigo not = prce-cod1
		       message 49, '-Inicio Empresa-'
		       beep
		       wait 1 second
		       seek NEXT in PRODUC-CENSO-F
		       read PRODUC-CENSO-F.
		    loop.
    loop.

SGTE-PROD-EMP.
;-------------
    seek NEXT in PRODUC-CENSO-F
	when EOF exit.
    read PRODUC-CENSO-F.
    if embo-codigo = prce-cod1 loop.
    exit.

MODIFICA-CANT-CENSO.
;-------------------
    move 0 to cant-censo.
    search FIRST for busca-censo in CENSO-F
	   when ER exit.
    read CENSO-F.
    show TOT-MODI-CENSO-SD.
    accept MODI-CENSO-SD
	  when KEXIT exit.
	  when KEND  exit.
	  when ER    loop.
    move cant-censo to cens-cantidad.
    move x'0D'      to cens-c1
    move x'0A'      to cens-c2
    rewrite REG-CENSO.
    show TOT-MODI-CENSO-SD.
    message 49, '                '.
    wait 1 second.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				ENCUESTA   PRECIO			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
ENCUESTA-PREC.
;-------------
    move 'Encuesta Precios' to proc-ws.
    perform SELCLI-3OP-CENSO
	  when ER    exit.
	  when KEXIT exit.
	  when KEND  exit.
	  when OK    perform ENCUESTA-001.
    loop.

ENCUESTA-001.
;------------
    perform OPENREF-PROD-CENSO
	  when ER exit.
    seek FIRST in PRODUC-CENSO-F
	    when EOF message  1, '****************'
		     message 17, ' Archivo  Censo '
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read PRODUC-CENSO-F.

    perform OPENREF-EMBOTELLADORA
	  when ER exit.
    seek FIRST in EMBOTELLADORA-F
	    when EOF message  1, '****************'
		     message 17, '    Archivo     '
		     message 33, ' Embotelladoras '
		     message 49, '     Vacio      '
		     wait 1 second
		     exit.
    read EMBOTELLADORA-F.

    perform OPENUP-ENCUESTA.

ENCUESTA-002.
;------------
    move cli-codigo  to busca-censo1.
    move prce-codigo to busca-censo2.
    move 0	     to cant-encuesta.
    show ENVASE-CENSO-SD.
    accept CANTI-ENCUESTA-SD
	 when KEND  exit.
	 when KEXIT exit.
	 when OK    if cant-encuesta = 0 loop.
		    search FIRST for busca-censo in ENCUESTA-F
			   when OK read ENCUESTA-F
				   move cant-encuesta to encu-precio
				   move x'0D'         to encu-c1
				   move x'0A'         to encu-c2
				   rewrite REG-ENCUESTA.
			   when ER move busca-censo1  to encu-codigo
				   move busca-censo2  to encu-producto
				   move cant-encuesta to encu-precio
				   move x'0D'         to encu-c1
				   move x'0A'         to encu-c2
				   write REG-ENCUESTA.
		    perform ENCUESTA-PROXIMA
		    loop.
	 when KINS  search FIRST for busca-censo in ENCUESTA-F
			   when OK read ENCUESTA-F
				   move encu-precio to cant-encuesta.
		    beep
		    show CANTI-ENCUESTA-SD
		    wait 1 second
		    loop.
	 when KNEXT perform SGTE-PROD-EMP
			when EOF exit.
		    seek NEXT in EMBOTELLADORA-F
			when EOF exit.
		    read EMBOTELLADORA-F
		    loop.
	 when FAR   perform ENCUESTA-PROXIMA
		    loop.
	 when BAR   seek PRIOR in PRODUC-CENSO-F
			 when EOF message 49, '-Inicio Empresa-'
				  beep
				  wait 1 second
				  seek first in PRODUC-CENSO-F.
		    read PRODUC-CENSO-F
		    if embo-codigo not = prce-cod1
		       message 49, '-Inicio Empresa-'
		       beep
		       wait 1 second
		       seek next in PRODUC-CENSO-F
		       read PRODUC-CENSO-F.
		    loop.
    loop.

ENCUESTA-PROXIMA.
;----------------
    seek NEXT in PRODUC-CENSO-F
	 when EOF message 49, '- Fin  Empresa -'
		  beep
		  wait 1 second
		  seek LAST in PRODUC-CENSO-F.
    read PRODUC-CENSO-F.
    if embo-codigo not = prce-cod1
       message 49, '- Fin  Empresa -'
       beep
       wait 1 second
       seek PRIOR in PRODUC-CENSO-F
       read PRODUC-CENSO-F.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			      AUDITORIA   NEGOCIO			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
AUDITORIA-NEG.
;-------------
    move 'Auditor. Negocio' to proc-ws.
    move 1 to punt-audit.
    perform SELCLI-3OP-CENSO
	  when ER    exit.
	  when KEXIT exit.
	  when KEND  exit.
	  when OK    perform AUDITORIA-NEG-001.
    loop.

AUDITORIA-NEG-001.
;-----------------
    move 'Auditor. Negocio' to proc-ws.
    message 1,	'****************'.
    examine punt-audit
	    when 0 move 2 TO punt-audit      loop.
	    when 1 message 17, ' Audit. Inicial '.
	    when 2 message 17, 'Auditoria  Final'.
	    when 3 move 1 TO punt-audit      loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-AUDIT.
	    when ENTER perform MENU-AUDIT.
	    when NO    add 1 to punt-audit.
	    when FAR   add 1 to punt-audit.
	    when BAR   subtract 1 from punt-audit.
	    when KEXIT exit.
	    when KEND  exit.
    loop.

MENU-AUDIT.
;----------
    examine punt-audit
	    when 1 perform AUDIT-INICIAL.
	    when 2 perform AUDIT-FINAL.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			      AUDITORIA   INICIAL			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
AUDIT-INICIAL.
;-------------
    move 'Auditor. Inicial' to proc-ws.
    perform  OPENREF-PROD-AUDIT
	 when ER exit.
    seek FIRST in PRODUC-AUDIT-F
	 when EOF message  1, '****************'
		  message 17, '    Archivo     '
		  message 33, 'Auditoria  Vacio'
		  message 49, '****************'
		  wait 1 second
		  exit.
    read PRODUC-AUDIT-F.
    perform OPENUP-AUDITORIA.
    move 1 to punt-audit-aux.

AUDIT-INICIAL-001.
;-----------------
    move cli-codigo  to busca-censo1.
    move prau-codigo to busca-censo2.
    move prau-codigo to audit-cod-pro.
    move 0	     to prec-audi.
    move 0	     to cant-audi.
    message 33, '                '.
    show AUDITORIA-BOTELLA-SD.
    perform MENSAJE-AUDIT-INI.
    if punt-audit-aux = 4
       accept PRECIO-AUDIT-SD
    else
       accept CANTI-AUDIT-SD
    end-if
	 when KEND  exit.
	 when KEXIT exit.
	 when OK    if punt-audit-aux = 4
		       if prec-audi = 0 loop.
		    else
		       if cant-audi = 0 loop.
		    end-if
		    perform GRABA-INI-AUDITORIA
		    loop.
	 when KINS  perform MUESTRA-AUDIT-INI
		    loop.
	 when KMOD  perform MODIFICA-AUDI-INI
		    loop.
	 when UAR   add 1 to punt-audit-aux
		    loop.
	 when DAR   subtract 1 from punt-audit-aux
		    loop.
	 when FAR   seek NEXT in PRODUC-AUDIT-F
			 when EOF message 49, '- Fin  Archivo -'
				  beep
				  wait 1 second
				  seek LAST in PRODUC-AUDIT-F.
		    read PRODUC-AUDIT-F.
	 when BAR   seek PRIOR in PRODUC-AUDIT-F
			 when EOF message 49, '-Inicio Archivo-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUC-AUDIT-F.
		    read PRODUC-AUDIT-F.
    loop.

MENSAJE-AUDIT-INI.
;-----------------
    examine punt-audit-aux
	 when 0 move 4 TO punt-audit-aux  loop.
	 when 1 message 49, 'Sala   :        '.
	 when 2 message 49, 'Bodega :        '.
	 when 3 message 49, 'Otros  :        '.
	 when 4 message 49, 'Precio $:       '.
	 when 5 move 1 TO punt-audit-aux  loop.
    exit.

GRABA-INI-AUDITORIA.
;-------------------
    search FIRST for busca-censo in AUDITORIA-F
	   when ER perform MUEVE-INI-AUDIT exit.
	   when OK read AUDITORIA-F
		   perform SUMA-INI-AUDIT.
    exit.

MUEVE-INI-AUDIT.
;---------------
    move 0 to auditoria-inicial.
    examine punt-audit-aux
	 when 1 move cant-audi to audi-sala1.
	 when 2 move cant-audi to audi-bodega1.
	 when 3 move cant-audi to audi-otros1.
	 when 4 move prec-audi to audi-precio1.
    move cli-codigo  to audi-cliente.
    move prau-codigo to audi-producto.
    move 0	     to auditoria-final.
    move x'0D'       to audi-c1.
    move x'0A'       to audi-c2.
    write REG-AUDITORIA.
    exit.

SUMA-INI-AUDIT.
;--------------
    examine punt-audit-aux
	 when 1 add  cant-audi to audi-sala1.
	 when 2 add  cant-audi to audi-bodega1.
	 when 3 add  cant-audi to audi-otros1.
	 when 4 move prec-audi to audi-precio1.
    move x'0D' to audi-c1.
    move x'0A' to audi-c2.
    rewrite REG-AUDITORIA.
    exit.

MUESTRA-AUDIT-INI.
;-----------------
    search FIRST for busca-censo in AUDITORIA-F
	 when OK read AUDITORIA-F.
	 when ER exit.
    examine punt-audit-aux
	 when 1 move audi-sala1   to cant-audi.
	 when 2 move audi-bodega1 to cant-audi.
	 when 3 move audi-otros1  to cant-audi.
	 when 4 move audi-precio1 to prec-audi.
    if punt-audit-aux = 4
       show PRECIO-AUDIT-SD
    else
       show CANTI-AUDIT-SD.
    beep.
    wait 1 second.
    exit.

MODIFICA-AUDI-INI.
;-----------------
    move 0 to modi-total-audit.
    search FIRST for busca-censo in AUDITORIA-F
	   when ER exit.
    read AUDITORIA-F.
    examine punt-audit-aux
	 when 1 move audi-sala1   to modi-total-audit.
	 when 2 move audi-bodega1 to modi-total-audit.
	 when 3 move audi-otros1  to modi-total-audit.
	 when 4 exit.
    show TOT-MODI-AUDI-SD.
    accept CANTI-AUDIT-SD
	 when KEXIT exit.
	 when KEND  exit.
    examine punt-audit-aux
	 when 1 move cant-audi to audi-sala1.
	 when 2 move cant-audi to audi-bodega1.
	 when 3 move cant-audi to audi-otros1.
    move x'0D' to audi-c1.
    move x'0A' to audi-c2.
    rewrite REG-AUDITORIA.

    move cant-audi to modi-total-audit.
    show TOT-MODI-AUDI-SD.
    message 49, '                '.
    wait 1 second.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			       AUDITORIA   FINAL			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
AUDIT-FINAL.
;-----------
    move 'Auditoria  Final' to proc-ws.
    perform OPENREF-PROD-AUDIT
	  when ER exit.
    seek FIRST in PRODUC-AUDIT-F
	    when EOF message  1, '****************'
		     message 17, '    Archivo     '
		     message 33, 'Auditoria  Vacio'
		     message 49, '****************'
		     wait 1 second
		     exit.
    read PRODUC-AUDIT-F.
    perform OPENUP-AUDITORIA.
    move 1 to punt-audit-aux.

AUDIT-FINAL-001.
;---------------
    move cli-codigo	  to busca-censo1.
    move prau-codigo	  to busca-censo2.
    move prau-codigo	  to audit-cod-pro.
    move 0		  to cant-audi.
    move 0		  to prec-audi.
    move 0		  to comp-audi.
    message 33, '                '.
    perform MENSAJE-AUDIT-FIN.
    show AUDITORIA-BOTELLA-SD.
    if punt-audit-aux = 4
       accept PRECIO-AUDIT-SD
    else
       if punt-audit-aux = 5
	  accept COMPRA-AUDIT-SD
       else
	  accept CANTI-AUDIT-SD
       end-if
    end-if
	 when KEND  exit.
	 when KEXIT exit.
	 when OK    if punt-audit-aux = 4
		       if prec-audi = 0 loop.
		    else
		       if punt-audit-aux = 5
			  if comp-audi = 0 loop.
		       else
			  if cant-audi = 0 loop.
		       end-if
		    end-if
		    perform GRABA-FIN-AUDITORIA
		    loop.
	 when KINS  perform MUESTRA-AUDIT-FIN
		    loop.
	 when KMOD  perform MODIFICA-AUDI-FIN
		    loop.
	 when UAR   add 1 to punt-audit-aux
		    loop.
	 when DAR   subtract 1 from punt-audit-aux
		    loop.
	 when FAR   seek NEXT in PRODUC-AUDIT-F
			 when EOF message 49, '- Fin  Archivo -'
				  beep
				  wait 1 second
				  seek LAST in PRODUC-AUDIT-F.
		    read PRODUC-AUDIT-F.
	 when BAR   seek PRIOR in PRODUC-AUDIT-F
			 when EOF message 49, '-Inicio Archivo-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUC-AUDIT-F.
		    read PRODUC-AUDIT-F.
    loop.

MENSAJE-AUDIT-FIN.
;-----------------
    examine punt-audit-aux.
	 when 0 move 5 TO punt-audit-aux  loop.
	 when 1 message 49, 'Sala   :        '.
	 when 2 message 49, 'Bodega :        '.
	 when 3 message 49, 'Otros  :        '.
	 when 4 message 49, 'Precio $:       '.
	 when 5 message 49, 'Compra :        '.
	 when 6 move 1 TO punt-audit-aux  loop.
    exit.

GRABA-FIN-AUDITORIA.
;-------------------
    search FIRST for busca-censo in AUDITORIA-F
	   when ER perform MUEVE-FIN-AUDIT exit.
	   when OK read AUDITORIA-F
		   perform SUMA-FIN-AUDIT.
    exit.

MUEVE-FIN-AUDIT.
;---------------
    move 0 to auditoria-final.
    examine punt-audit-aux
	 when 1 move cant-audi to audi-sala2.
	 when 2 move cant-audi to audi-bodega2.
	 when 3 move cant-audi to audi-otros2.
	 when 4 move prec-audi to audi-precio2.
	 when 5 move comp-audi to audi-compra2.
    move cli-codigo  to audi-cliente.
    move prau-codigo to audi-producto.
    move 0	     to auditoria-inicial.
    move x'0D'       to audi-c1.
    move x'0A'       to audi-c2.
    write REG-AUDITORIA.
    exit.

SUMA-FIN-AUDIT.
;--------------
    examine punt-audit-aux
	 when 1 add  cant-audi to audi-sala2.
	 when 2 add  cant-audi to audi-bodega2.
	 when 3 add  cant-audi to audi-otros2.
	 when 4 move prec-audi to audi-precio2.
	 when 5 move comp-audi to audi-compra2.
    move x'0D' to audi-c1.
    move x'0A' to audi-c2.
    rewrite REG-AUDITORIA.
    exit.

MUESTRA-AUDIT-FIN.
;-----------------
    search FIRST for busca-censo in AUDITORIA-F
	 when OK read AUDITORIA-F.
	 when ER exit.
    examine punt-audit-aux
	 when 1 move audi-sala2   to cant-audi.
	 when 2 move audi-bodega2 to cant-audi.
	 when 3 move audi-otros2  to cant-audi.
	 when 4 move audi-precio2 to prec-audi.
	 when 5 move audi-compra2 to comp-audi.
    if punt-audit-aux = 4
       show PRECIO-AUDIT-SD
    else
       if punt-audit-aux = 5
	  show COMPRA-AUDIT-SD
       else
	  show CANTI-AUDIT-SD
       end-if
    end-if
    beep.
    wait 1 second.
    exit.

MODIFICA-AUDI-FIN.
;-----------------
    move 0 to modi-total-audit.
    search FIRST for busca-censo in AUDITORIA-F
	   when ER exit.
    read AUDITORIA-F.
    examine punt-audit-aux
	 when 1 move audi-sala2   to modi-total-audit.
	 when 2 move audi-bodega2 to modi-total-audit.
	 when 3 move audi-otros2  to modi-total-audit.
	 when 4 exit.
	 when 5 exit.
    show TOT-MODI-AUDI-SD.
    accept CANTI-AUDIT-SD
	 when KEXIT exit.
	 when KEND  exit.
    examine punt-audit-aux
	 when 1 move cant-audi to audi-sala2.
	 when 2 move cant-audi to audi-bodega2.
	 when 3 move cant-audi to audi-otros2.

    move x'0D' to audi-c1.
    move x'0A' to audi-c2.
    rewrite REG-AUDITORIA.

    move cant-audi to modi-total-audit.
    show TOT-MODI-AUDI-SD.
    message 49, '                '.
    wait 1 second.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ  PROCESO OCUPADO IGUALMENTE POR AUDITORIA DE NEG., ENCUESTA PREC. Y CENSO  ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
SELCLI-3OP-CENSO.
;----------------
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa.

    perform OPENREF-CLIENTES
	    when ER exit.
    seek FIRST in CLIENTES-F
	    when EOF message  1, '****************'
		     message 17, 'Archivo Clientes'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read CLIENTES-F.

SELCLI-001-CENSO.
;----------------
    accept COD-CLIE-SD
	  when OK    search FIRST for llave-cliente in CLIENTES-F
			    when ER beep
				    message 1,	'****************'
				    message 17, '   No  Existe   '
				    message 33, '    Cliente     '
				    message 49, '****************'
				    wait 1 second
				    loop.
			    when OK read CLIENTES-F
				    perform RECORRE-CLI-CENSO
					 when KEXIT exit.
					 when KEND  exit.
				    move OK to last-key
				    exit.
	       end-when
	  when UAR   perform RECORRE-CENSO-UAR
			  when KEXIT exit.
			  when KEND  exit.
		     move OK to last-key
		     exit.
	  when DAR   perform RECORRE-CENSO-DAR
			  when KEXIT exit.
			  when KEND  exit.
		     move OK to last-key
		     exit.
	  when KEXIT exit.
	  when KEND  exit.
    loop.

RECORRE-CENSO-UAR.
;-----------------
    seek FIRST in CLIENTES-F.
    read CLIENTES-F.
    perform RECORRE-CLI-CENSO.
    exit.

RECORRE-CENSO-DAR.
;-----------------
    seek LAST in CLIENTES-F.
    read CLIENTES-F.
    perform RECORRE-CLI-CENSO.
    exit.

RECORRE-CLI-CENSO.
;-----------------
    show CENSO-SELCLI-SD.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when ENTER move OK to last-key exit.
	 when UAR   seek NEXT in CLIENTES-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 seconds
				  seek LAST in CLIENTES-F.
		    read CLIENTES-F
		    loop.
	 when DAR   seek PRIOR in CLIENTES-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 seconds
				  seek FIRST in CLIENTES-F.
		    read CLIENTES-F
		    loop.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				   MUESTREO				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
MUESTREO.
;--------
    move '    Muestreo   ' to proc-ws.
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa.

    perform OPENREF-CABECERA
	    when ER exit.
    move 0 to ws-prox-nota.
    accept NUMERO-PED-SD
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
	   when DAR   perform BUSCA-MUES-DAR loop.
	   when UAR   perform BUSCA-MUES-UAR loop.
    if ws-prox-nota = 0 loop.
    search FIRST for ws-prox-nota in CABECERA-F
	   when ER beep
		   message  1, '****************'
		   message 17, '*  No  Existe  *'
		   message 33, '*    Pedido    *'
		   message 49, '****************'
		   wait 1 second
		   loop.
    read CABECERA-F.
    if cabe-borrado = 1
       beep
       message	1, '****************'
       message 17, '*    Pedido    *'
       message 33, '*   Anulado.   *'
       message 49, '****************'
       wait 1 second
       loop.
    move cabe-codigo to cod-clie-ws.
    perform OPENREF-CLIENTES
	    when ER exit.
    search FIRST for llave-cliente in CLIENTES-F
	   when OK read CLIENTES-F
		   move cli-razon-soc to razon-soc-ws
		   move cli-direccion to dire-clinue
		   move cli-cedula    to cli-rut-ws
		   perform MUESTREO-001
		   loop.
	   when ER perform OPENREF-CLINUE
			  when ER exit.
		   search FIRST for cod-clie-ws in CLIENTE-NUEV-F
			  when ER message  1, '****************'
				  message 17, '*  No  Existe  *'
				  message 33, '*   Cliente.   *'
				  message 49, '****************'
				  wait 1 second
				  loop.
			  when OK read CLIENTE-NUEV-F
				  move clin-razon-soc to razon-soc-ws
				  move clin-direccion to dire-clinue
				  move clin-cedula    to cli-rut-ws
				  perform MUESTREO-001
				  loop.
		end-when
    loop.

BUSCA-MUES-UAR.
;--------------
    seek FIRST in CABECERA-F
       when EOF beep
		message  1, '****************'
		message 17, '*  No Existen  *'
		message 33, '*    Pedidos   *'
		message 49, '****************'
		wait 1 second
		exit.
    read CABECERA-F.
    if cabe-borrado = 1 or cabe-nroped = 0
       perform SIGUIENTE-PED
	  when EOF message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*    Pedidos   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    end-if
    perform BUSCA-MUES-001.
    exit.

BUSCA-MUES-DAR.
;--------------
    seek LAST in CABECERA-F
       when EOF beep
		message  1, '****************'
		message 17, '*  No Existen  *'
		message 33, '*    Pedidos   *'
		message 49, '****************'
		wait 1 second
		exit.
    read CABECERA-F.
    if cabe-borrado = 1 or cabe-nroped = 0
       perform ANTERIOR-PED
	  when EOF message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*    Pedidos   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
    end-if
    perform BUSCA-MUES-001.
    exit.

BUSCA-MUES-001.
;--------------
    move cabe-codigo	   to cod-clie-ws.
    move cabe-tot-nota	   to ws-total-nota.
    move cabe-nivel-precio to nivel-prec.
    move cabe-nro-carga    to ws-carga-camion.
    move cabe-tipo-credito to punt-forma-pago.
    move cabe-flag-zf-ze   to punt-zof-ext.
    move cabe-nroped	   to ws-prox-nota.

    perform OPENREF-CLIENTES
	    when ER exit.
    search FIRST for llave-cliente in CLIENTES-F
	    when OK read CLIENTES-F
		    move cli-razon-soc to razon-soc-ws
		    move cli-direccion to dire-clinue
		    move cli-cedula    to cli-rut-ws
		    move cli-descuento to ws-descuento2.
	    when ER perform OPENREF-CLINUE
			   when ER exit.
		    search FIRST for cod-clie-ws in CLIENTE-NUEV-F
			   when ER message  1, '****************'
				   message 17, '*  No  Existe  *'
				   message 33, '*   Cliente.   *'
				   message 49, '****************'
				   wait 1 second
				   exit.
			   when OK read CLIENTE-NUEV-F
				   move clin-razon-soc to razon-soc-ws
				   move clin-direccion to dire-clinue
				   move 0	       to ws-descuento2
				   move clin-cedula    to cli-rut-ws.
		 end-when
    show PANTALLA-REV1-SD.
    action
	 when KEXIT exit.
	 when KEND  exit.
	 when UAR   perform SIGUIENTE-PED
		       when EOF beep
				message 49, '* Fin  Archivo *'
				wait 7 tenths
				seek LAST in CABECERA-F
				read CABECERA-F
				if cabe-borrado = 1 or cabe-nroped = 0
				   perform ANTERIOR-PED.
			    end-when
	      end-when
	 when DAR   perform ANTERIOR-PED
		       when EOF beep
				message 49, '*Inicio Archivo*'
				wait 7 tenths
				seek FIRST in CABECERA-F
				read CABECERA-F
				if cabe-borrado = 1 or cabe-nroped = 0
				   perform SIGUIENTE-PED.
			    end-when
	      end-when
	 when ENTER perform MUESTREO-001 exit.
    loop.

MUESTREO-001.
;------------
    move 0 to ws-canti-mue.
    show MUEST-CLIENTE-SD.
    action
	when ENTER perform CUENTA-CANTIDAD
			   when ER exit.
		   perform CUENTA-MUESTREO-OLD
		   perform OPENREF-PRODUCTOS
			   when ER exit.
		   perform MUESTREO-ALL
		   exit.
	when KEXIT exit.
	when KEND  exit.
    loop.

CUENTA-CANTIDAD.
;---------------
    perform OPENREF-DETALLE
	   when ER exit.
    search FIRST for ws-prox-nota in DETALLE-PED-F
	   when ER message  1, '****************'
		   message 17, '*  No Existen  *'
		   message 33, '*   Detalles   *'
		   message 49, '****************'
		   wait 1 second
		   exit.
	   when OK move 0 to ws-cant-aux
		   perform RECORRE-CANT-DET.
    exit.

RECORRE-CANT-DET.
;---------------
    read DETALLE-PED-F.
    if ws-prox-nota not = dped-nroped exit.
    add dped-cantidad to ws-cant-aux.
    seek NEXT in DETALLE-PED-F
	 when EOF exit.
    loop.

CUENTA-MUESTREO-OLD.
;-------------------
    perform OPENUP-MUESTREO.
    search FIRST for ws-prox-nota in MUESTREO-F
	   when ER exit.
	   when OK perform RECORRE-CANT-MUE.
    exit.

RECORRE-CANT-MUE.
;---------------
    read MUESTREO-F.
    if ws-prox-nota not = mue-nroped exit.
    add mue-cant-cajas to ws-canti-mue.
    seek NEXT in MUESTREO-F
	 when EOF exit.
    loop.

MUESTREO-ALL.
;------------
    move 0 to ws-cod-producto.
    accept COD-PRODUCTO-SD
	   when UAR   perform REVISA-MUESTREO
		      loop.
	   when ER    loop.
	   when KEXIT exit.
	   when KEND  exit.
    if ws-cod-producto = 0 loop.
    search FIRST for ws-cod-producto in PRODUCTOS-F
	   when ER message  1, '****************'
		   message 17, '*  No  Existe  *'
		   message 33, '*   Producto   *'
		   message 49, '****************'
		   wait 1 second
		   loop.
    read PRODUCTOS-F.
    perform MUESTREO-ALL-001
	    when BAR   loop.
	    when KEXIT exit.
	    when KEND  exit.
    perform CONFIRMA-MUES.
    loop.

MUESTREO-ALL-001.
;----------------
    move 0 to ws-cantidad.
    show MUES-DESCRIP-SD.
    accept MUES-CANTIDAD-SD
	   when OK    add ws-cantidad to ws-canti-mue
		      if ws-canti-mue > ws-cant-aux
			 beep
			 message  1, 'Cantidad  Supera'
			 message 17, '   al  Pedido   '
			 message 33, '                '
			 message 49, '   REINGRESE    '
			 wait 1 second
			 subtract ws-cantidad from ws-canti-mue
			 loop.
		      exit.
	   when BAR   exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONFIRMA-MUES.
;-------------
    message  1, '****************'.
    message 17, 'Confirma  Pedido'.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action
	 when ENTER perform GRABA-MUESTREO exit.
	 when YES   perform GRABA-MUESTREO exit.
	 when NO    subtract ws-cantidad from ws-canti-mue exit.
	 when KEXIT subtract ws-cantidad from ws-canti-mue exit.
	 when KEND  subtract ws-cantidad from ws-canti-mue exit.
    loop.

GRABA-MUESTREO.
;--------------
    perform OPENUP-MUESTREO.
    move ws-prox-nota	 to mue-nroped.
    move cod-clie-ws	 to mue-cliente.
    move ws-cod-producto to mue-producto.
    move ws-cantidad	 to mue-cant-cajas.
    move x'0D'           to mue-c1.
    move x'0A'           to mue-c2.
    write REG-MUESTREO.

    perform OPENREF-CARGA-CAMION
       when ER exit.
    search FIRST for cabe-nro-carga in CARGA-CAMION-F
       when ER exit.
    read CARGA-CAMION-F
    if cabe-flag-zf-ze = 0
       add ws-cantidad to cc-cantidad-ext
    else
       add ws-cantidad to cc-cantidad-zof.
    rewrite REG-CARGA-CAMION.

    exit.

REVISA-MUESTREO.
;---------------
    perform OPENREF-MUESTREO
	    when ER message 33, ' No se registra '
		    message 49, '    Muestreo    '
		    beep
		    wait 1 second
		    exit.
    search FIRST for ws-prox-nota in MUESTREO-F
	    when ER message 33, ' No se registra '
		    message 49, '    Muestreo    '
		    beep
		    wait 1 second
		    exit.
    move 1 to item.
    read MUESTREO-F.

REVISA-MUESTREO-001.
;-------------------
    search FIRST for mue-producto in PRODUCTOS-F.
    read PRODUCTOS-F.
    move mue-producto	to ws-cod-producto.
    move mue-cant-cajas to ws-cantidad.
    show MUES-DESCRIP-SD.
    show MUES-CANTIDAD-SD.
    show MUES-ITEM-SD.
    action
	when ENTER perform MUESTREO-SIGUIENTE.
	when UAR   perform MUESTREO-SIGUIENTE.
	when DAR   perform MUESTREO-ANTERIOR.
	when KMOD  subtract ws-cantidad from ws-canti-mue
		   perform MODIFICA-MUESTREO
		   search FIRST for ws-prox-nota in MUESTREO-F
		   read MUESTREO-F
		   move 1 to item.
	when KEXIT exit.
	when KEND  exit.
    loop.

MUESTREO-SIGUIENTE.
;------------------
    seek NEXT in MUESTREO-F
	 when EOF message 49, '  Fin Muestreo  '
		  beep
		  wait 1 second
		  seek LAST in MUESTREO-F
		  read MUESTREO-F
		  exit.
    if ws-prox-nota not = mue-nroped
       message 49, '  Fin Muestreo  '
       beep
       wait 1 second
       seek PRIOR in MUESTREO-F
       read MUESTREO-F
       exit.
    read MUESTREO-F.
    add 1 to item.
    exit.

MUESTREO-ANTERIOR.
;-----------------
    seek PRIOR in MUESTREO-F
	 when EOF message 49, 'Inicio  Muestreo'
		  beep
		  wait 1 second
		  seek first in MUESTREO-F
		  read MUESTREO-F
		  exit.
    if ws-prox-nota not = mue-nroped
       message 49, 'Inicio  Muestreo'
       beep
       wait 1 second
       seek NEXT in MUESTREO-F
       read MUESTREO-F
       exit.
    read MUESTREO-F.
    subtract 1 from item.
    exit.

MODIFICA-MUESTREO.
;-----------------
    move 0 to ws-cantidad.
    show MUES-DESCRIP-SD.
    show MUES-ITEM-SD.
    accept MUES-CANTIDAD-SD
	   when OK    add ws-cantidad to ws-canti-mue
		      if ws-canti-mue > ws-cant-aux
			 beep
			 message  1, 'Cantidad  Supera'
			 message 17, '   el  Pedido   '
			 message 33, '                '
			 message 49, '   REINGRESE.   '
			 wait 1 second
			 subtract ws-cantidad from ws-canti-mue
			 loop.
		      show MUES-CANTIDAD-SD
		      wait 10 tenths
		      perform REGRABA-MUESTREO
		      exit.
	   when KEXIT add mue-cant-cajas to ws-canti-mue
		      exit.
	   when KEND  add mue-cant-cajas to ws-canti-mue
		      exit.
    loop.

REGRABA-MUESTREO.
;----------------
    move mue-cant-cajas to cant-censo.
    move ws-cantidad	to mue-cant-cajas.
    move x'0D'          to mue-c1.
    move x'0A'          to mue-c2.
    rewrite REG-MUESTREO.

    perform OPENREF-CARGA-CAMION
       when ER exit.
    search FIRST for cabe-nro-carga in CARGA-CAMION-F
       when ER exit.
    read CARGA-CAMION-F
    if cabe-flag-zf-ze = 0
       subtract cant-censo  from cc-cantidad-ext
       add	ws-cantidad to	 cc-cantidad-ext
    else
       subtract cant-censo  from cc-cantidad-zof
       add	ws-cantidad to	 cc-cantidad-zof.
    rewrite REG-CARGA-CAMION.

    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				   CONSULTAS				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSULTA.
;--------
    move 1 to punt-consulta.

CONSULTA-001.
;------------
    move ' Menu Consulta  ' to proc-ws.
    message 1,	'****************'.
    examine punt-consulta
	    when 0 move 2 TO punt-consulta   loop.
	    when 1 message 17, '   Productos    '.
	    when 2 message 17, '    Clientes    '.
	    when 3 move 1 TO punt-consulta   loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-CONSULTAS.
	    when ENTER perform MENU-CONSULTAS.
	    when NO    add 1 to punt-consulta.
	    when FAR   add 1 to punt-consulta.
	    when BAR   subtract 1 from punt-consulta.
	    when KEXIT exit.
	    when KEND  exit.
    loop.

MENU-CONSULTAS.
;--------------
    examine punt-consulta
	    when 1 perform CONSU-PRODUCTOS.
	    when 2 perform CONSULTA-CLI.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			       CONSULTA CLIENTES			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSULTA-CLI.
;------------
    move 1 to punt-cli.

CONSULTA-CLI-001.
;----------------
    move 'Consulta Cliente' to proc-ws.
    message 1,	'****************'.
    examine punt-cli
	    when 0 move 2 TO punt-cli	     loop.
	    when 1 message 17, '  Cliente Ruta  '.
	    when 2 message 17, ' Cliente  Nuevo '.
	    when 3 move 1 TO punt-cli	     loop.
    message 49, '****************'.
    message 33, '    Yes / No    '.
    fast-action
	    when YES   perform MENU-CLIEN.
	    when ENTER perform MENU-CLIEN.
	    when NO    add 1 to punt-cli.
	    when FAR   add 1 to punt-cli.
	    when BAR   subtract 1 from punt-cli.
	    when KEXIT exit.
	    when KEND  exit.
    loop.

MENU-CLIEN.
;----------
    examine punt-cli
	    when 1 perform CONSU-CLI-RUTA.
	    when 2 perform CONSU-CLI-NUEV.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			   CONSULTA CLIENTE RUTA			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSU-CLI-RUTA.
;--------------
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa.
    perform OPENREF-CLIENTES
	    when ER exit.
    seek FIRST in CLIENTES-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Clientes'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read CLIENTES-F.

CONSU-CLI-RUTA-001.
;------------------
    accept COD-CLIE-SD
	  when OK    search FIRST for llave-cliente in CLIENTES-F
			   when ER beep
				   message 1,  '****************'
				   message 17, '   No  Existe   '
				   message 33, '    Cliente     '
				   message 49, '****************'
				   wait 1 second
				   loop.
			   when OK read CLIENTES-F
				   perform RECORRE-CLR-010.
	       end-when
	  when UAR   perform RECORRE-CLR-UAR.
	  when DAR   perform RECORRE-CLR-DAR.
	  when KEXIT exit.
	  when KEND  exit.
    loop.

RECORRE-CLR-UAR.
;---------------
    seek FIRST in CLIENTES-F.
    read CLIENTES-F.
    perform RECORRE-CLR-010.
    exit.

RECORRE-CLR-DAR.
;---------------
    seek LAST in CLIENTES-F.
    read CLIENTES-F.
    perform RECORRE-CLR-010.
    exit.

RECORRE-CLR-010.
;---------------
    move 0 to existe-cabe.
    move 0 to ws-prox-nota.
    perform OPENREF-CABE2
       when ER move 1 to existe-cabe.
    seek FIRST in CABECERA-F
       when EOF move 1 to existe-cabe.
    read CABECERA-F.
    perform BUSCA-PEDIDOS-CLI.
    perform RECORRE-CLR-011.
	  when UAR loop.
	  when DAR loop.
    exit.

RECORRE-CLR-011.
;---------------
    clear.
    if existe-cabe = 1
       move 0 to ws-prox-nota.
    show MUE-SEL-CLI-SD.
    if existe-cabe = 1
       message 27, '******'.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when KMOD  perform CONS-MOD-1	loop.
	 when ENTER perform CONSULTA-CLR-001 loop.
	 when KNEXT if existe-cabe = 0
		       seek NEXT in CABECERA-F
			    when EOF move 1 to existe-cabe
				     loop.
		       read CABECERA-F
		       perform BUSCA-PEDIDOS-CLI.
	      end-when
	 when UAR   seek NEXT in CLIENTES-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 second
				  seek LAST in CLIENTES-F.
		    read CLIENTES-F
		    move UAR to last-key
		    exit.
	 when DAR   seek PRIOR in CLIENTES-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 second
				  seek FIRST in CLIENTES-F.
		    read CLIENTES-F
		    move DAR to last-key
		    exit.
    loop.

BUSCA-PEDIDOS-CLI.
;-----------------
   if cli-codigo = cabe-codigo and cabe-borrado = 0
      move cabe-nroped to ws-prox-nota
      exit.
   seek NEXT in CABECERA-F
      when EOF move 1 to existe-cabe
	       exit.
   read CABECERA-F.
   loop.

CONSULTA-CLR-001.		       ; Direccion
;----------------
    clear.
    move cli-numero to dire-numero.
    show CLIENTE-DET2-SD.
    show NUMERO-CLI-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-MOD-2.
    loop.

CONSULTA-CLR-002.		       ; Rut
;----------------
    clear.
    show CLIENTE-DET3-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-MOD-3.
    loop.

CONSULTA-CLR-003.		       ; Frecuencia Visita
;----------------
    move cli-frec1 to dia-aux-1.
    move cli-frec2 to dia-aux-2.
    move cli-frec3 to dia-aux-3.
    move cli-frec4 to dia-aux-4.
    move cli-frec5 to dia-aux-5.
    move cli-frec6 to dia-aux-6.

    clear.
    message  1, ' Dia de  Visita '.
    message 49, '  L M M J V S   '.
    show DIA-VIS1-SD.
    show DIA-VIS2-SD.
    show DIA-VIS3-SD.
    show DIA-VIS4-SD.
    show DIA-VIS5-SD.
    show DIA-VIS6-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  move 1 to punt-dia-vis
		     perform ACEPTA-SECUENCIA-VIS
			 when OK perform IF-EXIST-CLIENTE-MOD
				 move 1  to clim-frec-visita
				 rewrite REG-CLIENTE-MOD

				 move dia-aux-1 to cli-frec1
				 move dia-aux-2 to cli-frec2
				 move dia-aux-3 to cli-frec3
				 move dia-aux-4 to cli-frec4
				 move dia-aux-5 to cli-frec5
				 move dia-aux-6 to cli-frec6
				 rewrite REG-CLIENTES.
	       end-when
    loop.

CONSULTA-CLR-004.		       ; Fono - Descuento
;----------------
    clear.
    show CLIENTE-DET4-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-MOD-4.
    loop.

CONSULTA-CLR-005.		       ; Forma de pago
;----------------
    clear.
    message 1, ' Forma de pago  '.
    if cli-tipo-credito = 0
       message 33, '    Contado     '
    else ;if cli-tipo-credito = 1
	    message 33, '    Credito     '
	 ;else
	 ;   message 33, '    Oferta      '
	 ;end-if
    end-if

    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when ENTER exit.
    loop.

CONSULTA-CLR-006.		       ; Ramo
;----------------
    perform OPENREF-RAMOS
	 when ER exit.
    seek FIRST in RAMOS-F
	 when EOF beep
		  message  1, '****************'
		  message 17, ' Archivo Ramos  '
		  message 33, '     Vacio      '
		  message 49, '****************'
		  wait 1 second
		  exit.
    search FIRST for cli-ramo in RAMOS-F
	   when ER exit.
    read RAMOS-F.
    move cli-ramo to cod-ramo-ws.

CONSULTA-CLR-061.		       ; Ramo II parte
;----------------
    clear.
    show COD-RAMO-SD
    show DESC-RAMO-SD
    action
	  when KEXIT exit.
	  when KEND  next.
	  when BAR   next.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  move cli-ramo to cod-ramo-aux-ws
		     perform ACEPTA-RAMO-CONSULTA
			 when OK perform IF-EXIST-CLIENTE-MOD
				 move 1  to clim-ramo
				 rewrite REG-CLIENTE-MOD
				 move cod-ramo-ws to cli-ramo
				 rewrite REG-CLIENTES.
			 when ER search FIRST for cod-ramo-aux-ws in RAMOS-F
				  read RAMOS-F
				  move ra-codigo  to  cod-ramo-ws.
	  end-when
    loop.

CONS-CLN-008.			       ; Ruta
;------------
    clear.
    show CLN-RUTA-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   exit.
	  when ENTER exit.
	  when KMOD  perform CONS-MOD-5.
    loop.


ACEPTA-RAMO-CONSULTA.
;--------------------
    accept COD-RAMO-SD
	 when KEXIT move ER to last-key exit.
	 when KEND  move ER to last-key exit.
	 when OK    search FIRST for cod-ramo-ws in RAMOS-F
			 when OK read RAMOS-F
				 perform REC-RAMOS
				    when ER  move ER to last-key.
				    exit.
	      end-when
	 when DAR   seek PRIOR in RAMOS-F
		    read RAMOS-F
		    perform REC-RAMOS
			 when ER  move ER to last-key.
			 exit.
	 when UAR   seek NEXT  in RAMOS-F
		    read RAMOS-F
		    perform REC-RAMOS
			 when ER  move ER to last-key.
			 exit.
    loop.


CONS-MOD-1.
;----------
    move '                      ' to razon-soc-ws.
    accept    CONMOD-1-SD
	   when OK    perform IF-EXIST-CLIENTE-MOD
		      move 1  to clim-razon-soc
		      rewrite REG-CLIENTE-MOD
		      move razon-soc-ws to cli-razon-soc
		      rewrite REG-CLIENTES
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.



IF-EXIST-CLIENTE-MOD.
;--------------------
perform OPENUP-CLIMOD
search FIRST for cli-codigo in CLIENTE-MOD-F
       when ER	move   cli-codigo to clim-codigo
		move   0     to   clim-ramo
		move   0     to   clim-razon-soc
		move   0     to   clim-direccion
		move   0     to   clim-numero
		move   0     to   clim-rut
		move   0     to   clim-fono
		move   0     to   clim-frec-visita
		move   0     to   clim-ruta
		move   x'0D' to   clim-c1           
		move   x'0A' to   clim-c2           
		write REG-CLIENTE-MOD.
exit.

CONS-MOD-2.
;----------
    move '                ' to dire-clinue
    accept CONMOD-2-SD
	   when OK    next.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-MOD-2-1.
;------------
    move '     ' to dire-numero
    accept NUMERO-CLI-SD
	   when OK   perform IF-EXIST-CLIENTE-MOD
		     move 1  to clim-direccion
		     move 1  to clim-numero
		     rewrite REG-CLIENTE-MOD

		      move dire-clinue to cli-direccion
		      move dire-numero to cli-numero
		      rewrite REG-CLIENTES
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-MOD-3.
;----------
    accept CONMOD-30-SD
	   when BAR   exit.
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    accept CONMOD-31-SD
	   when BAR   loop.
	   when KEND  exit.
	   when KEXIT exit.
   ;move cli-rut1-ws to rut-1.
   ;move 2 to ws-con.
   ;move 8 to ws-tbl.
   ;move 0 to ws-suma.
   ;move 0 to resto-aux1.
   ;perform VALIDA-DIGV11.
   ;if cli-dig-ws = ws-dig
       perform IF-EXIST-CLIENTE-MOD
       move 1  to clim-rut
       rewrite REG-CLIENTE-MOD

       move cli-rut1-ws to cli-rut
       move cli-dig-ws	to cli-digito
       rewrite REG-CLIENTES
       move OK to last-key
       exit.
   ;beep.
   ;message 49, '* Ruc Invalido *'.
   ;wait 1 second.
   ;loop.

CONS-MOD-4.
;----------
    move 0 to fono-nue.
    accept CONMOD-4-SD
	   when OK    perform IF-EXIST-CLIENTE-MOD
		      move 1  to clim-fono
		      rewrite REG-CLIENTE-MOD

		      move fono-nue to cli-fono
		      rewrite REG-CLIENTES
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.
CONS-MOD-5.
;----------
    move 0 to ruta-ws.
    accept CLNMOD-5-SD
	   when OK   perform IF-EXIST-CLIENTE-MOD
		     move 1  to clim-ruta
		     rewrite REG-CLIENTE-MOD

		      move ruta-ws to cli-ruta
		      rewrite REG-CLIENTES
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.




;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			   CONSULTA CLIENTE NUEVO			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSU-CLI-NUEV.
;--------------
    perform OPENREF-IDENTIFICA
	    when ER exit.
    seek FIRST in IDENTIFICA-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Identif.'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read IDENTIFICA-F.
    move iden-empresa to cod-empresa.
    perform OPENREF-CLINUE
	    when ER exit.
    seek FIRST in CLIENTE-NUEV-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Clientes'
		     message 33, '  Nuevo  Vacio  '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read CLIENTE-NUEV-F.

CONSU-CLI-NUEV-001.
;------------------
    accept COD-CLIE-SD
	   when OK    search FIRST for llave-cliente in CLIENTE-NUEV-F
			    when ER beep
				    message 1,	'****************'
				    message 17, '   No  Existe   '
				    message 33, '    Cliente     '
				    message 49, '****************'
				    wait 1 second
				    loop.
			    when OK read CLIENTE-NUEV-F
				    perform RECORRE-CLN-010.
		end-when
	   when UAR   perform RECORRE-CLN-UAR.
	   when DAR   perform RECORRE-CLN-DAR.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

RECORRE-CLN-UAR.
;---------------
    seek FIRST in CLIENTE-NUEV-F.
    read CLIENTE-NUEV-F.
    perform RECORRE-CLN-010.
    exit.

RECORRE-CLN-DAR.
;---------------
    seek LAST in CLIENTE-NUEV-F.
    read CLIENTE-NUEV-F.
    perform RECORRE-CLN-010.
    exit.

RECORRE-CLN-010.
;---------------
    clear.
    show CLIENTE-NUEV-SD.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when KMOD  perform CONS-CLN1-MOD loop.
	 when ENTER perform CONS-CLN-001  loop.
	 when UAR   seek NEXT in CLIENTE-NUEV-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 second
				  seek last in CLIENTE-NUEV-F.
		    read CLIENTE-NUEV-F
		    loop.
	 when DAR   seek PRIOR in CLIENTE-NUEV-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 second
				  seek first in CLIENTE-NUEV-F.
		    read CLIENTE-NUEV-F
		    loop.
    loop.

CONS-CLN-001.			       ; Ramo
;------------
    perform OPENREF-RAMOS
	 when ER exit.
    seek FIRST in RAMOS-F
	 when EOF beep
		  message  1, '****************'
		  message 17, ' Archivo Ramos  '
		  message 33, '     Vacio      '
		  message 49, '****************'
		  wait 1 second
		  exit.
    search FIRST for clin-ramo in RAMOS-F
	   when ER exit.
    read RAMOS-F.

CONS-CLN-011.			       ; Ramo II parte
;------------
    clear
    show COD-RAMO-SD
    show DESC-RAMO-SD
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform REC-RAMOS
			 when OK move cod-ramo-ws to clin-ramo
				 rewrite REG-CLIENTE-NUEV.
	       end-when
    loop.

CONS-CLN-002.			       ; Direccion
;------------
    clear.
    move clin-numero to dire-numero.
    show CLN-DET2-SD.
    show NUMERO-CLI-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-CLN3-MOD.
    loop.

CONS-CLN-003.			       ; Rut
;------------
    clear.
    show CLN-2-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-CLN4-MOD.
    loop.

CONS-CLN-004.			       ; Fono
;------------
    clear.
    show CLN-3-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-CLN5-MOD.
    loop.

CONS-CLN-005.			       ; Fecha nacimiento
;------------
    clear.
    show CLN-4-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  perform CONS-CLN6-MOD.
    loop.

CONS-CLN-006.			       ; Frecuencia Visita
;------------
    clear
    move clin-frec1 to dia-aux-1.
    move clin-frec2 to dia-aux-2.
    move clin-frec3 to dia-aux-3.
    move clin-frec4 to dia-aux-4.
    move clin-frec5 to dia-aux-5.
    move clin-frec6 to dia-aux-6.

    clear.
    message  1, ' Dia de  Visita '.
    message 49, '  L M M J V S   '.
    show DIA-VIS1-SD.
    show DIA-VIS2-SD.
    show DIA-VIS3-SD.
    show DIA-VIS4-SD.
    show DIA-VIS5-SD.
    show DIA-VIS6-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   next.
	  when ENTER next.
	  when KMOD  move 1 to punt-dia-vis
		     perform ACEPTA-SECUENCIA-VIS
			 when OK move dia-aux-1 to clin-frec1
				 move dia-aux-2 to clin-frec2
				 move dia-aux-3 to clin-frec3
				 move dia-aux-4 to clin-frec4
				 move dia-aux-5 to clin-frec5
				 move dia-aux-6 to clin-frec6
				 rewrite REG-CLIENTE-NUEV.
	       end-when
    loop.

CONS-CLN-007.			       ; Ruta
;------------
    clear.
    show CLN-5-SD.
    action
	  when KEXIT exit.
	  when KEND  exit.
	  when BAR   exit.
	  when FAR   exit.
	  when ENTER exit.
	  when KMOD  perform CONS-CLN7-MOD.
    loop.

CONS-CLN1-MOD.
;-------------
    move '                      ' to razon-soc-ws.
    accept CONMOD-1-SD
	   when OK    move razon-soc-ws to clin-razon-soc
		      rewrite REG-CLIENTE-NUEV
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-CLN2-MOD.
;-------------
    move 0 to cod-ramo-ws.
    accept CLNMOD-2-SD
	   when OK    move cod-ramo-ws to clin-ramo
		      rewrite REG-CLIENTE-NUEV
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-CLN3-MOD.
;-------------
    move '                ' to dire-clinue
    accept CONMOD-2-SD
	   when OK    next.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-CLN3-1-MOD.
;---------------
    move '     ' to dire-numero
    accept NUMERO-CLI-SD
	   when OK    move dire-clinue to clin-direccion
		      move dire-numero to clin-numero
		      rewrite REG-CLIENTE-NUEV
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-CLN4-MOD.
;-------------
    accept CONMOD-30-SD
	   when BAR   exit.
	   when KEXIT exit.
	   when KEND  exit.
	   when ER    loop.
    accept CONMOD-31-SD
	   when BAR   loop.
	   when KEND  exit.
	   when KEXIT exit.
    move cli-rut1-ws to rut-1.
    move 2 to ws-con.
    move 8 to ws-tbl.
    move 0 to ws-suma.
    move 0 to resto-aux1.
    perform VALIDA-DIGV11.
    if cli-dig-ws = ws-dig
       move cli-rut1-ws to clin-rut
       move cli-dig-ws	to clin-digito
       rewrite REG-CLIENTE-NUEV
       move OK to last-key
       exit.
    beep.
    message 49, '* Ruc Invalido *'.
    wait 1 second.
    loop.

CONS-CLN5-MOD.
;-------------
    move 00000000000 to fono-nue.
    accept CLNMOD-3-SD
	   when OK    move fono-nue to clin-fono
		      rewrite REG-CLIENTE-NUEV
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-CLN6-MOD.
;-------------
    move 0 to fecha-nacimiento.
    accept CLNMOD-40-SD
	   when OK    move fecha-nacimiento to clin-fecha-nac
		      rewrite REG-CLIENTE-NUEV
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

CONS-CLN7-MOD.
;-------------
    move 0 to ruta-ws.
    accept CLNMOD-5-SD
	   when OK    move ruta-ws to clin-ruta
		      rewrite REG-CLIENTE-NUEV
		      exit.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			       CONSULTA PRODUCTOS			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSU-PRODUCTOS.
;---------------
    move 'Consulta produc.' to proc-ws.
    perform OPENREF-PRODUCTOS
	    when ER exit.
    seek FIRST in PRODUCTOS-F
	    when EOF message 1,  '****************'
		     message 17, 'Archivo Producto'
		     message 33, '     Vacio      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read PRODUCTOS-F.

CONSU-PROD-001.
;--------------
    move 0 to ws-cod-producto.
    accept COD-PRODUCTO-SD
	  when OK    search FIRST for ws-cod-producto in PRODUCTOS-F
			   when ER beep
				   message 1,  '****************'
				   message 17, '   No  Existe   '
				   message 33, '    Producto    '
				   message 49, '****************'
				   wait 1 second
				   loop.
			   when OK read PRODUCTOS-F
				   perform RECORRE-CP-010.
	       end-when
	  when UAR   perform RECORRE-CP-UAR.
	  when DAR   perform RECORRE-CP-DAR.
	  when KEXIT exit.
	  when KEND  exit.
    loop.

RECORRE-CP-UAR.
;--------------
    seek FIRST in PRODUCTOS-F.
    read CLIENTES-F.
    perform RECORRE-CP-010.
    exit.

RECORRE-CP-DAR.
;--------------
    seek LAST in PRODUCTOS-F.
    read CLIENTES-F.
    perform RECORRE-CP-010.
    exit.

RECORRE-CP-010.
;--------------
    show REVISA-PROD1-SD.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when FAR   perform RECORRE-CP-020.
	 when ENTER perform RECORRE-CP-020.
	 when KNEXT perform TOTAL-GENERAL.
	 when UAR   seek NEXT in PRODUCTOS-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 second
				  seek LAST in PRODUCTOS-F.
		    read PRODUCTOS-F.
	 when DAR   seek PRIOR in PRODUCTOS-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUCTOS-F.
		    read PRODUCTOS-F.
    loop.

RECORRE-CP-020.
;--------------
    show REVISA-PRDES-SD.
    fast-action
	 when KEND  exit.
	 when KEXIT exit.
	 when FAR   exit.
	 when ENTER exit.
	 when KNEXT perform TOTAL-GENERAL exit.
	 when UAR   seek NEXT in PRODUCTOS-F
			 when EOF message 49, '-Final  archivo-'
				  beep
				  wait 1 second
				  seek LAST in PRODUCTOS-F.
		    read PRODUCTOS-F.
	 when DAR   seek PRIOR in PRODUCTOS-F
			 when EOF message 49, '-Inicio archivo-'
				  beep
				  wait 1 second
				  seek FIRST in PRODUCTOS-F.
		    read PRODUCTOS-F.
    loop.

TOTAL-GENERAL.
;-------------
    move 0 to ws-total-general.
    seek FIRST in PRODUCTOS-F.
    perform TOTAL-GENERAL-001.
    beep.
    show REVISA-PROD2-SD.
    action.
    seek FIRST in PRODUCTOS-F
    read PRODUCTOS-F.
    exit.

TOTAL-GENERAL-001.
;-----------------
    read PRODUCTOS-F.
    if punt-zof-ext = 2
       add prod-cant-vend   to ws-total-general
    else
       add prod-cant-oferta to ws-total-general
    end-if
    seek NEXT in PRODUCTOS-F
	when EOF exit.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			     CONSULTA CARGA CAMION			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSULTA-CARGA-CAMION.
;---------------------
    move ' Carga Camion  ' to proc-ws.
    perform OPENREF-CARGA-CAMION
	    when ER exit.
    seek FIRST in CARGA-CAMION-F
	    when EOF message 1,  '****************'
		     message 17, ' No se registra '
		     message 33, '     Carga      '
		     message 49, '****************'
		     wait 1 second
		     exit.
    read CARGA-CAMION-F.
    move 0		 to cant-z-e.
    move cc-cantidad-ext to cant-ext.
    move cc-cantidad-zof to cant-zof.
    add  cant-zof	 to cant-z-e.
    add  cant-ext	 to cant-z-e.

CONSU-CC-001.
;------------
    show CC-SD.
    fast-action
	   when UAR   perform SGTE-CC-CAMION.
	   when DAR   perform ANTE-CC-CAMION.
	   when KEXIT exit.
	   when KEND  exit.
    loop.

SGTE-CC-CAMION.
;--------------
    seek NEXT in CARGA-CAMION-F
	 when EOF message 49, '- Fin  Archivo -'
		  beep
		  wait 1 second
		  seek LAST in CARGA-CAMION-F.
    read CARGA-CAMION-F.
    move 0		 to cant-z-e.
    move cc-cantidad-ext to cant-ext.
    move cc-cantidad-zof to cant-zof.
    add  cant-zof	 to cant-z-e.
    add  cant-ext	 to cant-z-e.
    exit.

ANTE-CC-CAMION.
;--------------
    seek PRIOR in CARGA-CAMION-F
	 when EOF message 49, '-Inicio Archivo-'
		  beep
		  wait 1 second
		  seek FIRST in CARGA-CAMION-F.
    read CARGA-CAMION-F.
    move 0		 to cant-z-e.
    move cc-cantidad-ext to cant-ext.
    move cc-cantidad-zof to cant-zof.
    add  cant-zof	 to cant-z-e.
    add  cant-ext	 to cant-z-e.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				CONSULTA GENERAL			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CONSULTA-GENERAL.
;----------------
    move 'Consulta Ventas' to proc-ws.
    perform OPENREF-IDENTIFICA
	 when ER exit.
    seek FIRST in IDENTIFICA-F
	 when EOF exit.
    read IDENTIFICA-F.
    show CG-SD.
    action
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				 COMUNICACIONES 			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
COMUNICACIONES.
;--------------
    move ' Comunicaciones ' to proc-ws.
    move 1		    to punt-comu.
    perform OPENREF-IDENTIFICA
	 when OK seek FIRST in IDENTIFICA-F
		      when OK read IDENTIFICA-F
			      move iden-codigo to cod-vendedor.
	      end-when

PROCESO-COMU-000.
;----------------
    message  1, '****************'
    message 49, '****************'
    examine punt-comu
	 when 0 move 3 to punt-comu	  loop.
	 when 1 message 17, '    Directa     '.
	 when 2 message 17, '     Modem      '.
	 when 3 message 17, '     Cuna       '.
	 when 4 move 1 to punt-comu	  loop.
    message 33, '    Yes / No    '
    action
	 when ENTER perform PROCESO-COMU-001 exit.
	 when YES   perform PROCESO-COMU-001 exit.
	 when NO    add 1 to punt-comu.
	 when FAR   add 1 to punt-comu.
	 when BAR   subtract 1 from punt-comu.
	 when KEXIT exit.
	 when KEND  exit.
    loop.

PROCESO-COMU-001.
;----------------
    examine punt-comu
	 when 1 move 0 to punt-comu.
	 when 2 move 1 to punt-comu.
	 when 3 move 2 to punt-comu.
    perform PROCESO-COMU-002.
    exit.

PROCESO-COMU-002.
;----------------
    message  1, '****************'.
    message 17, ' Coneccion O.K. '.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action
	 when YES   perform PROCESO-COMU-010 exit.
	 when ENTER perform PROCESO-COMU-010 exit.
	 when NO    exit.
	 when KEXIT exit.
	 when KEND  exit.
    loop.

PROCESO-COMU-010.
;----------------
    perform FILELIST-COMUNICA
	    when ER exit.
    move OK to LAST-KEY
    perform LLAMA-RUTINA
    move OK to LAST-KEY
    exit.

FILELIST-COMUNICA.
;-----------------
    clear.
    message 1 'Espere .........'.
    move 'FILELIST'  to file-name.
    open update FILELIST-F
	 when ER create FILELIST-F
		 loop.
    reset FILELIST-F.
    move 'PC '             to TIPO-HOST-1.
    move '96'              to VELOCIDAD-1.
    move IDEN-CODIGO	   to CODI-VEND-1.
    move IDEN-FONO	   to NUM-TELEFONO
    move IDEN-AREA	   to NUM-AREA.
    move IDEN-CODIGO	   to SUBMIT-FILE.
    move IDEN-CODIGO	   to IDENTIF-PTC.
    move PUNT-COMU	   to COMM-MODE.
    write HOST-PARAMS-R.
    exit.

LLAMA-RUTINA.
;------------
    move 'SUB710' to FILE-NAME.
    open REF PROGRAMA-F
	 when ER clear
		 beep
		 message 1, ' SUB710 NO ESTA '
		 wait 1 seconds
		 exit.
    call PROGRAMA-F
	 when OK perform BORRA-DATOS
		 move 1 to carga-ok.
    move 'FILELIST' to FILE-NAME.
    erase FILELIST-F.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			     CARGA  DATOS  ALL				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
CARGA-DATOS-ALL.
;---------------
    move ' Carga de Datos ' to PROC-WS.
    move '      '           to carga-codigo.
    move ' '                to shift-char.
    move 1		    to punt-comu.
    clear.
    message  1, '  Carga Datos   '.
    message 17, '****************'.
    accept carga-codigo-sd.
    if carga-codigo = '      ' loop.
    move carga-codigo to cod-vendedor.
    move '@' to shift-char.

PROCESO-COM-000.
;---------------
    message  1, '****************'
    message 49, '****************'
    examine punt-comu
	 when 0 move 3 to punt-comu	  loop.
	 when 1 message 17, '    Directa     '.
	 when 2 message 17, '     Modem      '.
	 when 3 message 17, '     Cuna       '.
	 when 4 move 1 to punt-comu	  loop.
    message 33, '    Yes / No    '
    action
	 when ENTER perform PROCESO-COM-001 exit.
	 when YES   perform PROCESO-COM-001 exit.
	 when NO    add 1 to punt-comu.
	 when FAR   add 1 to punt-comu.
	 when BAR   subtract 1 from punt-comu.
	 when KEXIT exit.
	 when KEND  exit.
    loop.

PROCESO-COM-001.
;---------------
    examine punt-comu
	 when 1 move 0 to punt-comu.
	 when 2 move 1 to punt-comu.
	 when 3 move 2 to punt-comu.
    perform PROCESO-CARGA-000.
    exit.

PROCESO-CARGA-000.
;-----------------
    message  1, '****************'.
    message 17, ' Coneccion O.K. '.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action
	 when YES   perform PROCESO-CARGA-010 exit.
	 when ENTER perform PROCESO-CARGA-010 exit.
	 when NO    exit.
	 when KEXIT exit.
	 when KEND  exit.
    loop.

PROCESO-CARGA-010.
;-----------------
    perform FILELIST-CARGA
	    when ER exit.
    move OK to LAST-KEY
    perform LLAMA-RUTINA
    move OK to LAST-KEY
    exit.

FILELIST-CARGA.
;--------------
    clear.
    message 1 'Espere .........'.
    move 'FILELIST'  to file-name.
    open update FILELIST-F
	 when ER create FILELIST-F
		 loop.
    reset FILELIST-F.
    move 'PC '          to TIPO-HOST-1.
    move '96'           to VELOCIDAD-1.
    move IDEN-CODIGO	to CODI-VEND-1.
    move IDEN-FONO	to NUM-TELEFONO.
    move IDEN-AREA	to NUM-AREA.
    move CARGA-CODIGO	to SUBMIT-FILE.
    move CARGA-CODIGO	to IDENTIF-PTC.
    move PUNT-COMU	to COMM-MODE.
    write HOST-PARAMS-R.
    exit.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ			      BORRA ARCHIVOS DE SALIDA			      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
BORRA-DATOS.
;-----------
    beep.
    message  1, '****************'.
    message 17, ' Borra Archivos '.
    message 33, '    Yes / No    '.
    message 49, '****************'.
    action
	when ENTER perform BORRA-DATOS-001 exit.
	when YES   perform BORRA-DATOS-001 exit.
	when NO    exit.
	when KEXIT exit.
	when KEND  exit.
    loop.

BORRA-DATOS-001.
;---------------
    message  1, '****************'.
    message 17, '  Actualizando  '.
    message 33, '   Archivos...  '.
    message 49, '****************'.

    perform OPENUP-CLINUE.
    erase CLIENTE-NUEV-F

    perform OPENUP-CABECERA.
    erase CABECERA-F.

    perform OPENUP-DETALLE.
    erase DETALLE-PED-F.

    perform OPENUP-ATENCION.
    erase ATENCION-F.

    perform OPENUP-MENSAJES.
    erase MENSAJES-F.

    perform OPENUP-MUESTREO.
    erase MUESTREO-F.

    perform OPENUP-CENSO.
    erase CENSO-F.

    perform OPENUP-ENCUESTA.
    erase ENCUESTA-F.

    perform OPENUP-AUDITORIA.
    erase AUDITORIA-F.

    perform OPENUP-CARGA-CAMION.
    erase CARGA-CAMION-F.

    perform OPENUP-CLIMOD.
    erase CLIENTE-MOD-F.


    perform OPENREF-PRODUCTOS
	when ER exit.
    seek FIRST in PRODUCTOS-F
	when EOF exit.
    read PRODUCTOS-F.
    perform ACTUALIZA-PRODUCTOS.
    exit.

ACTUALIZA-PRODUCTOS.
;-------------------
    move 0 to prod-cant-vend.
    move 0 to prod-cant-oferta.
    rewrite REG-PRODUCTOS.
    seek NEXT in PRODUCTOS-F
	 when EOF exit.
    read PRODUCTOS-F.
    loop.

;ีออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออธ
;ณ				 OPEN ARCHIVOS				      ณ
;ิออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออพ
OPENREF-IDENTIFICA.
;------------------
    move 'ID'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF IDENTIFICA-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo Identif.'
		 message 49, '****************'
		 wait 1 second
		 move 0 to carga-ok.
    exit.

OPENREF-CLIENTES.
;----------------
    move 'CL'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF CLIENTES-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo Clientes'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-MENSAJE-CLIENTE.
;-----------------------
    move 'MC'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF MENSAJE-CLI-F
    exit.

OPENREF-CLIEN2.
;--------------
    move 'CL'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF CLIENTES-F
    exit.

OPENREF-ATENCION.
;----------------
    move 'AT'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF ATENCION-F
    exit.

OPENREF-MOTIVOS.
;---------------
    move 'NC'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF MOTIVOS-NO-COMPRA-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo  Motivos'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-NIVEL-PREC.
;------------------
    move 'NP'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF NIVELES-PREC-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo  Precios'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-PRODUCTOS.
;-----------------
    move 'PR'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF PRODUCTOS-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo Product.'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-DETALLE.
;---------------
    move 'DE'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF DETALLE-PED-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo Detalles'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-DETA2.
;-------------
    move 'DE'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF DETALLE-PED-F
    exit.

OPENREF-CABECERA.
;----------------
    move 'CA'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF CABECERA-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo Cabecera'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-PROD-CENSO.
;------------------
    move 'PC'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF PRODUC-CENSO-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No Existen   '
		 message 33, 'Productos  Censo'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-EMBOTELLADORA.
;---------------------
    move 'EM'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF EMBOTELLADORA-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo Embotell'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-PROD-AUDIT.
;------------------
    move 'PA'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF PRODUC-AUDIT-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No Existen   '
		 message 33, 'Productos Audit.'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-CLINUE.
;--------------
    move 'CN'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF CLIENTE-NUEV-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No Existen   '
		 message 33, 'Clientes  Nuevos'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-MUESTREO.
;----------------
    move 'MU'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF MUESTREO-F.
    exit.

OPENREF-CABE2.
;-------------
    move 'CA'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF CABECERA-F
    exit.

OPENREF-CARGA-CAMION.
;--------------------
    move 'CC'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF CARGA-CAMION-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo de Carga'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENREF-RAMOS.
;-------------
    move 'RA'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open REF RAMOS-F
	 when ER beep
		 message 1,  '****************'
		 message 17, '   No  Existe   '
		 message 33, 'Archivo de Ramos'
		 message 49, '****************'
		 wait 1 second.
    exit.

OPENUP-CABECERA.
;---------------
    move 'CA'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE CABECERA-F
	 when ER create CABECERA-F
		 loop.
    exit.

OPENUP-ATENCION.
;---------------
    move 'AT'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE ATENCION-F
	 when ER create ATENCION-F
		 loop.
    exit.

OPENUP-CLINUE.
;-------------
    move 'CN'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE CLIENTE-NUEV-F
	 when ER create CLIENTE-NUEV-F
		 loop.
    exit.


OPENUP-CLIMOD.
;-------------
    move 'CM'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE CLIENTE-MOD-F
	 when ER create CLIENTE-MOD-F
		 loop.
    exit.


OPENUP-DETALLE.
;--------------
    move 'DE'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE DETALLE-PED-F
	 when ER create DETALLE-PED-F
		 loop.
    exit.

OPENUP-CLIENTES.
;---------------
    move 'CL'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE CLIENTES-F
	 when ER create CLIENTES-F
		 loop.
    exit.

OPENUP-MENSAJES.
;---------------
    move 'ME'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE MENSAJES-F
	 when ER create MENSAJES-F
		 loop.
    exit.

OPENUP-CARGA-CAMION.
;-------------------
    move 'CC'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE CARGA-CAMION-F
	 when ER create CARGA-CAMION-F
		 loop.
    exit.

OPENUP-CENSO.
;------------
    move 'CE'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE CENSO-F
	 when ER create CENSO-F
		 loop.
    exit.

OPENUP-ENCUESTA.
;---------------
    move 'EN'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE ENCUESTA-F
	 when ER create ENCUESTA-F
		 loop.
    exit.

OPENUP-AUDITORIA.
;----------------
    move 'AU'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE AUDITORIA-F
	 when ER create AUDITORIA-F
		 loop.
    exit.

OPENUP-MUESTREO.
;---------------
    move 'MU'         to nombre-fn.
    move cod-vendedor to codigo-fn.
    move ws-file-name to file-name.
    open UPDATE MUESTREO-F
	 when ER create MUESTREO-F
		 loop.
    exit.

END-OF-PROGRAM.

    exit.

